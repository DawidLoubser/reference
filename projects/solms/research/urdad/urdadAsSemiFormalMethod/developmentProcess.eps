%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 111 575 680
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 1.3 
%%For: 
%%Title: 
%%CreationDate: Friday, September 18, 2009 6:14:29 AM SAST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
652 667 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.0 0.0 0.0 RG
[ 1.0 0.0 0.0 1.0 0.0 0.0 ] defaultmatrix matrix concatmatrix setmatrix
1.0 w
2 J
0 j
10.0 M
[ ] 0.0 d
1.0 1.0 1.0 RG
0.0 0.0 652.0 667.0 rf
0.0 0.0 0.0 RG
1.0 1.0 scale
-25.0 -60.0 translate
1.0 1.0 1.0 RG
5.0 5.0 682.0 732.0 rf
0 J
1 j
0.258824 0.258824 0.258824 RG
2.0 w
35.0 717.0 35.0 103.0 L
161.0 717.0 161.0 103.0 L
1.0 w
0.698039 0.698039 0.698039 RG
42.0 423.0 101.0 45.0 18.0 18.0 FRREC
1.0 0.8 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [39.0 420.0 140.0 465.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.8 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
39.0 420.0 101.0 45.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
39.0 420.0 101.0 45.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
59.0 433.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Technolofy) show
Q
46.0 445.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(neutral process) show
Q
71.0 458.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(design) show
Q
0.698039 0.698039 0.698039 RG
44.0 134.0 78.0 45.0 18.0 18.0 FRREC
1.0 0.8 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [41.0 131.0 119.0 176.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.8 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
41.0 131.0 78.0 45.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
41.0 131.0 78.0 45.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
63.0 144.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(select) show
Q
55.5 156.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(use case) show
Q
48.0 169.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(for iteration) show
Q
0.698039 0.698039 0.698039 RG
45.0 204.0 66.0 45.0 18.0 18.0 FRREC
1.0 0.8 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [42.0 201.0 108.0 246.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.8 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
42.0 201.0 66.0 45.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
42.0 201.0 66.0 45.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
56.0 214.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(define ) show
Q
50.5 226.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(use case) show
Q
53.0 239.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(contract) show
Q
0.698039 0.698039 0.698039 RG
58.0 568.0 66.0 57.0 18.0 18.0 FRREC
1.0 0.8 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [55.0 565.0 121.0 622.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.8 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
55.0 565.0 66.0 57.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
55.0 565.0 66.0 57.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
68.0 578.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(modify ) show
Q
62.5 590.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(business) show
Q
65.5 603.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(process) show
Q
69.5 616.084717 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(design) show
Q
0.258824 0.258824 0.258824 RG
0 360 110.0 108.0 18.0 18.0 FOVL
0 360 110.0 108.0 18.0 18.0 OVL
2.0 w
161.0 717.0 161.0 103.0 L
334.0 717.0 334.0 103.0 L
1.0 w
0.698039 0.698039 0.698039 RG
202.0 400.0 80.0 33.0 18.0 18.0 FRREC
1.0 0.941176 0.705882 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [199.0 397.0 279.0 430.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9411765 0.7058824]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
199.0 397.0 80.0 33.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
199.0 397.0 80.0 33.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
220.5 410.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(modify) show
Q
206.5 422.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(architecture) show
Q
0.698039 0.698039 0.698039 RG
195.0 638.0 80.0 33.0 18.0 18.0 FRREC
1.0 0.941176 0.705882 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [192.0 635.0 272.0 668.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9411765 0.7058824]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
192.0 635.0 80.0 33.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
192.0 635.0 80.0 33.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
213.5 648.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(modify) show
Q
199.5 660.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(architecture) show
Q
0.698039 0.698039 0.698039 RG
3 240 302 FPL
260 289
280 302
260 316
1.0 0.941176 0.705882 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [237.0 286.0 277.0 313.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9411765 0.7058824]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
3 237 299 FPL
257 286
277 299
257 313
0.258824 0.258824 0.258824 RG
3 237 299 CPL
257 286
277 299
257 313
0.698039 0.698039 0.698039 RG
3 212 470 FPL
232 457
252 470
232 484
1.0 0.941176 0.705882 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [209.0 454.0 249.0 481.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 0.9411765 0.7058824]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
3 209 467 FPL
229 454
249 467
229 481
0.258824 0.258824 0.258824 RG
3 209 467 CPL
229 454
249 467
229 481
2.0 w
334.0 717.0 334.0 103.0 L
463.0 717.0 463.0 103.0 L
1.0 w
0.698039 0.698039 0.698039 RG
349.0 400.0 100.0 105.0 18.0 18.0 FRREC
0.8 0.8 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [346.0 397.0 446.0 502.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
346.0 397.0 100.0 105.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
346.0 397.0 100.0 105.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
365.0 410.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(implement ) show
Q
369.0 422.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(business ) show
Q
372.0 435.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(process ) show
Q
361.5 448.084717 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(for use case) show
Q
377.5 460.733643 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(within ) show
Q
353.0 473.382568 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(implementation) show
Q
357.0 486.031494 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(architecture &) show
Q
361.0 498.68042 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(technologies) show
Q
0.698039 0.698039 0.698039 RG
349.0 568.0 100.0 45.0 18.0 18.0 FRREC
0.8 0.8 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [346.0 565.0 446.0 610.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 0.8 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
346.0 565.0 100.0 45.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
346.0 565.0 100.0 45.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
377.5 578.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(update) show
Q
353.0 590.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(implementation) show
Q
373.0 603.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(mapping) show
Q
0.258824 0.258824 0.258824 RG
2.0 w
463.0 717.0 463.0 103.0 L
580.0 717.0 580.0 103.0 L
1.0 w
0.698039 0.698039 0.698039 RG
481.0 241.0 98.0 57.0 18.0 18.0 FRREC
0.894118 0.878431 0.894118 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [478.0 238.0 576.0 295.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.89411765 0.8784314 0.89411765]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
478.0 238.0 98.0 57.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
478.0 238.0 98.0 57.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
484.5 251.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(generate tests ) show
Q
513.5 263.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(from) show
Q
501.0 276.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(use case ) show
Q
505.0 289.084717 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(contract) show
Q
0.698039 0.698039 0.698039 RG
3 485 533 FPL
508 520
532 533
508 547
0.894118 0.878431 0.894118 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [482.0 517.0 529.0 544.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.89411765 0.8784314 0.89411765]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
3 482 530 FPL
505 517
529 530
505 544
0.258824 0.258824 0.258824 RG
3 482 530 CPL
505 517
529 530
505 544
2.0 w
580.0 717.0 580.0 103.0 L
667.0 717.0 667.0 103.0 L
1.0 w
0.698039 0.698039 0.698039 RG
595.0 582.0 66.0 57.0 18.0 18.0 FRREC
0.890196 0.890196 0.752941 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [592.0 579.0 658.0 636.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8901961 0.8901961 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
592.0 579.0 66.0 57.0 18.0 18.0 FRREC
0.258824 0.258824 0.258824 RG
592.0 579.0 66.0 57.0 18.0 18.0 RREC
0.0 0.0 0.0 RG
608.5 592.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(make ) show
Q
600.5 604.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(use case) show
Q
600.0 617.435791 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(available ) show
Q
602.5 630.084717 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(to users) show
Q
0.698039 0.698039 0.698039 RG
0 360 619.0 692.0 18.0 18.0 FOVL
1.0 1.0 1.0 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [616.0 689.0 634.0 707.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
0 360 616.0 689.0 18.0 18.0 FOVL
0.258824 0.258824 0.258824 RG
0 360 616.0 689.0 18.0 18.0 OVL
0 360 621.0 694.0 8.0 8.0 FOVL
0 360 621.0 694.0 8.0 8.0 OVL
2.0 w
newpath
161.0 70.0 m
334.0 70.0 l
334.0 103.0 l
161.0 103.0 l
161.0 70.0 l
h
S
1.0 w
0.0 0.0 0.0 RG
213.5 83.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Architecture) show
Q
0.258824 0.258824 0.258824 RG
2.0 w
newpath
334.0 70.0 m
463.0 70.0 l
463.0 103.0 l
334.0 103.0 l
334.0 70.0 l
h
S
1.0 w
0.0 0.0 0.0 RG
355.5 83.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Implementation) show
Q
376.0 95.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Mapping) show
Q
0.258824 0.258824 0.258824 RG
2.0 w
newpath
35.0 70.0 m
161.0 70.0 l
161.0 103.0 l
35.0 103.0 l
35.0 70.0 l
h
S
1.0 w
0.0 0.0 0.0 RG
48.0 83.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Business Analysis) show
Q
0.258824 0.258824 0.258824 RG
2.0 w
newpath
463.0 70.0 m
580.0 70.0 l
580.0 103.0 l
463.0 103.0 l
463.0 70.0 l
h
S
1.0 w
0.0 0.0 0.0 RG
472.5 83.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Quality Assurance) show
Q
0.258824 0.258824 0.258824 RG
119.0 217.0 7.0 98.0 rf
bias 119.0 217.0 7.0 98.0 rs unbias
2.0 w
newpath
580.0 70.0 m
667.0 70.0 l
667.0 103.0 l
580.0 103.0 l
580.0 70.0 l
h
S
1.0 w
0.0 0.0 0.0 RG
594.0 83.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(Operations) show
Q
0.698039 0.698039 0.698039 RG
170.0 493.0 80.0 21.0 rf
0.8 1.0 0.8 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [167.0 490.0 247.0 511.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 1.0 0.8]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
167.0 490.0 80.0 21.0 rf
0.258824 0.258824 0.258824 RG
bias 167.0 490.0 80.0 21.0 rs unbias
0.0 0.0 0.0 RG
174.5 503.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(architecture) show
Q
0.698039 0.698039 0.698039 RG
47.0 262.0 63.0 33.0 rf
0.8 1.0 0.8 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [44.0 259.0 107.0 292.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 1.0 0.8]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
44.0 259.0 63.0 33.0 rf
0.258824 0.258824 0.258824 RG
bias 44.0 259.0 63.0 33.0 rs unbias
0.0 0.0 0.0 RG
51.0 272.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(use case) show
Q
53.5 284.786865 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(contract) show
Q
0.258824 0.258824 0.258824 RG
273.0 476.0 7.0 63.0 rf
bias 273.0 476.0 7.0 63.0 rs unbias
525.0 336.0 56.0 7.0 rf
bias 525.0 336.0 56.0 7.0 rs unbias
0.698039 0.698039 0.698039 RG
73.0 514.0 36.0 21.0 rf
0.8 1.0 0.8 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [70.0 511.0 106.0 532.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8 1.0 0.8]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
70.0 511.0 36.0 21.0 rf
0.258824 0.258824 0.258824 RG
bias 70.0 511.0 36.0 21.0 rs unbias
0.0 0.0 0.0 RG
79.0 524.137939 moveto
q 1 -1 scale
/Arial-Bold findfont 11.0 scalefont setfont
(PIM) show
Q
0.258824 0.258824 0.258824 RG
2 339 576 OPL
346 572
339 568
newpath
346.0 572.0 m
121.0 572.0 l
S
2 84 504 OPL
88 511
92 504
newpath
88.0 511.0 m
88.0 465.0 l
S
2 80 124 OPL
84 131
88 124
newpath
84.0 131.0 m
84.0 123.0 l
84.0 123.0 84.0 117.0 90.0 117.0  c
90.0 117.0 m
110.0 117.0 l
S
2 74 194 OPL
78 201
82 194
newpath
78.0 201.0 m
78.0 176.0 l
S
2 71 252 OPL
75 259
79 252
newpath
75.0 259.0 m
75.0 246.0 l
S
2 202 471 OPL
209 467
202 463
newpath
209.0 467.0 m
178.0 467.0 l
178.0 467.0 172.0 467.0 172.0 461.0  c
172.0 461.0 m
172.0 305.0 l
172.0 305.0 172.0 299.0 178.0 299.0  c
178.0 299.0 m
237.0 299.0 l
S
0.0 0.0 0.0 RG
177.5 321.137939 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
( [architecture ) show
Q
202.0 333.786865 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(can) show
Q
177.5 346.435791 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(accommodate) show
Q
194.0 359.084717 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(quality ) show
Q
180.0 371.733643 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(requirements) show
Q
179.0 384.382568 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(for use case]) show
Q
0.258824 0.258824 0.258824 RG
2 339 601 OPL
346 597
339 593
newpath
346.0 597.0 m
238.0 597.0 l
238.0 597.0 232.0 597.0 232.0 603.0  c
232.0 603.0 m
232.0 635.0 l
S
2 253 390 OPL
257 397
261 390
newpath
257.0 397.0 m
257.0 313.0 l
S
0.0 0.0 0.0 RG
264.0 323.137939 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
( [architecture) show
Q
275.0 335.786865 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(does not) show
Q
268.0 348.435791 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(adequately ) show
Q
276.0 361.084717 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(address) show
Q
279.0 373.733643 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(quality ) show
Q
265.0 386.382568 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(requirements) show
Q
264.0 399.031494 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(for use case]) show
Q
0.258824 0.258824 0.258824 RG
2 225 447 OPL
229 454
233 447
newpath
229.0 454.0 m
229.0 430.0 l
S
2 225 483 OPL
229 490
233 483
newpath
229.0 490.0 m
229.0 481.0 l
S
2 533 350 OPL
529 343
525 350
newpath
529.0 343.0 m
529.0 365.0 l
529.0 365.0 529.0 371.0 523.0 371.0  c
523.0 371.0 m
389.0 371.0 l
389.0 371.0 383.0 371.0 383.0 377.0  c
383.0 377.0 m
383.0 397.0 l
S
2 475 534 OPL
482 530
475 526
newpath
482.0 530.0 m
402.0 530.0 l
402.0 530.0 396.0 530.0 396.0 536.0  c
396.0 536.0 m
396.0 565.0 l
S
2 92 629 OPL
88 622
84 629
newpath
88.0 622.0 m
88.0 684.0 l
88.0 684.0 88.0 690.0 94.0 690.0  c
94.0 690.0 m
499.0 690.0 l
499.0 690.0 505.0 690.0 505.0 684.0  c
505.0 684.0 m
505.0 544.0 l
S
0.0 0.0 0.0 RG
343.5 703.137939 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
( [functional requirements) show
Q
352.0 715.786865 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(for use case not met]) show
Q
0.258824 0.258824 0.258824 RG
2 279 645 OPL
272 649
279 653
newpath
272.0 649.0 m
499.0 649.0 l
499.0 649.0 505.0 649.0 505.0 643.0  c
505.0 643.0 m
505.0 544.0 l
S
0.0 0.0 0.0 RG
352.5 665.137939 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
( [quality requirements ) show
Q
354.5 677.786865 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(for use case not met]) show
Q
0.258824 0.258824 0.258824 RG
2 584 580 OPL
592 581
589 574
newpath
592.0 581.0 m
529.0 530.0 l
S
0.0 0.0 0.0 RG
583.5 541.137939 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
( [use case ) show
Q
590.5 553.786865 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(contract) show
Q
590.5 566.435791 moveto
q 1 -1 scale
/Arial findfont 11.0 scalefont setfont
(realized]) show
Q
0.258824 0.258824 0.258824 RG
2 550 329 OPL
554 336
558 329
newpath
554.0 336.0 m
554.0 314.0 l
554.0 314.0 554.0 308.0 548.0 308.0  c
548.0 308.0 m
530.0 308.0 l
530.0 308.0 524.0 308.0 524.0 302.0  c
524.0 302.0 m
524.0 295.0 l
S
2 621 682 OPL
625 689
629 682
newpath
625.0 689.0 m
625.0 636.0 l
S
2 471 253 OPL
478 249
471 245
newpath
478.0 249.0 m
126.0 249.0 l
S
2 536 526 OPL
529 530
536 534
newpath
529.0 530.0 m
547.0 530.0 l
547.0 530.0 553.0 530.0 553.0 524.0  c
553.0 524.0 m
553.0 343.0 l
S
2 266 529 OPL
273 525
266 521
newpath
273.0 525.0 m
106.0 525.0 l
S
2 253 279 OPL
257 286
261 279
newpath
257.0 286.0 m
257.0 262.0 l
257.0 262.0 257.0 256.0 251.0 256.0  c
251.0 256.0 m
126.0 256.0 l
S
2 85 413 OPL
89 420
93 413
newpath
89.0 420.0 m
89.0 381.0 l
89.0 381.0 89.0 375.0 95.0 375.0  c
95.0 375.0 m
134.0 375.0 l
134.0 375.0 140.0 375.0 140.0 369.0  c
140.0 369.0 m
140.0 300.0 l
140.0 300.0 140.0 294.0 134.0 294.0  c
134.0 294.0 m
126.0 294.0 l
S
2 126 149 OPL
119 153
126 157
newpath
119.0 153.0 m
134.0 153.0 l
134.0 153.0 140.0 153.0 140.0 159.0  c
140.0 159.0 m
140.0 221.0 l
140.0 221.0 140.0 227.0 134.0 227.0  c
134.0 227.0 m
126.0 227.0 l
S
2 339 495 OPL
346 491
339 487
newpath
346.0 491.0 m
280.0 491.0 l
S
2 112 308 OPL
119 304
112 300
newpath
119.0 304.0 m
75.0 304.0 l
75.0 304.0 69.0 304.0 69.0 298.0  c
69.0 298.0 m
69.0 292.0 l
S
2 266 505 OPL
273 501
266 497
newpath
273.0 501.0 m
247.0 501.0 l
S
end end restore showpage

%%Trailer
%%EOF
