<?xml version="1.0" encoding="UTF-8"?>
<!-- @todo Nees expansion! -->
<article xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      id="projects.solms.research.java.polyMessageArguments.polyMessageArguments">
    
    <articleinfo>
        <title>Extending the Java Programming Language with Polymorphic Method Arguments</title>
    </articleinfo>
    
    <abstract>Polymorphism in message arguments at a language-level will enable many of the
    techniques available to users of higher-level frameworks.</abstract>

    <!--
    
     - new keyword to define the (nameless) "process request" operation
       (for backwards compatability with normal method dispatch)
     e.g. 
        public void ^( RequestMessageType r )
    
    
     - new contract mechanism (like Interfaces) to enable substitutability
     e.g.
    
        /** Specifies the requests an account should handle */
        public servicecontract Account
        {
            BalanceRequest returns double;
            DebitRequest returns void throws InsufficientFundsException;
        }
    
    -->
    
</article>
