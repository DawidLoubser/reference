<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/samples/docbook/xml/docbookx.dtd">
-->
<section id="projects.solms.training.courses.businessAnalysis.uml.dynamicView.introduction.introduction"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Introduction</title>
  <para>
    So far we looked at 
    <itemizedlist>
      <listitem>
        <para>
           <emphasis>use case diagrams</emphasis> which identified
           <itemizedlist>
             <listitem><para>
               the external objects interfacing with the system and
             </para></listitem>
             <listitem><para>
               the use they get out of the system and at
             </para></listitem>
             
           </itemizedlist>
        </para>
        <para>
          <emphasis>object and class diagrams</emphasis> which are used to 
          document the system structure including
          <itemizedlist>
            <listitem><para>
              the objects and their abstractions as classes,              
            </para></listitem>
            <listitem><para>
              the attributes of the objects,
            </para></listitem>
            <listitem><para>
              the services they supply and
            </para></listitem>
            <listitem><para>
              the relationships they have with other objects.
            </para></listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  
  <para>
    In this chapter we will look at the dynamics of the system. This dynamics will
    occur within the context of the static structure. Ultimately we need a process
    to identify the structure required to support the dynamics (<abbrev>e.g.</abbrev>
    the business or system processes). We will look at such a process in 
    <xref linkend="chapBusinessAnalsysisResponsibilityDrivenProcess"/>.
  </para>
  
  <section><title>UML diagrams for the dynamic model</title>
  
    <para>
      For now we will discuss the diagrams UML provides to document the dynamics
      of a system, <abbrev>i.e.</abbrev> how the objects collaborate to realize the
      use cases. There are two groups of diagrams:
      <orderedlist>
        <listitem><para>
          <emphasis>Interaction diagrams</emphasis> look at how the objects
          interact in the context of the collaboration realizing the use cases.
        </para></listitem>
        <listitem><para>
          <emphasis>Behavior diagrams</emphasis> focus on what the objects do
          in the context of the processes realizing a use case.
        </para></listitem>
      </orderedlist>
    </para>
   
    <section><title>Interaction diagrams</title>
      <para>
        Interaction diagrams focus on the interactions between objects in the
        context of processes realizing use cases. They show the sequence of 
        messages exchanged between the objects. UML supports two types of 
        interaction diagrams:
        <itemizedlist>
          <listitem><para>
            <emphasis>Sequence diagrams</emphasis>  which show the object 
            participating in the collaboration along one axis and time on
            another.
          </para></listitem>
          <listitem><para>
            <emphasis>Collaboration diagrams</emphasis>  which show the messages
            being sent along message paths provided by the system structure with
            the time ordering of the messages specified by a numbering system.
          </para></listitem>
        </itemizedlist>
        Sequence diagrams are particularly intuitive and can be used to explain
        business and system processes even to people who may not be familiar
        with the notation. Collaboration diagrams are less intuitive, but they 
        will prove very useful as a transition path from the dynamic to the
        static model.
      </para>
    </section>
    
    <section><title>Behavior diagrams</title>
      <para>
        While interaction diagrams focus on the communication between the objects,
        behaviour diagrams focus on what the actions do, the states they are in,
        the state transitions and the events which cause them. UML supports two
        types of behavior diagrams:
        <itemizedlist>
          <listitem><para>
            <emphasis>Activity diagrams</emphasis> which look at the activities done 
            by the objects participating in the processes realizing the use case,
            at the events which cause the transitions, at the concurrencies within these
            processes and the synchronization points.
          </para></listitem>
          <listitem><para>
            <emphasis>State charts</emphasis> show the full state dynamics of an
            object. UML state charts are derived from Harel state charts 
            (<xref linkend="Harel-1988"/>). 
          </para></listitem>
        </itemizedlist>
        An activity diagram for a single object can be viewed as a subset of a state
        chart where only the activity aspect of the states is taken into account.
        However, an activity diagram can also show the activities across objects
        and provides a simple, intuitive graphical notation for business processes
        and processes.
      </para>      
    </section>  
  </section>

</section>
