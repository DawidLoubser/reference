<?xml version="1.0" encoding="UTF-8"?>

<!-- Provides an overview (and context) for the course that introduces new 1.4 and 1.5 features.
 @author Dawid Loubser
 @date 8 August 2005
-->

<chapter id="projects.solms.training.courses.javaUpgrade.introduction.introduction"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
    xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Introduction</title>
    <section>
        <title>Solidifying Java</title>
        <para>
            In its first three major revisions (up to <literal>1.3</literal>) Java established itself
            as a powerful and extremely generic programming language. Its vast number of support
            technologies (or <emphasis>APIs</emphasis>) enabled the developer to tackle problems
            in almost any domain imaginable, from cellular telephone to mainframe server.
        </para>
        <para>
            The support technologies that address most application domains, some of which are listed
            below, had been firmly established:
            <itemizedlist>
                <listitem>
                    <para>Streaming input/output with the <literal>java.io</literal> classes</para>
                </listitem>
                <listitem>
                    <para>Formatting of <emphasis>dates</emphasis> and <emphasis>numbers</emphasis> using the 
                        <literal>java.text</literal> classes.</para>
                </listitem>
                <listitem>
                    <para>Multi threading, as part of the core of the language</para>
                </listitem>
                <listitem>
                    <para>Multimedia and basic image handling, through the <literal>AWT</literal> and  <literal>JMF</literal> APIs</para>
                </listitem>
                <listitem>
                    <para>Distribution of simple applications using <emphasis>applets</emphasis></para>
                </listitem>
            </itemizedlist>
            Because of the difficulties of having to function across operating platforms, and to allow for adequate 
            time to gain community acceptance (as well as evolve to suit further needs), Java APIs are typically introduced 
            conservatively. They are very generic in nature, but often lack certain (expected) features.
        </para>
        <para>
            To respond to these feature shortcomings, the Java community has seen an explosion of projects that attempt to
            address them (some of them very impressively). Projects such as <emphasis>Apache Log4J</emphasis> filled a
            real need (in this case, in terms of logging). But many desired features meant additions to the Java platform
            (and even the language itself) in order to materialise. The <literal>1.4</literal> and <literal>1.5 (5.0)</literal>
            releases of the <emphasis>Java Standard Edition</emphasis> (SE) added a great number of additions to the APIs
            and language, all of which greatly solidify Java as a development platform. And all of which places Java
            in a league of its own as a platform-independent development language.
        </para>
    </section>
    
    <!-- Short discussions of the pertinent new features of 1.4 and 1.5 -->
    <xi:include href="newIn1_4.xdoc"/>
    <xi:include href="newIn1_5.xdoc"/>
    
    <!-- Maybe: 'Bigger Picture' Scope of these improvements, i.e. J2EE, etc -->
</chapter>