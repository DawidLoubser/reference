<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns7:article xmlns:ns7="http://docbook.org/ns/docbook" xml:id="projects.solms.training.courses.ejb3.exams.dictionary.dictionary">
    
    <ns8:articleinfo xmlns:ns8="http://docbook.org/ns/docbook">
        <ns9:title xmlns:ns9="http://docbook.org/ns/docbook">Competency Examination</ns9:title>
        <ns10:subtitle xmlns:ns10="http://docbook.org/ns/docbook">Enterprise JavaBeans</ns10:subtitle>
    </ns8:articleinfo>
    
    <ns11:abstract xmlns:ns11="http://docbook.org/ns/docbook">
        <ns12:para xmlns:ns12="http://docbook.org/ns/docbook">
            This document contains questions to test your competency. The nature of these questions
            are a mixture of <ns13:emphasis xmlns:ns13="http://docbook.org/ns/docbook">theoretical</ns13:emphasis>, and <ns14:emphasis xmlns:ns14="http://docbook.org/ns/docbook">practical</ns14:emphasis>.
            Either may be done in any technology you feel best suits your needs. However, after
            completing the examination, it is your responsibility to provide the examinator with
            all of your answers (or the location(s) thereof).
        </ns12:para>
        <ns15:para xmlns:ns15="http://docbook.org/ns/docbook">
            You may use any resources at your disposal 
            (such as course notes, books, the world wide web)
            but please ensure that your work is your own. There is no time limit, as long as the
            examination is completed in a single sitting during office hours.
        </ns15:para>
    </ns11:abstract>

    <ns16:section xmlns:ns16="http://docbook.org/ns/docbook">
        <ns17:title xmlns:ns17="http://docbook.org/ns/docbook">Theory</ns17:title>
        <ns18:para xmlns:ns18="http://docbook.org/ns/docbook">
            <ns19:orderedlist xmlns:ns19="http://docbook.org/ns/docbook">
                <ns20:listitem xmlns:ns20="http://docbook.org/ns/docbook">
                    <ns21:para xmlns:ns21="http://docbook.org/ns/docbook">
                        Describe, in your own words, how the EJB container supports high concurrency
                        (i.e. how it is made possible that many clients can safely make use of the services
                        in a singe EJB at the same time) 
                    </ns21:para>
                </ns20:listitem>
                <ns22:listitem xmlns:ns22="http://docbook.org/ns/docbook">
                    <ns23:para xmlns:ns23="http://docbook.org/ns/docbook">
                        Discuss a business scenario where you would want to employ a message-driven bean. Rationalise
                        your choice, and discuss whether you would use a Queue or a Topic.
                    </ns23:para>
                </ns22:listitem>
                <ns24:listitem xmlns:ns24="http://docbook.org/ns/docbook">
                    <ns25:para xmlns:ns25="http://docbook.org/ns/docbook">
                        Discuss all the advantages, and the disadvantages, you can think of in using a <ns26:emphasis xmlns:ns26="http://docbook.org/ns/docbook">Java Persistence API</ns26:emphasis>
                        (<ns27:quote xmlns:ns27="http://docbook.org/ns/docbook">entity beans</ns27:quote>) to model your application's persistent domain.
                    </ns25:para>
                </ns24:listitem>
                <ns28:listitem xmlns:ns28="http://docbook.org/ns/docbook">
                    <ns29:para xmlns:ns29="http://docbook.org/ns/docbook">
                        Name one advantage, and one disadvantage, in using each of the following methods to
                        (as a client) interact with your EJBs:
                        <ns30:itemizedlist xmlns:ns30="http://docbook.org/ns/docbook">
                            <ns31:listitem xmlns:ns31="http://docbook.org/ns/docbook"><ns32:para xmlns:ns32="http://docbook.org/ns/docbook">Stand-alone Java client, using RMI/IIOP</ns32:para></ns31:listitem>
                            <ns33:listitem xmlns:ns33="http://docbook.org/ns/docbook"><ns34:para xmlns:ns34="http://docbook.org/ns/docbook">Web-based presentation layer</ns34:para></ns33:listitem>
                            <ns35:listitem xmlns:ns35="http://docbook.org/ns/docbook"><ns36:para xmlns:ns36="http://docbook.org/ns/docbook">SOAP (Web Services)</ns36:para></ns35:listitem>
                        </ns30:itemizedlist>
                    </ns29:para>
                </ns28:listitem>
            </ns19:orderedlist>
        </ns18:para>
    </ns16:section>

    <ns37:section xmlns:ns37="http://docbook.org/ns/docbook">
        <ns38:title xmlns:ns38="http://docbook.org/ns/docbook">Practical</ns38:title>
        
        <ns39:para xmlns:ns39="http://docbook.org/ns/docbook">
            Consider a simplistic dictionary (glossary) system: Users may look up terms, as well as submit new terms
            for entry. A dictionary entry consists of:
            <ns40:itemizedlist xmlns:ns40="http://docbook.org/ns/docbook">
                <ns41:listitem xmlns:ns41="http://docbook.org/ns/docbook"><ns42:para xmlns:ns42="http://docbook.org/ns/docbook">the term itself</ns42:para></ns41:listitem>
                <ns43:listitem xmlns:ns43="http://docbook.org/ns/docbook"><ns44:para xmlns:ns44="http://docbook.org/ns/docbook">explanation of the term</ns44:para></ns43:listitem>
                <ns45:listitem xmlns:ns45="http://docbook.org/ns/docbook"><ns46:para xmlns:ns46="http://docbook.org/ns/docbook">e-mail address of the person who submitted it</ns46:para></ns45:listitem>
            </ns40:itemizedlist>
        </ns39:para>
        <ns47:para xmlns:ns47="http://docbook.org/ns/docbook">
            The dictionary itself (service facade) may thus provide services such as the following:
            <ns48:itemizedlist xmlns:ns48="http://docbook.org/ns/docbook">
                <ns49:listitem xmlns:ns49="http://docbook.org/ns/docbook">
                    <ns50:para xmlns:ns50="http://docbook.org/ns/docbook"><ns51:literal xmlns:ns51="http://docbook.org/ns/docbook">public DictionaryEntry getEntry( String term) throws NoSuchEntryException</ns51:literal>
                        - which finds a particular entry literally.
                    </ns50:para>
                </ns49:listitem>
                <ns52:listitem xmlns:ns52="http://docbook.org/ns/docbook">
                    <ns53:para xmlns:ns53="http://docbook.org/ns/docbook"><ns54:literal xmlns:ns54="http://docbook.org/ns/docbook">public List&lt;DictionaryEntry&gt; findEntries( String term)</ns54:literal>
                        - which finds matching terms (using any criteria or algorithm the implementation chooses to use)
                    </ns53:para>
                </ns52:listitem>
                <ns55:listitem xmlns:ns55="http://docbook.org/ns/docbook">
                    <ns56:para xmlns:ns56="http://docbook.org/ns/docbook"><ns57:literal xmlns:ns57="http://docbook.org/ns/docbook">public void addEntry( DictionaryEntry ) throws InvalidEntryException, DuplicateEntryException</ns57:literal>
                        - which allows anybody to add a new entry to the glossary, and
                    </ns56:para>
                </ns55:listitem>
                <ns58:listitem xmlns:ns58="http://docbook.org/ns/docbook">
                    <ns59:para xmlns:ns59="http://docbook.org/ns/docbook"><ns60:literal xmlns:ns60="http://docbook.org/ns/docbook">public void updateEntry( DictionaryEntry ) throws InvalidEntryException, NoSuchEntryException</ns60:literal>
                        - which allows for the update of an entry
                    </ns59:para>
                </ns58:listitem>
            </ns48:itemizedlist>
        </ns47:para>
        
        <ns61:section xmlns:ns61="http://docbook.org/ns/docbook">
            <ns62:title xmlns:ns62="http://docbook.org/ns/docbook">Core Business Infrastructure</ns62:title>
            <ns63:para xmlns:ns63="http://docbook.org/ns/docbook">
                Create a self-contained project, built with <ns64:literal xmlns:ns64="http://docbook.org/ns/docbook">ant</ns64:literal>, with the following:
                <ns65:orderedlist xmlns:ns65="http://docbook.org/ns/docbook">
                    <ns66:listitem xmlns:ns66="http://docbook.org/ns/docbook">
                        <ns67:para xmlns:ns67="http://docbook.org/ns/docbook">
                            A clearly defined service interface for the Dictionary
                        </ns67:para>
                    </ns66:listitem>
                    <ns68:listitem xmlns:ns68="http://docbook.org/ns/docbook">
                        <ns69:para xmlns:ns69="http://docbook.org/ns/docbook">
                            An implementation of the dictionary service as a stateless session bean, which persistently
                            stores dictionary entries as entities (using the Java Persistence API). This implementation
                            should ensure that all contractual rules are enforced, such as valid entires (e.g. enforces all
                            required data is present), non-duplicate messages, etc. Failure of any of these preconditions
                            must be correctly relayed to the client through the declared exceptions.
                        </ns69:para>
                    </ns68:listitem>
                </ns65:orderedlist>
            </ns63:para>
        </ns61:section>
        
        <ns70:section xmlns:ns70="http://docbook.org/ns/docbook">
            <ns71:title xmlns:ns71="http://docbook.org/ns/docbook">Simple Client</ns71:title>
            <ns72:para xmlns:ns72="http://docbook.org/ns/docbook">
                Using any suitable integration and deployment technology (e.g. Java client via RMI or Web Services,
                Web Interface, etc), create a client that can:
                <ns73:itemizedlist xmlns:ns73="http://docbook.org/ns/docbook">
                    <ns74:listitem xmlns:ns74="http://docbook.org/ns/docbook">
                        <ns75:para xmlns:ns75="http://docbook.org/ns/docbook">allow a user to add a dictionary entry</ns75:para>
                    </ns74:listitem>
                    <ns76:listitem xmlns:ns76="http://docbook.org/ns/docbook">
                        <ns77:para xmlns:ns77="http://docbook.org/ns/docbook">allow a user to search for dictionary entries</ns77:para>
                    </ns76:listitem>
                </ns73:itemizedlist>
            </ns72:para>
        </ns70:section>
        
        <ns78:section xmlns:ns78="http://docbook.org/ns/docbook">
            <ns79:title xmlns:ns79="http://docbook.org/ns/docbook">Value-added business services</ns79:title>
            <ns80:para xmlns:ns80="http://docbook.org/ns/docbook">
                <ns81:itemizedlist xmlns:ns81="http://docbook.org/ns/docbook">
                    <ns82:listitem xmlns:ns82="http://docbook.org/ns/docbook">
                        <ns83:para xmlns:ns83="http://docbook.org/ns/docbook">
                            For the benefit of subscribers, every time a new dictionary item is added, it should be published 
                            on a JMS message queue (Topic) using any chosen message type. Write a message-driven bean that
                            reacts to new terms being published (even if it only logs this fact to standard output, 
                            or sends e-mail).
                        </ns83:para>
                    </ns82:listitem>
                    <ns84:listitem xmlns:ns84="http://docbook.org/ns/docbook">
                        <ns85:para xmlns:ns85="http://docbook.org/ns/docbook">
                            After extended public use of the service, your discover that profane language becomes a problem
                            in volunteer-submitted entries. Instead of altering your business logic, or disrupting clients,
                            you decide on a simple approach of censorship: If the description of a dictionary term contains
                            one of a known list of profane words, simply replace it with <ns86:quote xmlns:ns86="http://docbook.org/ns/docbook">***</ns86:quote>. Write an
                            EJB interceptor which will intercepts all service requests to your dictionary service, and
                            applies this behaviour.
                        </ns85:para>
                    </ns84:listitem>
                </ns81:itemizedlist>
            </ns80:para>
        </ns78:section>
        
    </ns37:section>
</ns7:article>