<?xml version="1.0" encoding="UTF-8"?>
<article xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      id="projects.solms.training.courses.servlets.exams.exam01.exam01">
    
    <articleinfo>
        <title>Examination: Java EE Presentation Layer</title>
        <date>September 4, 2006</date>
    </articleinfo>
    
    <abstract>
        <para>
            This examination tests basic competency of the technologies needed to realise
            a web application in the Java EE architecture. You may use any resources available 
            to you, such as course notes, books, or the world wide web. There is no formal
            time limit, but the exam needs to be completed in a single session at the
            Solms TCD premises, during office hours.
        </para>
    </abstract>
    
    <section>
        <title>Theory</title>
        <para>
            <orderedlist>
                <listitem>
                    <para>
                        Explain the value of XML Name Spaces in a Servlets API web application: Name all the
                        features you can think of which has been made possible through its usage.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        What are the primary benefits of a framework that implement the Model-View-Controller
                        design pattern?
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Name the typical <emphasis>role(s)</emphasis> played
                        in the web application by:
                        <itemizedlist>
                            <listitem>
                                <para>Servlets</para>
                            </listitem>
                            <listitem>
                                <para>Filters</para>
                            </listitem>
                            <listitem>
                                <para>Java Server Pages</para>
                            </listitem>
                            <listitem>
                                <para>Listeners</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Explain three benefits of the <emphasis>role-based security</emphasis> scheme as provided by the
                        web container.
                    </para>
                </listitem>
            </orderedlist>
        </para>
    </section>
    
    <section>
        <title>Practical</title>
        <para>
            Write a small address book web application, which supports the
            following use-cases:
            <itemizedlist>
                <listitem>
                    <para>
                        Add a new contact. Store <literal>name</literal>, <literal>telephone number</literal>, <literal>e-mail</literal>
                        and <literal>street</literal> and/or <literal>postal</literal> addresses.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Find a contact. Perform a simplistic search by name.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Update a contact.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Remove a contact.
                    </para>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>BONUS:</title>
                        <para>
                            When viewing a contact, provide a link to view the contact in your own
                            schema-driven XML format.
                        </para>
                    </formalpara>
                    
                </listitem>
            </itemizedlist>
        </para>
        <para>
            For this application, you will have to implement both the <emphasis>business logic</emphasis> (model) layer, as
            well as the presentation-layer components. The model should be very simplistic, and does not have to persist
            contacts beyond the lifetime of the deployed application (in-memory).
        </para>
        
        
        <section>
            <title>Implementation Requirements</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>
                            The application should be implemented as a fully self-contained project, which can
                            be automatically built using Apache Ant.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            The application should make use of a Listener (Servlet Context Listener) to bind your
                            business logic component to the Servlet Context at application startup.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            The application should use JSP 2.0 Documents for the views, and feature at least one
                            occurrence of inclusion (<literal><![CDATA[<jsp:include/>]]></literal>) or a custom
                            tag (or tag file) to include a common menu.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            The application should use at least one Servlet Filter (to perform logic wherever you see
                            fit, for example, input validation, or bad language filter).
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Marks are not allocated for CSS styling, but this may be used if desired.
                        </para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        
        <section>
            <title>Software</title>
            <para>
                The application can be implemented using the Editors/IDE of your choice. Java EE API documentation
                can be found on the <literal>http://chameleon</literal> (or <literal>http://192.168.1.1</literal>)
                server, as can a sample web application (also containing all required libraries), in the <quote>Software Downloads</quote> -> <quote>javaEE</quote>
                section.
            </para>
        </section>
        
    </section>
    
</article>
