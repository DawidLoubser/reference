<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Introduction</title>
  <para>
    These notes are for the Java Developer who is comfortable with the
    basic aspects of object-orientation (specialisation, contracts / interfaces,
    polymorphism) and their implementation in the Java programming language.
    It also assumes comfortable knowledge of some of the basic Java SE
    frameworks, such as Streaming I/O, the Collections framework, and
    Swing (graphical user interfaces).
  </para>
  <para>
    Without targeting any specific Java platform (such as Java EE or Java ME)
    this course attempts to enrich the developer's knowledge by covering
    further standard frameworks and technologies (such as Java Annotations,
    Generic types, Multi-threading with the Java 5 Concurrency framework,
    high-performance I/O with the NIO framework, etc).
  </para>
  <para>
    Also covered are distributed computing technologies such as
    RMI and CORBA, as well as JNDI, and basic networking.
  </para>
  <para>
    The developer's conceptual knowledge is enriched by gaining a solid understanding
    of design-by-contract (and its Java implementation) as well as advanced
    object-oriented implementations in Java, such as mapping UML relations to 
    Java code. 
  </para>
  <para>
    We cover the concepts in a manner which does not try to hide their
    complexity or implementation behind all-encompassing developer tools, 
    with the realisation that - in practice - developers need to use all the
    tools that they can in order to maintain productivity. 
    We emphasise conceptual completeness - these notes do not serve as an
    exhaustive API reference, and consequently the standard documentation should 
    always be at hand when writing Java software.
  </para>
</section>