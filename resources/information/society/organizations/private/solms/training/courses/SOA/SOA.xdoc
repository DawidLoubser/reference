<?xml version="1.0" encoding="UTF-8"?>
<section 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd"
  xmlns:xi="http://www.w3.org/2001/XInclude" 
  id="resources.information.solms.training.courses.SOA.SOA">

  <title>Designing and Implementing SOA-based solutions</title>
  <para>
    Services-Oriented architecture aims to provide a comprehensive solution to integrate,
    and assemble business processes across, diverse systems within the enterprise in a manageable, 
    loosely-coupled manner. These systems can all participate in (often long-running) business 
    processes, and SOA promotes both quick time-to-market, as well as long-term maintainability.
  </para>
  <para>
    This course focuses on both the technology-neutral and architectural aspects of SOA, and on 
    JBI (Java Business Integration), the Java-based standard for SOA frameworks.
  </para>
  <para>
    In addition to the architectural and technological focus, we show how a platform-neutral UML model 
    (as derived through our <link linkend="resources.information.solms.training.courses.BusinessAnalysis.BusinessAnalysis">URDAD</link> 
    analysis and design process) can be realised within a SOA architecture, 
    in accordance with the principles of 
    <link linkend="resources.information.solms.training.courses.MDD.MDD">MDA (Model-Driven Architecture)</link>.
  </para>

  <section>
    <title role="Target audience">For whom is the course meant?</title>
    <para>
      This course is meant for developers and enterprise architects that have to
      design and maintain business solutions realised through the integration of (often diverse)
      systems across the enterprise.
    </para>
  </section>

  <section>
    <title role="Prerequisites">Prerequisites</title>
    <para> 
      Though covered in the course at a cursory level, a good understanding of the various XML technologies 
      that form the foundation of a typical Web-Services based solution (XML Namespaces, XML Schema, XSLT, SOAP, WSDL)
      is essential.
    </para>
    <para>
      Since we use JBI as the standard SOA realisation during this course, experience with the Java programming language,
      frameworks such as <link linkend="resources.information.solms.training.courses.EJB.EJB">Enterprise JavaBeans</link> 
      and distributed technologies, would be beneficial.
    </para>
    <para>
      Finally, to get the most out of this course (specifically, the Model-Driven Architecture aspects), 
      candidates should preferably have experience of analysing and designing a model using UML.
    </para>
  </section>

  <section>
    <title role="Outcomes">Outcomes</title>
    <para> 
      After successful completion of the course candidates should be able to 
      <itemizedlist>
        <listitem>
          <para>Understand what architecture is</para>
        </listitem>
        <listitem>
          <para>Understand the systems and integration problems typically faced by large organisations</para>
        </listitem>
        <listitem>
          <para>Understand the aspects and principles of the Services-Oriented Architecture, including
            <itemizedlist>
              <listitem><para>The problems it solves, and how it does so</para></listitem>
              <listitem><para>The typical components of an SOA, such as a Services Bus, Business Units, Message Routers, etc.</para></listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Have a high-level understanding of the base technologies that are typically used, such as
            <itemizedlist>
              <listitem><para>Web Services, and related technologies (XML Schema, SOAP, WSDL)</para></listitem>
              <listitem><para>CORBA</para></listitem>
              <listitem><para>XML message transformation using XSLT</para></listitem>
              <listitem><para>Messaging services (queues, topics)</para></listitem>
              <listitem><para>JCA (The Java Connector Architecture) to connect to proprietary systems</para></listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Understand the JBI standard, and
            <itemizedlist>
              <listitem><para>How the typical SOA components are realised in a JBI environment</para></listitem>
              <listitem><para>How to create, deploy, and configure various components</para></listitem>
              <listitem><para>How to remain portable among different JBI frameworks</para></listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Implement a BPEL (Business Process Execution Language) -based solution to orchestrate the interactions
          between different business units, and to centrally define and manage long-running business processes.</para>
        </listitem>
        <listitem>
          <para>Perform the mapping of an URDAD-derived technology-neutral UML model to a solution realised within a SOA</para>
        </listitem>
        <listitem>
          <para>Understand what is involved to configuring and managing your SOA infrastructure, including
            <itemizedlist>
              <listitem><para>Redundancy through Load-balancing and clustering</para></listitem>
              <listitem><para>Security</para></listitem>
              <listitem><para>Auditability and Logging</para></listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Understand Best practises and Patterns concerning, for example,
            <itemizedlist>
              <listitem><para>Long-running business processes</para></listitem>
              <listitem><para>Transactions</para></listitem>
              <listitem><para>Manual work-flow steps</para></listitem>
            </itemizedlist>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </section>

  <xi:include href="../common/coursePackage.xdoc"/>
  <!-- TODO: NOT YET xi:include href="../common/courseDownload.xdoc"/ -->
  <xi:include href="../common/certification.xdoc"/>
</section>