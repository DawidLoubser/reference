Software Testing
==========
"When quality is pursued, productivity follows" is a famous quote from
K. Fujino, Vice President of NEC Cooperation's C&C Software Development Group.
It emphasizes that systematic testing not only reduces the probability of failure, 
but it also increases the possibility for reuse and, significantly improves the 
efficiency of software development processes as a whole.

Software development process should be aligned with testing in mind,
starting with testable requirements and continuing with testable services
contracts, the development of decoupled, testable code through to the
planning, design, execution and measurement of testing within a suitable testing
infrastructure.

The course targets professionals who need to get a more in-depth understanding as well as practical experience
in the field of testing. This may include
  - quality engineers,
  - testers, 
  - developers, 
  - business analysts
  - architects, and 
  - project managers

Course Outline
=========

Each part will be augmented by practical exercises.

1. Overview
----------------
This section introduces the core concepts around testing including
  - Objectives, principles, and limitations of software testing
  - What should be tested?
  - Testing challenges
  - Testing, debugging and root cause analysis
  - Systematic versus ad-hoc testing
  - Functional versus quality of service (non-functional) testing
  - White box (implementation based) versus black box (contract based) testing
  - Regression and integration testing
  - Contracts and testing
  - Verification & Validation
  - System versus test quality
  - Roles and responsibilities in testing

2. Requirements for testing
-----------------------------------
  - Where to find requirements
  - Attribute of testable requirements
  - Requirements traceability
  - Services contracts
  - URDAD based requirements in the context of testing

3. Services contract testing
----------------------------------
  - Functional testing
     * Testing pre-conditions
	  * Testing post-conditions
	  * Testing across levels of granularity and mocking
  - Quality of service testing
	  * Scalability (load) testing
     * Performance testing
     * Reliability testing
     * Auditability testing
     * Security testing
     * Maintainability testing
     * Accessibility/integrability testing

4. Test data generation
==============
  - Partioning into equivalence partitions
  - Boundary testing
  - Test data through cause-effect analysis

5. Implementation testing
================
  - What is structural testing, strengths & weaknesses
  - System integrity testing
  - State machine testing
  - Path/scenario coverage 
  - Iteration (loop) defects and testing
  - Self-testing code
  - Basis Path Testing via Independent Path Coverage
      * Control Flow Graph
      * Calculating Cyclomatic Complexity and using Cyclomatic Complexity
      * Choosing a Basis Set of Paths
      * Generating Test Cases
  - User interface/adapter testing

6. Testing architecture and tools
===================
  - Unit testing frameworks
  - Mocking frameworks
  - Embedded container testing
  - Web services testing
  - Scalability (load) and performance testing via JMeter
  - User interface testing tools

7. Testing processes and Test Management
=========================
  - Peer reviews
  - Test planning
  - Test design
  - Test documentation
    * Benefits of test documentation
    * Types of test documentation
  - Test execution
  - Test metrics
    * Test coverage/completeness metrics
    * Defect tracking metrics
		  (defect discovery and closure rates, defect density, defect miss rate, defect backlogs by severity)
  - test reporting
  - Auditability of testing
    * Test logs

8. Auxiliary topics touched upon
===================
  - Standards related to testing
  - Model-based testing
  - Automated unit test generation from services contracts
  - Correctness proofs

-------------------------------------------------------------------
8. Standards & Models Related to Testing
=======================
a.  Why Standards are Important
b.  IEEE Standards Related to Testing
c.  ISO 12207 & IEEE/EIA 12207on Testing
d.  ISO 9000:2000 on Testing
e.  SEI CMMISM on Testing

