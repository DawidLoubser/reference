<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-4-16 -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Decouple via contracts</title>
    <para>
        <indexterm><primary>decoupling</primary><secondary>via contracts</secondary></indexterm>
        A common refactoring activity is to remove direct coupling between classes by encapsulating the requirements into a services contract
        and having the class providing the required services realize the services contract. The client class references would be changed in order
        to refer only to the contract, not to any particular implementation class.
    </para>
    <para>
        <indexterm><primary>contracts</primary><secondary>decoupling via</secondary></indexterm>
        <indexterm><primary>pluggability</primary></indexterm>
        <indexterm><primary>reusability</primary></indexterm>
        <indexterm><primary>understandability</primary></indexterm>
        This improves pluggability, reusability and understandability as one often only needs to understand the contract, not the way the
        service provider class realizes this contract.
    </para>
</section>    