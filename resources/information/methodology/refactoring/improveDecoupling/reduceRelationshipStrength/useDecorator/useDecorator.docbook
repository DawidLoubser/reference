<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-4-16 -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Replacing specialization with the combination of realization and composition</title>
    <para>
        <indexterm><primary>decorator</primary><secondary>pattern</secondary></indexterm>
        In those cases where both, the inheritance and the pluggability is required, one can replace the specialization with the combination
        of a realization and a composition relationship in a way inspired by the decorator pattern. The only price to be paid is that one
        needs to add request delegation manually. For this one gets weaker coupling and a much more flexible and maintainable design.
        <indexterm><primary>coupling</primary><secondary>weaker</secondary></indexterm>
        <indexterm><primary>flexibility</primary><secondary>of design</secondary></indexterm>
        <indexterm><primary>maintainability</primary><secondary>of design</secondary></indexterm>
    </para>
</section>
