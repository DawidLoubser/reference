<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-3-20 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Core work flows</title>

    <para> The RUP defines six core work flows: <orderedlist>
            <listitem>
                <para>Business modeling </para>
            </listitem>
            <listitem>
                <para>Requirements modeling </para>
            </listitem>
            <listitem>
                <para>Analysis and Design </para>
            </listitem>
            <listitem>
                <para>Implementation </para>
            </listitem>
            <listitem>
                <para>Testing </para>
            </listitem>
            <listitem>
                <para>Deployment</para>
            </listitem>
        </orderedlist>
    </para>

    <section>
        <title>Business modeling</title>
        <para> During business modeling the vision and scope of the business is captured. The
            business use-cases, work flows and business objects are identified and new products and
            work flows are prioritized. </para>
        <para> RUP aims to use a common language, the <emphasis>Unified Modeling
            Language</emphasis>, across business and requirements modeling and system design.
        </para>
    </section>

    <section>
        <title>Requirements modeling</title>
        <para> The RUP requirements modeling covers <itemizedlist>
                <listitem>
                    <para>Mapping of the business use cases and objects onto system use cases and
                        objects. </para>
                </listitem>
                <listitem>
                    <para>The development of a vision document. </para>
                </listitem>
                <listitem>
                    <para>Scoping of the requirements. </para>
                </listitem>
                <listitem>
                    <para>Verifying requirements. </para>
                </listitem>
                <listitem>
                    <para> Development of the requirements Specification including functional and
                        non-functional requirements. </para>
                </listitem>
            </itemizedlist></para>
    </section>

    <section>
        <title>Analysis and design</title>
        <para> Here the high-level architecture and design is developed and verified to ensure that <itemizedlist>
                <listitem>
                    <para>The architecture can accommodate the requirements, especially the high
                        risk elements. </para>
                </listitem>
                <listitem>
                    <para>The architecture and design results in a maintainable system which can
                        accommodate changing requirements. </para>
                </listitem>
                <listitem>
                    <para>The architecture and design can grow with increasing number of concurrent
                        users and higher transaction volumes.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para> The Analysis and design work flow of RUP results in a design model and optionally an
            analysis model. The design model serves as an abstraction of the source code; that is,
            the design model acts as a "blueprint" of how the source code is structured and written. </para>
        <para> The design model consists of design classes structured into design packages and
            design subsystems. RUP requires well-defined interfaces, representing the basis for the
            components in the implementation. The RUP design model also contains descriptions of how
            objects of these design classes collaborate to perform use cases. </para>

        <section>
            <title>Architecture</title>
            <para> RUP requires that the design activities are centered around its notion of
                architecture. The production and validation of the architecture is the main focus of
                early design iterations. </para>
            <para> Architecture is represented by a number of architectural views. These views
                capture the major structural design decisions. In essence, architectural views in
                RUP are abstractions or simplifications of the entire design, in which important
                characteristics are made more visible by leaving details aside. </para>
            <note>
                <para> The RUP treats architecture as high level design, with no clear separation
                    line between the two. </para>
            </note>
        </section>
    </section>

    <section>
        <title>Implementation</title>
        <para> The implementation work flow of the RUP includes <itemizedlist>
                <listitem>
                    <para>The lower-level design of the system. </para>
                </listitem>
                <listitem>
                    <para>The actual construction of the system in terms of components, subsystems
                        and classes. </para>
                </listitem>
                <listitem>
                    <para>The development of low-level unit tests. </para>
                </listitem>
                <listitem>
                    <para>The correction of any errors spotted during unit testing.</para>
                </listitem>
                <listitem>
                    <para> To integrate the components developed by individual developers into an
                        executable system. </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section>
        <title>Testing</title>
        <para> In addition to unit testing done for individual objects the testing work flow tests <itemizedlist>
                <listitem>
                    <para>that the objects interact correctly, </para>
                </listitem>
                <listitem>
                    <para>that the integration of higher level components and subsystems results in
                        a stable system, </para>
                </listitem>
                <listitem>
                    <para>that the requirements have been implemented correctly, </para>
                </listitem>
                <listitem>
                    <para>and that any failures are fed beck to the development team and that the
                        system is not deployed with any defects.</para>
                </listitem>
            </itemizedlist></para>
    </section>

    <section>
        <title>Deployment</title>
        <para> The deployment work flow delivers the product to the end users. It includes the
            following activities: <itemizedlist>
                <listitem>
                    <para>Producing external releases of the software. </para>
                </listitem>
                <listitem>
                    <para>Packaging the software. </para>
                </listitem>
                <listitem>
                    <para>Distributing the software. </para>
                </listitem>
                <listitem>
                    <para>Installing the software. </para>
                </listitem>
                <listitem>
                    <para>Providing training and assistance to users. </para>
                </listitem>
                <listitem>
                    <para>Beta testing. </para>
                </listitem>
                <listitem>
                    <para>Migration of existing software or data. </para>
                </listitem>
                <listitem>
                    <para>initiating the process of formal acceptance.</para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

</section>
