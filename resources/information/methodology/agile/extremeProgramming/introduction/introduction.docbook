<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-3-20 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Introduction</title>

    <para> In 1996 Kent beck pioneered a software development discipline called <emphasis>eXtreme
            Programming</emphasis>. It is a light-weight methodology which has found more and more
        support among the software community, even though it was initially frowned upon in many
        quarters due to some of the unconventional ideas spread by its followers. </para>

    <section>
        <title>A Light-Weight Alternative</title>
        <para> Software processes traditionally tend to be rather heavy often introducing a lot of
            bureaucracy and generating a lot of formal documentation. Lately several lightweight
            processes have started to gain a larger and larger following. These include the Crystal
            family of methods, Adaptive Software Development and eXtreme Programming (XP). </para>
        <para> Of these XP has gained the largest following. In addition to having established
            itself as a light-weight methodology which is followed by many project teams world-wide,
            it has significantly influenced other, more established methodologies like the Rational
            Unified Process. </para>
    </section>

    <section>
        <title>A Process for Continually Changing Requirements</title>
        <para> XP is based on the recognition that requirements are continually changing throughout
            the development process as well as through the remaining life of the application. </para>
        <para> XP was specifcally designed to be an effective process for continually changing
            requirements. </para>
    </section>

    <section>
        <title>Business versus Development Cycles</title>
        <para> As business changed relatively slowly, business cycles (the period over which the
            business requirements change significantly to warrant new versions of systems) used to
            be quite long -- typically more 2 or more years. </para>
        <para> With the rapid development in technology, improved telecommunication and more
            aggressive marketing the business cycle has decreased to less than a year, at times even
            to less than 6 months. </para>
        <para> The development cycle must, of course, be shorter than the business cycle. You must
            not only match the business needs with your development cycle, but you must also leave
            room for testing, deployment and corrections. </para>
        <para> Consequently the development cycle for each release must be 3 months or less. XP
            advocates a development cycle of only a few weeks with each development cycle delivering
            a fully functional, shippable increment of the software product. </para>
    </section>

</section>
