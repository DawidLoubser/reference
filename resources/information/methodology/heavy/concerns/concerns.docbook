<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-4-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Concerns around heavy-weight processes</title>
    <para>
        Agile methodologies and iterative software development processes in general aim to address a number
        of issues historically encountered with more heavy weight processes like the waterfall based processes.
        These include
        <itemizedlist>
            <listitem><formalpara>
                <title>Long feedback cycles</title>
                <para>
                    In the more heavy weight processes solutions are either delivered as a whole or in large modules developed
                    over longish (typically a couple of months to a year) iterations. This means that long periods elapse before one 
                    obtains any meaningful user or client feedback, increasing the potential cost of mis-understood, incomplete
                    or incorrect requirements.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Discouraging requirements changes</title>
                <para>
                    Heavy weight processes usually explicitly discourage requirements changes once the requirements have been signed off.
                    In this framework it is difficult to provide best value to the client who operates in a dynamic world where their client 
                    requirements change regularly and where business opportunities and their understanding of their business requirements  
                    continuously evolve.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>The need to understand the requirements fully</title>
                <para>
                    In the waterfall based approaches it is necessary to understand the requirements fully up-front. That is extremely difficult
                    and costly and makes the quality of the requirements much more critical than in more light-weight, iterative development processes.
                    Furthermore, these requirements must be documented clearly and non-ambiguously which is itself very difficult. The resultant
                    requirements are usually very wieldly and it is difficult to extract the required information from them.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Long time to value extraction</title>
                <para>
                    In the heavy weight processes deployment only happens after many months or even years. There is thus a long period from 
                    making the investment to extracting business value from the investment.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Complex communication channels</title>
                <para>
                    In the more heavy weight processes the development team is usually well removed from the client, working largely off the elaborate
                    requirements. Direct communication channels are usually very limited increasing the cost of clarifying or elaborating the requirements
                    understanding, often to such an extend that the development team will simply work off its assumptions. Furthermore, it is difficult
                    for the client to measure progress in meaningful ways. But it is not only the communication channels between the client and the 
                    development team which are typically complex. Usually there are teams responsible for different domains (e.g. requirements, 
                    architecture, design, implementation, integration and deployment, testing, ...) and different elements of the solution (e.g. different
                    modules) may be developed by different teams. The communication channels between these is also usually limited increasing the
                    probability of mis-communication and of not sorting out issues through communication.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Cost</title>
                <para>
                    The more heavy weight processes typically churn out a lot of documentation which is itself costly and difficult to maintain over time.
                    Furthermore, the complexity of the various artifacts and the communication itself increases cost significantly. Finally the long
                    period to value extraction itself increases effective cost.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Complex project management</title>
                <para>
                    The complexity of the various artifacts (requirements, architecture, design, code modules, ...), the long feedback channels and 
                    the complex communication channels all contribute to making project management so much more critical and difficult.
                    Measurement is particularly difficult in the more heavy weight processes.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Role centric approach</title>
                <para>
                    Heavy weight processes usually use a role centric approach with the various roles having well defined skills requirements and
                    responsibilities. The communication between such different role players is usually non-trivial. Furthermore, it is usually
                    difficult to extract value from insights obtained by individuals which they may have into domains which are not included in
                    their role definition. The reduced communication typically also reduces the growth rate of the various role players.
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>
</section>    