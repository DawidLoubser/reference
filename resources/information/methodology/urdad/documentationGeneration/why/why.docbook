<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-2-4 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Why documentation generation?</title>
    <para>
        One usually needs to provide documentation for various role players in order to make the information relevant to them accessible.
        If one does not use documentation generation to generate the documentation from the model, then the documentation must 
        manually be kept synchronized with the information contained in the model.
    </para>
    <para>
        Generating the documentation from the model 
        <itemizedlist>
            <listitem><para>
                ensures that the documentation remains synchronized with that of the evolving model, and
            </para></listitem>
            <listitem><para>
                reduces the probability that there are errors, i.e. that the documentation does not reflect the true semantics and
                content of the model.
            </para></listitem>
        </itemizedlist>
        <note><title>Need for version control</title>
            <para>
                Since the model will typically evolve over time one needs support for version control. Most UML tools either
                <itemizedlist>
                    <listitem><para>
                        provide version control through add-on components, or
                    </para></listitem>
                    <listitem><para>
                        provide adapters which integrate with external version control systems. 
                    </para></listitem>
                </itemizedlist>
                In this case the generated documentation would not have independent versioning, but would adopt the versioning of
                the model from which it is generated.
            </para></note>
    </para>

    <para>
        Further benefits of documentation generation include that one can
        <itemizedlist>
            <listitem><para>
                extract information for different role players and different purposes, excluding any information which is not required, 
            </para></listitem>
            <listitem><para>
                present the information in different ways depending on the background and needs of the information consumers.
            </para></listitem>
        </itemizedlist>
    </para>
</section>    