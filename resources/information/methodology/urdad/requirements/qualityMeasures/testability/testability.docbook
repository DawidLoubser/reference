<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-1-15 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Testability</title>
    <para>
        Testability is a measure of the ability to generate tests for a design and the effort involved to do this.
    </para>
    <para>
        Quite a lot of work has been done to define testability metrics, particularly for code. 
        <citation>Need citations</citation>
         Many of these methods
        identify aspects of the code which, from a technical perspective, identify implementation aspects which
        make the code difficult or even impossible to test.
    </para>
    <para>
        Here we assess two core aspects of testability:
        <itemizedlist>
            <listitem><para>
                Does the design contain all the information required to generate the tests?
            </para></listitem>
            <listitem><para>
                What is the effort required to generate the tests?
            </para></listitem>
        </itemizedlist>
    </para>
    
    <section>
        <title>Assessing whether the design has the information required to define the tests?</title>
        <para>
            One of the benefits of contracts based designs is that they can be essentially self testable
            <citation>need citation</citation>, i.e. that the design contains
            enough information to auto-generate the tests. Furthermore, a design which links functional requirements to the activities
            which realize them can directly report which functional requirements are not sufficiently addressed in the design.
        </para>
        <para>
            
            information available to develop tests for the design. This would include
            the ability to define both, functional and non-functional tests. In particular, one needs to assess
            <itemizedlist>
                <listitem><para>
                    the percentage of services for which complete services contract are defined including
                    <itemizedlist>
                        <listitem><para>
                            the data structure requirements for the inputs and outputs have been specified,
                        </para></listitem>
                        <listitem><para>
                            the pre- and post-conditions have been specified, and
                        </para></listitem>
                        <listitem><para>
                            the quality requirements for service have been specified.
                        </para></listitem>
                    </itemizedlist>
                </para></listitem>   
            </itemizedlist>
            For functional/design testing only the first two are required. The quality requirements are important important when testing whether the infrastructure
            into which the design has been deployed can address the quality requirements.
        </para>
    </section>
    
    <section>
        <title>What effort is required to generate the tests?</title>
        <para>
            Here is where formal languages like UML and OCL become particularly beneficial. For a solid object model where the constraints 
            have been defined in OCL, the functional testing can be fully autogenerated. Aspects of the constraints which are defined in natural 
            language and elements of the design are captured outside the object model, may only be processable by humans and will 
        </para>
        <para>
            In addition there may be technical aspects of the design itself which increase the effort required for testing. These include
            <itemizedlist>
                <listitem><para>
                    lack of cohesion,    
                </para></listitem>
                <listitem><para>
                    strong coupling,
                </para></listitem>
                <listitem><para>
                    lack of well managed levels of granularity,
                </para></listitem>
                <listitem><para>
                    elements of the state which are not directly accessible,                                        
                </para></listitem>
            </itemizedlist>
            <note><title>TODO</title><para>Expand on the above, justifying them and get citations</para></note>
        </para>
    </section>
</section>    