<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-1-15 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Modifiability</title>
    <para>
        Modifiability is an inverse measure of the effort and cost required to modify the design/business model
        in particular, one needs to assess
        <itemizedlist>
            <listitem><para>
                the impact of adding, removing or modifying work flow steps in a business process,
            </para></listitem>
            <listitem><para>
                the impact of making changes to exchanged data structures,
            </para></listitem>
            <listitem><para>
                the impact of changing service providers for a business process,
            </para></listitem>    
        </itemizedlist>
    </para>
    <para>
        Traditional modifiability and maintainability metrics have focused on assessing the maintainability of a design
        indirectly by quantifying the complexity, entropy, cohesion and other design metrics and then defining a higher
        level maintainability metric based on these
        <citation>Yau_1988_A_metric_of_modifiability_for_software_maintenance</citation>
        <citation>Chaplin_1989_An_entropy_metric_for_software_maintainability</citation>.        
    </para>
    
    <section>
        <title>Direct measure of the modifiability of a design</title>
        <para>
            We do not dispute the correlation between maintainability and other quality metrics like complexity,
            cohesion and, of course reusability. However, in this paper we attempt to define a more direct measure of maintainability 
            by looking at what is required for maintainability
        </para>
        <para>
            Aspects which impact negatively on the modifiability of a design and hence on the ability to cost-effectively
            absorb requirements changes include the following:
            <itemizedlist>
                <listitem><para>
                    Whether the work flow for any service is localized in a separate controller - this results in localized
                    process maintenance and decouples the service providers from one another simplifying pluggability.
                </para></listitem>
                <listitem><para>
                    Whether the contracts-based decoupling between clients and service providers is enforced leading
                    to service provider pluggability and a resulting adapter layer.
                </para></listitem>
                <listitem><para>
                    Whether the value objects are decoupled from the domain objects such that  a growing domain model will
                    not affect the existing services and service providers.
                </para></listitem>
                <listitem><para>
                    the extend to which the design adheres to a simple request/response model where all information relating
                    to services requests and responses is encapsulated within a single request response objects (this is related to
                    the command pattern).
                </para></listitem>
            </itemizedlist>
            <note><title>TODO</title><para>expand</para></note>
        </para>
    </section>
</section>    