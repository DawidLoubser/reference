<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-2-4 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Services</title>
    <para>
        One can optionally specify services which instances of a class will provide. In UML these are called operations. They are
        listed in a separate services compartment.
    </para>
    
    <figure xml:id="information.methodology.urdad.umlForUrdad.classCaseDiagrams.requiredNotation.services_fig">
        <title>A class diagram and three versions of an object diagram</title>
        <mediaobject><imageobject>
            <imagedata  contentwidth="150mm" scalefit="1"  fileref="services.png"/>
        </imageobject></mediaobject>
    </figure>      
    
    <section>
        <title>Specifying the process through which a service is realized</title>
        <para>
            Ultimately one will assign the process which is
            followed by instances of a class when realizing a service. This is done by assigning the behaviour in the form of an activity
            diagram or any other behavious diagram like a sequence diagram to the service.
        </para>
    </section>    
    
    <section>
        <title>Request-response approach</title>
        <para>
            URDAD recommends that one should never have multiple parameters for a service, but that one instead follows a request-response
            approach where there is a single input parameter, the request object, and a single output in the form of a return, the response
            object.
        </para>
    </section>
    
    <section>
        <title>Going full command pattern</title>
        <para>
            Optionally one can follow in URDAD a command-patterns based approach where one no longer specifies different services
            for a class. In this approach each class provides a single service, that of processing a request with the request containing both,
            <itemizedlist>
                <listitem><para>
                    the information about the type of service requested, as well as,
                </para></listitem>
                <listitem><para>
                    the information required by a service provider in order to be able to service the request.
                </para></listitem>
            </itemizedlist>
            Each request type would typically be a subclass of a more generic request class.
        </para>
        
        <figure xml:id="information.methodology.urdad.umlForUrdad.classCaseDiagrams.requiredNotation.commandPattern_fig">
            <title>A class diagram and three versions of an object diagram</title>
            <mediaobject><imageobject>
                <imagedata  contentwidth="150mm" scalefit="1"  fileref="commandPattern.png"/>
            </imageobject></mediaobject>
        </figure>      
        
        <para>
            Depending on the type of request, a different process may be followed to service the request, <abbrev>i.e.</abbrev>
            different processes may be assigned to the service for different input parameters.
        </para>
    </section>
</section>   