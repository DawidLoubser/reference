<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.concepts.developmentProcess.useCaseResponsibilityDrivenProcess.requirements"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
<title>What do we want from a design process</title>
  <para>
    Before we start formulating a process we should ask ourselves: 
    <blockquote>
      <para><emphasis>
        What do we want from a design process?
      </emphasis></para>
    </blockquote>
    To this end let us consider some criteria which should be fulfilled by
    any business analysis process.
    <itemizedlist>
      <listitem><formalpara>
        <title>Use-case driven</title>
        <para>
          We should first understand the stakeholder needs before discovering
          how those needs are realized by the business.
        </para>
      </formalpara></listitem>
      <listitem><formalpara>
        <title>Responsibility localization</title>
        <para>
          When designing a system we would like to achieve clean responsibility 
          localization and would like to avoid responsibility duplication.
        </para>
      </formalpara></listitem>
      <listitem><formalpara>
        <title>Minimize structural complexity</title>
        <para>
          We would like a process which generates a system of minimal complexity
          containing only those structural elements which are required
          to support the collaborations which realize the use cases.
        </para>
      </formalpara></listitem>
      <listitem><formalpara>
        <title>Clean, layered architecture</title>
        <para>
          To reduce model complexity and increase simplicity and understandability,
          it helps to have a process which guides one into a clean layered 
          architecture/structure for the business model. Within a single view of
          either, the system structure we want to
          see only those elements which are relevant at that level of granularity,
          <abbrev>i.e.</abbrev> a view should not mix elements from different
          levels of granularity.
        </para>
      </formalpara></listitem>
      <listitem><formalpara>
        <title>Flexible system architecture and processes</title>
        <para>
          Are model must remain dynamic and flexible. This is essential for it to
          be maintainable as the system evolves and to readily absorb new use cases,
          business processes and structural elements. The biggest enemy of flexibility
          is complexity. We need a process which minimizes complexity and hence
          facilitates agility.
        </para>
      </formalpara></listitem>
      <listitem><formalpara>
        <title>A general process</title>
        <para>
          Our process should be general such that we can use it to model a wide range
          of systems and that it can be used to also model businesses and business processes.
        </para>
      </formalpara></listitem>
      <listitem><formalpara>
        <title>A simple process which uses a standard notation</title>
        <para>
          Finally, our process should be simple and their should be a recipe 
          guiding business analysts through a sequence of understandable steps
          using standard notational elements.
        </para>
      </formalpara></listitem>
    </itemizedlist>
    
  </para>
</section>


