<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.developmentProcess.responsibilityDriven.introduction.responsibilityDrivenOverview"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Responsibility Driven Design</title>
    <para>
      Responsibility-driven design has developed from the classical CRC-card approach. 
      Responsibility-driven design <xref linkend="Anderson-2003"/>
      shies away from centralizing control within a  controller object. They too feel
      that a controller-centric approach does not necessarily result in a
      natural object-oriented solution.
    </para>
    <para>
      Anderson claims that a delegated control solution
      <itemizedlist>
          <listitem><para>
              introduces fewer objects which are more loosely coupled with changes affecting fewer
              objects,
          </para></listitem>
          <listitem><para>
              facilitates dialogs at a higher level -- <quote>collaborations between coordinators and the    
              objects they coordinate tend to be higher level requests rather than simple requests to
              retrieve and store information</quote> (this view is close to the URDAD approach
              where we have control at various levels of granularity), and
          </para></listitem>
          <listitem><para>
              allows for simpler delegation of design work with interesting responsibilities among team 
              members.
          </para></listitem>
      </itemizedlist>
    </para>
</section>
