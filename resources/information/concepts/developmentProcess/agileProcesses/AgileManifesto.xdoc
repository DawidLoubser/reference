<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->
<section id="resources.information.concepts.developmentProcess.agileProcesses.AgileManifesto"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>The Agile Manifesto</title>
  <para> 
    There is a growing number of so-called OO gurus who canvas for a more light-weight
    approach. Many of these light-weight methodologies have been developed in-house and have
    not been publicized widely. Others, including the following, are well known: 
    <itemizedlist>
      <listitem>
        <para>Extreme programming </para>
      </listitem>
      <listitem>
        <para>Crystal methodologies </para>
      </listitem>
      <listitem>
        <para>Adaptive Software Development </para>
      </listitem>
      <listitem>
        <para>Feature-Driven Development </para>
      </listitem>
      <listitem>
        <para>Dynamic System Development</para>
      </listitem>
    </itemizedlist>
  </para>  
  <para> 
    Some of the proponents of these light methodologies including 
    <itemizedlist>
      <listitem>
        <para>Kent Beck </para>
      </listitem>
      <listitem>
        <para>Martin Fowler </para>
      </listitem>
      <listitem>
        <para>Alistair Cockburn </para>
      </listitem>
      <listitem>
        <para>Robert C. Martin </para>
      </listitem>
      <listitem>
        <para>Ron Jeffries</para>
      </listitem>
    </itemizedlist>
     and 12 others met in February 2001 where they produced a document which they called
     the Agile Manifesto. It reads as follows:
     <blockquote>
      <para>
         We have come to value 
        <itemizedlist>
          <listitem>
            <para>Individuals and interactions over processes and tools. </para>
          </listitem>
          <listitem>
            <para>Working software over comprehensive documentation. </para>
          </listitem>
          <listitem>
            <para>Customer collaboration over contract negotiation. </para>
          </listitem>
          <listitem>
            <para>Responding to change over following a plan.</para>
          </listitem>
        </itemizedlist>
      </para>  
      <para>
        That is, while we value the items on the right, we value the items on the left more. 
      </para>
      <para>
        We follow the following principles: 
        <itemizedlist>
          <listitem>
            <para>Our highest priority is to satisfy the customer through early and continuous
              delivery of valuable software. </para>
          </listitem>
          <listitem>
            <para>Welcome changing requirements, even in late development. Agile processes harness
              change for the customer's competitive advantage. </para>
          </listitem>
          <listitem>
            <para>Deliver working software frequently, from a couple of weeks to a couple of
              months, with preference to the shorter timescale. </para>
          </listitem>
          <listitem>
            <para>Business people and developers work together daily throughout the project. </para>
          </listitem>
          <listitem>
            <para>Build projects around motivated individuals. Give them the environment and
              support they need, and trust them to get the job done. </para>
          </listitem>
          <listitem>
            <para>The most efficient and effective method of conveying information to and within a
              development team is face-to-face conversation. </para>
          </listitem>
          <listitem>
            <para>Working software is the primary measure of success. </para>
          </listitem>
          <listitem>
            <para>Agile processes promote sustainable development. The sponsors, developers and
              users should be able to maintain a constant pace indefinitely. </para>
          </listitem>
          <listitem>
            <para>Continuous attention to technical excellence and good design enhances agility. </para>
          </listitem>
          <listitem>
            <para>Simplicity – the art of maximizing the amount of work not done – is essential. </para>
          </listitem>
          <listitem>
            <para>The best architectures, requirements and designs emerge from self-organizing
              teams. </para>
          </listitem>
          <listitem>
            <para>At regular intervals, the team reflects on how to become more effective, then
              tunes and adjusts its behaviour accordingly.</para>
          </listitem>
        </itemizedlist>
      </para>
     </blockquote>  
   </para>
</section>
