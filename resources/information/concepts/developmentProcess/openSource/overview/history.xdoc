<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->
<section id="resources.information.concepts.developmentProcess.openSource.overview.history"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>History of free and open-source software</title>
  <para>
    The history of free and open-source software is, in IT terms, quite long, largely starting off
    from free and open-source paradigm, and now rapidly returning to it.
  </para>
  <section>
    <title>Open-Source software on expensive proprietary systems</title>
    <para>
      Originally (1950's - mid 1970's) software development was largely collaborative, particularly 
      at the academic institutions where software developed for research was often essentially a free 
      and open source, even though it often ran on large and very expensive mainframes. The sharing
      of software fitted in well with the general spirit of scientific information sharing between researchers,
      as is done through research publications.
    </para>
    <para>
      Even the software supplied with the mainframes by companies like IBM was largely free and
      open source and could hence be customized, maintained and redistributed by clients.
    </para>
  </section>
  
  <section>
    <title>Commercialization of software</title>
    <para>
      The mid 1970's saw the start of wide-spread commercialization of software with companies
      like IBM and Microsoft heavily buying into the framework of commercial software.
      Source code was compiled for a particular platform, and distributed in binary form
      as proprietary software, and the source code was kept secret. Redistribution was legally
      prohibited, and bug fixes and customizations had to be typically done by the software
      vendor themselves.
    </para>
    <para>
      UNIX itself started as an open source project which was from the start designed to be 
      very modular. However, Xcommercial versions soon became more 
      and more proprietary and incompatible.
    </para>
  </section>

  <section>
    <title>Birth of the free-software counter movements</title>
    <para>
      During the late 1970's and early 1980's, significant resistance started to develop against
      the proprietarization of software. A number of separate open-source and free software
      initiatives, including the GNU project, BSD Unix, and the TeX typesetting systems from 
      Donald Knuth, came to life.
    </para>
    <section>
      <title>The GNU Project and the Free Software Foundation</title>
      <para>
        Richard Stallman resigned from MIT's AI Lab to launch the <emphasis>GNU Project</emphasis> 
        and the <emphasis>Free Software Foundation</emphasis>. The free software foundation's
        philosophy was based on the <emphasis>GNU Manifesto</emphasis> which proposed the view 
        that the freedom to redistribute and modify software as a fundamental right. 
        <note>
          <para>
            The <emphasis>free</emphasis> of <emphasis>free software</emphasis>  should be 
            seen from the perspective of this freedom  and not necessarily as free in terms of free of cost.
          </para>  
        </note>
      </para>
      <para>
        Ultimately, the GNU project aimed to develop a free operating system which would be fast,
        reliable, scalable and interoperable with UNIX. Richard Stallman developed a number of
        software tools for GNU, most notably the <emphasis>GNU C compiler</emphasis>, GCC, 
        which is widely regarded as one of the most efficient and robust compilers ever created.
      </para>
      <para>
        The legal framework for free software was put in place via the <emphasis>GNU General 
        Public Licence</emphasis> (GPL) which aimed not only to ensure that the software remained
        free, but to lay down the basics for an avalanche type of effect where free software generates
        further free software. The details of the GPL are discussed in
        <xref linkend="resources.information.concepts.developmentProcess.openSource.licenses.gnuPublicLicense"/>.
      </para>
    </section>
    <section>
      <title>BSD Unix and the BSD license</title>
      <para>
        The Computer Science Research Group (CSRG) at the University of California (Berkeley)
        developed many modules and applications for Unix. This evolved to become the BSD
        Unix, which initially relied on many AT&amp;T components, but evolved slowly into a full
        free operating system and application suites distributed under one of the first open
        source licenses, the BSD (Berkeley Software Distribution) license. The details of the
        BSD license are discussed in
        <xref linkend="resources.information.concepts.developmentProcess.openSource.licenses.bsdLicense"/>.
      </para>
    </section>
  </section>

  <section>
    <title>Growth of open-source projects</title>
    <para>
      The 1990's saw the growth of many open source projects. Some of the more well-known
      projects include
      <itemizedlist>
        <listitem><para>
            the Linux operating system, and in particular the Linux kernel project, initiated and managed 
            by Linus Torvalds,
        </para></listitem>
        <listitem><para>
           a widely used mail server, sendMail,          
        </para></listitem>
        <listitem><para>
          Apache web server, which is the most widely used web server in the world, and which
          has proven itself to be extremely scalable,
        </para></listitem>
        <listitem><para>
          the scripting language, Perl, widely used for text processing and many more.
        </para></listitem>
      </itemizedlist>
    </para>
  </section>
  
  <section>
    <title>Establishing an understanding of the open-source paradigm</title>
    <para>
      Eric Raymond, who was one of the early GNU contributors himself,  took an intense 
      interest in the open source concept, the higher quality
      products coming out of the open-source community and the speed with which features
      were typically added to open source projects. 
    </para>
    <para>
      After studying existing open-source projects, he initiated a open-source project which
      was specifically chosen to study the dynamics of a typical open source project. In 
      August 1998 he published a now famous article, 
      <ulink url="http://www.opensource.com/documents/cathedral-bazaar">The Cathedral
      and the Bazaar</ulink> which explained in detail the dynamics of an open-source
      project and the benefits resulting from it. This article has contributed significantly to
      popularizing the open-source paradigm.
    </para>
  </section>
  
  <section>
    <title>Shift of first large companies to open-source</title>
    <para>
      In the late 1990's, large companies started to embrace the open-source paradigm, starting
      with Netscape which submitted its browser in 1998 to the open source community (the open
      source version is called Mozilla).
    </para>
    <para>  
      Companies also started to fund open source projects. In particular the windowing system
      XFree 86, Gnome and KDE window managers.
    </para>
  </section>
  
  <section>
    <title>Open-source becomes mainstream</title>
    <para>
      In the early years of the new millennium, governments and large organizations have started
      to use open-source products on a large scale. Linux in particular, as well as the Apache web 
      server, sendMail, the JBoss EJB application server, the NetBeans and Eclipse Java
      development environments, and many more, have become standard tools in most
      large organizations. 
    </para>
    <para>
      Together with this there is a general drive towards public standards, like XML for non-proprietary
      specification and exchange of data, Enterprise Java Beans for business logic components,
      CORBA for object-oriented application integration, web services for business-to-business integration,
      and so on.
    </para>
  </section>
  
</section>
