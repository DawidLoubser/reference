<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.developmentProcess.CMM.cmm"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>The Capability Maturity Model for Software</title>
  <para> 
    The Capability Maturity Model (CMM) was developed over a number of years and was
    published in 1991 by Mark Paulk and Charles Weber with the current CMM version 1.1 being
    published in 1993.
  </para>
  <para> It grew out of the realization that software projects continued to have a very high
    failure rate and that the productivity and quality gains promised by many new
    methodologies and technologies often did not materialize. Software projects continued to
    be often excessively late and over budget.</para>
  <para> CMM claims that this is caused mainly by the organizations inability to manage the
    software process. According to CMM, the benefts of the improved tools are often lost due
    to undisciplined and chaotic project management.</para>
  <para> CMM aims to help organizations to 
  <itemizedlist>
    <listitem>
      <para>Evaluate their process maturity. </para>
    </listitem>
    <listitem>
      <para>Help gain control of processes for developing and maintaining software. </para>
    </listitem>
    <listitem>
      <para>Help evolve toward a culture of sound software engineering and management.</para>
    </listitem>
  </itemizedlist></para>
  <section>
    <title>Characteristics of Immature Software Organizations</title>
    <para> CMM identifes a number of features common among immature software organizations:</para>
    <para> Ad-hoc software processes are which are generally improvised by developers and
      project management. Software processes are not enforced. At times immature software
      organizations have specifed software processes but these are not rigorously followed or
      enforced. Reactionary management and development. Managers are usually focused on
      solving immediate crises, stepping from one crises to the next. Non-adherence to
      schedules &amp; budgets because of the non-structured development process and because of
      an inability to provide accurate estimates. Lack of quality prediction because of not
      having an objective process for measuring quality. Quality degradation under hard
      deadlines due to software quality reviews and testing being hastened or even skipped.
      Inability to effectively improve processes because of being unable to objectively
      evaluate benefts of the improvements.</para>
  </section>
  <section>
    <title>Characteristics of Mature Software Organizations</title>
    <para> On the other hand, CMM claims that the following characteristics indicate a mature
      software organization: Effective management of software development and maintenance
      processes. Software processes are generally adhered to due to the processes being usable
      and tailored for the companies requirements. The benefts of the process are effectively
      and accurately communicated to existing staff and new employees which tend to adhere to
      them naturally because they understand the benefts of following the prescribed process.
      Clear Role defnitions where the roles in the project context as well as in the wider
      organizational context are accurately defined. Accurate, objective quality monitoring of
      both the software product as well as the process which produced the software. Ability to
      provide realistic schedules and budgets largely based on historical performance. Ability
      to effectively evolve processes through the introduction of pilot projects which are
      subjected to productivity and quality evaluations as well as a solid cost-beneft analysis.</para>
  </section>
  <section>
    <title>CMM Maturity Levels</title>
    <para> The Capability Maturity Model advocates continuous process improvement based on
      small evolutionary steps. To provide a course-grained measure the maturity of an
      organization's software processes CMM introduces the 5 maturity levels shown in
      <xref linkend="resources.information.concepts.developmentProcess.CMM.cmmLevels_fig"/> .
    </para>
    <figure id="resources.information.concepts.developmentProcess.CMM.cmmLevels_fig">
      <title>The 5 CMM levels of Software Process Maturity.</title> 
      <graphic fileref="cmmLevels.jpg"/>
    </figure>
    
    <para> An organization would work itself sequentially through these levels. Skipping of
      levels is counter productive because each level provides the foundation for the next
      level. </para>
      
    <section>
      <title>What is a maturity level?</title>
      <para> The maturity levels represent not only the maturity level of an organization's
        software processes, but also provide a measure of the capability of these processes.</para>
      <para> Each maturity level is viewed as a well-defined evolutionary plateau toward
        achieving a mature software process. Each maturity level comprises as set of process
        goals that, when satisfed, stabilize an important component of the software process.</para>
    </section>
    <section>
      <title>Level 1: The Initial Level</title>
      <para> The successes achieved by level 1 organizations are attributed by the CMM to
        having 
      <itemizedlist>
        <listitem>
          <para>an exceptional manager and/or </para>
        </listitem>
        <listitem>
          <para>a seasoned, effective software team,</para>
        </listitem>
      </itemizedlist></para>
      <para><abbrev>i.e.</abbrev> to the heroic achievements of certain individuals and CMM claims that these
        successes cannot be repeated unless the same competent individuals are assigned to
        future software projects.</para>
      <para> Level 1 capability is thus attributed to individuals and not to the organization.
        Problems typically experienced by level 1 organizations include 
      <itemizedlist>
        <listitem>
          <para>Schedules and budgets are regularly overrun. </para>
        </listitem>
        <listitem>
          <para>Development dynamics deteriorates into crisis management where the dynamics
            carries the development team from one crisis to the nest. </para>
        </listitem>
        <listitem>
          <para>During these criseses the process is being abandoned resulting in the
            production of poor quality designs and code.</para>
        </listitem>
      </itemizedlist></para>
    </section>
    <section>
      <title>Level 2: The Repeatable Level</title>
      <para> The characteristics of organizations having reached the repeatable level are
        identifed by the CMM as 
      <itemizedlist>
        <listitem>
          <para>Project management policies are introduced and implemented on a per project
            basis. </para>
        </listitem>
        <listitem>
          <para>The process introduced and enforced for the project is 
          <itemizedlist>
            <listitem>
              <para>documented, </para>
            </listitem>
            <listitem>
              <para>trained, </para>
            </listitem>
            <listitem>
              <para>measured and </para>
            </listitem>
            <listitem>
              <para>able to improve.</para>
            </listitem>
          </itemizedlist></para>
        </listitem>
        <listitem>
          <para>Planning and managing new projects is based on experience with similar
            projects resulting in realistic schedule and cost estimates. </para>
        </listitem>
        <listitem>
          <para>Integrity control is applied to software requirements and the work products
            developed to satisfy them. </para>
        </listitem>
        <listitem>
          <para>Installation of basic software management controls including the ability to
            track 
          <itemizedlist>
            <listitem>
              <para>schedules, </para>
            </listitem>
            <listitem>
              <para>costs and </para>
            </listitem>
            <listitem>
              <para>functionalities.</para>
            </listitem>
          </itemizedlist>
          <abbrev>i.e.</abbrev> throughout the development process the schedule and cost estimates are
            baselined – the estimates are updated with the latest information and communicated
            to the customer. </para>
        </listitem>
        <listitem>
          <para>Introduction and enforcement of software project standards.</para>
        </listitem>
      </itemizedlist>
      The result is that the planning and tracking of software projects is stable and
        that early success can be repeated without relying on the heroic effort of certain individuals.</para>
      <para> Note that for level 2 organizations the processes may differ across projects and
        that there need not be any linking between the policies guiding different projects.</para>
    </section>
    <section>
      <title>Level 3: The Defined Level</title>
      <para> At the defined level the organization standardizes its software development processes.</para>
      <para> CMM characterizes a level-3 compliant organization by 
      <itemizedlist>
        <listitem>
          <para>The standard process for developing and maintaining software across the
            organization is documented including 
          <itemizedlist>
            <listitem>
              <para>software engineering processes and </para>
            </listitem>
            <listitem>
              <para>management processes</para>
            </listitem>
          </itemizedlist>
            and these processes are integrated into a coherent whole. This enables
            management to obtain objective status information across all projects. </para>
        </listitem>
        <listitem>
          <para>A group, the software engineering process group, takes ownership of the
            organization's process activities. </para>
        </listitem>
        <listitem>
          <para>An organization-wide training program ensures that all role players are aware
            of their roles and are able to fulfll their duties. </para>
        </listitem>
        <listitem>
          <para>For each project the organization's standard process is tailored to fulfll the
            specifc project requirements. The resultant tailored process is called the defined
            software process. The defined software process includes 
          <itemizedlist>
            <listitem>
              <para>readiness criteria, </para>
            </listitem>
            <listitem>
              <para>process input defnitions, </para>
            </listitem>
            <listitem>
              <para>standards and procedures for performing the work, </para>
            </listitem>
            <listitem>
              <para>verifcation mechanisms, </para>
            </listitem>
            <listitem>
              <para>outputs and </para>
            </listitem>
            <listitem>
              <para>completion criteria.</para>
            </listitem>
          </itemizedlist></para>
        </listitem>
      </itemizedlist>
      </para>
    </section>
    <section>
      <title>Level 4: The Managed Level</title>
     <para> The software process capability of organizations which have reached the managed
        level is quantifable and predictable. The process is continuously measured and stable
        and corrective action can be taken when process limits are violated.</para>
      <para> The CMM requires that level 4 organizations 
      <itemizedlist>
        <listitem>
          <para>Set quantitative goals for both 
          <itemizedlist>
            <listitem>
              <para>Software products </para>
            </listitem>
            <listitem>
              <para>Software development and maintenance processes.</para>
            </listitem>
          </itemizedlist></para>
        </listitem>
        <listitem>
          <para>Software processes are instrumented with well-defined and consistent
            measurement processes for productivity and quality. </para>
        </listitem>
        <listitem>
          <para>Management continuously measures productivity and quality across all defined
            software projects and maintains an organization-wide software process database for
            this information. </para>
        </listitem>
        <listitem>
          <para>Projects obtain control of their processes by narrowing the variation in
            process performance. This enables management to distinguish between standard
            process variations (random noise) and systematic problems which should be
            addressed. </para>
        </listitem>
        <listitem>
          <para>The risks involved moving up the learning curve of a new application domain
            are known and carefully managed.</para>
        </listitem>
      </itemizedlist>
      </para>
    </section>
    <section>
      <title>Level 5: The Optimizing Level</title>
      <para> Organizations which have reached the optimized level are focused on continuous
        organization-wide process improvements.
      <itemizedlist>
        <listitem>
          <para>The organization has means to identify strengths and weaknesses of a process
            pro actively enabling it to introduce measures which could possibly prevent
            defects. </para>
        </listitem>
        <listitem>
          <para>If defects occur, they are analyzed for their causes. The process is modifed
            to prevent re-occurrence of defects and the lessons learnt from that project is
            distributed to other projects. </para>
        </listitem>
        <listitem>
          <para>It can perform cost-beneft analysis of new technologies and proposed process
            changes. </para>
        </listitem>
        <listitem>
          <para>One of the focuses of level-5 organizations is to minimize waste, i.e. the
            amount of work which has to be redone. </para>
        </listitem>
        <listitem>
          <para>Technology and process improvements are planned and managed as ordinary
            business activities.</para>
        </listitem>
      </itemizedlist>
      Note that levels 4 and 5 are conceptually based on statistical techniques.</para>
    </section>
  </section>
  <section>
    <title>How is maturity expected to influence performance?</title>
    <para> CMM expects that more mature organization are in a better position to predict a
      project's ability to meet its goals.</para>
    <para> Projects in level-1 organizations experience wide variations in achieving the
      targets for 
    <itemizedlist>
      <listitem>
        <para>cost, </para>
      </listitem>
      <listitem>
        <para>schedule, </para>
      </listitem>
      <listitem>
        <para>functionality and </para>
      </listitem>
      <listitem>
        <para>quality.</para>
      </listitem>
    </itemizedlist>
     As the maturity increases the organization is expected to experience 
    <itemizedlist>
      <listitem>
        <para>A decrease in difference between targets and actual achievements. </para>
      </listitem>
      <listitem>
        <para>A decrease in the variability of the actual results around targets. </para>
      </listitem>
      <listitem>
        <para>A general increase in productivity and quality.</para>
      </listitem>
    </itemizedlist>
      </para>
    <para>The expected tendencies are shown in 
      <xref linkend="resources.information.concepts.developmentProcess.CMM.processCapability_fig"/>. 
    </para>
    <figure id="resources.information.concepts.developmentProcess.CMM.processCapability_fig">
      <title>Process capability and performance predictions taken from The capability
            Maturity Model for Software published by Paulk, Curtis, Chrissis and Weber.</title>
      <graphic fileref="processCapability.jpg"/>
    </figure>
  </section>
  
  <section>
    <title>Key process areas of the CMM</title>
    <para> The process areas for the individual CMM levels identify the issues that must be
      addressed to achieve the applicable maturity level. 
      <xref linkend="resources.information.concepts.developmentProcess.CMM.processAreas_fig"/>
       illustrates the key process areas for the different CMM levels. </para>
      
    <figure id="resources.information.concepts.developmentProcess.CMM.processAreas_fig">
      <title>Key process areas for the different CMM levels.</title>
      <graphic fileref="processAreas.jpg"/>
    </figure>
    
    <section>
      <title>Key process areas for level 2 maturity</title>
      <para> The level 2 process areas focus on basic project management controls. They include:</para>
      <para> Requirements Management which aims to establish a process for 
      <itemizedlist>
        <listitem>
          <para>requirements elicitation, </para>
        </listitem>
        <listitem>
          <para>requirements verifcation, </para>
        </listitem>
        <listitem>
          <para>requirements specifcation and </para>
        </listitem>
        <listitem>
          <para>requirements change management.</para>
        </listitem>
      </itemizedlist> Software Project Planning which aims to establish reasonable plans for
      the software engineering and the managing of the software project. Software Project
      Tracking and Oversight is about making projects monitorable in order that management can
      take effective action when the software project's performance deviates signifcantly from
      the plans. Software Subcontract Management aims to establish a process to evaluate,
      select and manage subcontractors effectively. Software Quality Assurance aims to provide
      management with appropriate visibility into the software products being developed and
      process used to develop them. Software Confguration Management focuses on establishing
      and maintaining all products of the software project throughout the project's life cycle.
      </para>
    </section>
    <section>
      <title>Key process areas for level 3 maturity</title>
      <para> The key process areas address issues which help the organization to establish an
        infrastructure which institutionalizes effective software engineering and management
        processes across all projects. They include:</para>
      <para> Organization Process Focus establish the organizational responsibility for
        software process activities enabling the organization to improve its overall software
        process capability. Organization Process Defnition includes 
      <itemizedlist>
        <listitem>
          <para>Developing and maintaining software process assets that improve process
            performance across projects. </para>
        </listitem>
        <listitem>
          <para>These software process assets should provide a basis for obtaining meaningful
            information for quantitative process management. </para>
        </listitem>
        <listitem>
          <para>The software process assets provide a stable foundation that can be
            institutionalized via training and common information and guideline repositories.</para>
        </listitem>
      </itemizedlist> Training Programs are introduced to develop the skills and knowledge of
      individuals so that they can perform their roles effectively and efficiently. Integrated
      Software Management is applied on a per-project basis. It aims to integrate the software
      engineering and management aspects into a coherent, defined software process that is
      tailored from the organization's standard software process. The tailoring is based on <itemizedlist>
        <listitem>
          <para>the business environment and </para>
        </listitem>
        <listitem>
          <para>the technical needs</para>
        </listitem>
      </itemizedlist>
       of the project. Software Product Engineering describes the technical activities of
        the software project like 
      <itemizedlist>
        <listitem>
          <para>Requirements analysis, specifcation and management. </para>
        </listitem>
        <listitem>
          <para>Architectural design process. </para>
        </listitem>
        <listitem>
          <para>System design. </para>
        </listitem>
        <listitem>
          <para>Implementation. </para>
        </listitem>
        <listitem>
          <para>Testing.</para>
        </listitem>
      </itemizedlist>
      It aims to establish an effective, well-defined engineering process which is
        applied consistently to integrate all software engineering activities to produce
        correct and consistent software products effectively and efficiently. Intergroup
        Coordination aims to establish an infrastructure enabling different software
        engineering groups to interact and collaborate effectively. Peer Reviews aims to
        decrease the defect level of software early and efficiently. In addition the
        understanding of individual products of the software process is distributed. Typical
        methods used include inspections and structured walkthroughs.
      </para>
    </section>
    <section>
      <title>Key process areas for level 4 maturity</title>
      <para> The key process areas for level 4 address issues which introduce quantitative
        measurability of the software process and its products. They include Quantitative
        Process Management aims to the process performance of a measurably stable process
        quantitatively. Causes of systematic variations from targets are analyzed and
        corrective measures are introduced. Software Quality Measurement aims to 
      <itemizedlist>
        <listitem>
          <para>Develop a quantitative understanding of the quality of the project's software
            products. </para>
        </listitem>
        <listitem>
          <para>Achieve specifc quality goals.</para>
        </listitem>
      </itemizedlist>
      </para>
    </section>
    <section>
      <title>Key process areas for level 5 maturity</title>
      <para> The key process areas of level 5 address issues which help the organization to
        establish the infrastructure to continually improve the software process. They
        include: Defect Prevention aims to 
      <itemizedlist>
        <listitem>
          <para>Identify the causes of defects before they occur and prevent the defects from
            occurring. </para>
        </listitem>
        <listitem>
          <para>Initiate a process of introducing changes to the defined software process.</para>
        </listitem>
      </itemizedlist> Technology Change Management focuses on performing innovation and
      introducing innovations efficiently in order to remain competitive in a changing
      environment. It is responsible for <itemizedlist>
        <listitem>
          <para>Identifying benefcial new technologies including tools, methods and processes. </para>
        </listitem>
        <listitem>
          <para>Transfer benefcial managers in a structured, well managed way into the organization.</para>
        </listitem>
      </itemizedlist> Process Change Management is responsible for continually improving the
      software processes used in the organization in order to <itemizedlist>
        <listitem>
          <para>improve software quality and </para>
        </listitem>
        <listitem>
          <para>increase productivity.</para>
        </listitem>
      </itemizedlist>
      </para>
    </section>
  </section>
  <section>
    <title>Practices of High-Maturity Organizations</title>
    <para> Many companies have introduced the CMM into their organization and in February 200
      a study that 60 companies (44 in the US, 14 in India, 1 in Australia and 1 in Israel)
      have reached CMM level 4 and 37 companies (27 in the US and 10 in India) have reached
      CMM level 5.</para>
    <para> Most high maturity organizations build real-time applications, particularly for the
      defense industry. Nevertheless, the list includes general software development
      companies, and companies from the aviation, fnancial, telecommunications sectors.</para>
    <para> Below we list some general management practices followed by most high-maturity
      organizations: 
    <itemizedlist>
      <listitem>
        <para>The software process improvement programs are aligned with Total Quality
          management (TQM) initiatives at the organizational or enterprise level. </para>
      </listitem>
      <listitem>
        <para>They typically have achieved ISO 9001 certifcation. </para>
      </listitem>
      <listitem>
        <para>They use other standard management models for issues which fall outside the
          scope of the Software CMM like 
        <itemizedlist>
          <listitem>
            <para>ISO 12207 for software life cycle processes. </para>
          </listitem>
          <listitem>
            <para>People CMM. </para>
          </listitem>
          <listitem>
            <para>Software Acquisition CMM.</para>
          </listitem>
        </itemizedlist></para>
      </listitem>
      <listitem>
        <para>Use cost models such as COCOMO and Price-S. </para>
      </listitem>
      <listitem>
        <para>Perform systematic risk management and continuously maintain a top-10 risk list. </para>
      </listitem>
      <listitem>
        <para>Use the Project Evaluation and Review technique (PERT). </para>
      </listitem>
      <listitem>
        <para>Employ chief architects and chief engineers.</para>
      </listitem>
    </itemizedlist></para>
  </section>
</section>
