<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE chapter SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->
<chapter id="resources.information.concepts.analysis.requirements.requirementTypes.requirementTypes"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Types of requirements and how to document them</title>

    <section><title>Use Cases</title>
      <para> 
        The highest level of requirements are the use cases, i.e.Â the requirements that the
        proposed product can be used to achieve certain goals from the user's point of view.
      </para>

      <para> 
        Each use case represents a top-level requirement of the product, namely that the
        product can be used to achieve a certain goal.
      </para>
      
      <section><title>Documenting Use Cases</title>
        <para> 
          Naturally use cases are documented using use case diagrams. This is done first at
          a very abstract level where the use cases are simply stated within use case icons.
        </para>
        <para> 
          For a particular instance usage (scenario) there is usually a sequence of
          messages which is exchanged between the product and the actors. These are naturally
          documented using sequence diagrams. Activity diagrams can be used to document
          multiple scenarios within a single diagram.
        </para>  
        
        <section><title>Allister Cockburn's use case template</title>
        <para>
          Additionally a use case is usually accompanied by a textual description
          which can but need not necessarily include all the following aspects the 
          aspects shown in <xref linkend="resources.information.concepts.analysis.requirements.useCaseDocumentation.useCaseDocumentation"/>. 
          Allistor Cockburn
          suggests the following use case template
           <orderedlist>
             <listitem><formalpara>
               <title>Primary Actor</title>
               <para>
                 The person/system initiating and driving the use case. The primary 
                 actor gets the main use out of the use case (<abbrev>i.e.</abbrev>
                 it is the primary actor's goal the use case realizes) and may
                 also be called the <emphasis>user</emphasis>.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Secondary Actor</title>
               <para>
                 Other external objects involved in the use case.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Goal</title>
               <para>
                 What goal is achieved by the use case.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Context of Use</title>
               <para>
                 In which context is the primary stake holder going to use the use case.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Scope</title>
               <para>
                 The object (entity, system, subsystem, package, class, company, 
                 department) offering the use case and to whom the use case is offered.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>stake holders and Interest</title>
               <para>
                 A listing of all objects which have a stake (interest) in the use 
                 case and a description of that interest.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Preconditions</title>
               <para>
                 The conditions that must be met before the use case becomes available
                 to the actors.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Primary Actor</title>
               <para>
                 What preconditions must be satisfied before the use case is
                 available to users.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Minimal Guarantees</title>
               <para>
                 The minimal deliverables and/or actions provided by the system 
                 irrespective of whether the use case was successfully
                 completed or not.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Success Guarantees</title>
               <para>
                 The deliverables and/or actions provided by the system upon successful 
                 completion of the use case.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Trigger</title>
               <para>
                 The event which initiates the use case.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Scenarios</title>
               <para>
                 Show various scenarios in sequence diagrams. The complete set
                 of scenarios may be shown in an activity diagram.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Scenarios</title>
               <para>
                The sequence of messages exchanged between the actors and the system 
                during a use case. Note that there are scenarios for successful and 
                unsuccessful completion of the use case. 
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Use Case completion</title>
               <para>
                  When is the use case completed.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Priority</title>
               <para>
                  The priority the use case from the perspective of the client
                  (driver, constraint, important, optional).
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Constraints</title>
               <para>
                  List each constraint for that use case. This may include 
                  performance constraints.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Channels to Actors</title>
               <para>
                  For each actor list the communication channel(s) used to transmit the 
                  messages between the system and that actor.
               </para>
             </formalpara></listitem>
             <listitem><formalpara>
               <title>Open Issues</title>
               <para>
                 Any issues about the use case which have
                 not yet been resolved. 
               </para>
             </formalpara></listitem>
           </orderedlist>
        </para>
      </section>

        <section> <title>Using UML</title>
          <para>
            A large proportion of the information in the template can be documented
            in UML. Below we show how these elements are specified in UML.
            <itemizedlist>
              <listitem><formalpara>
                <title>Primary and secondary actors</title>
                <para>
                  The actors are of course shown in the use case diagram. A
                  <literal><![CDATA[<<Primary Actor]]>>></literal> or
                  <literal><![CDATA[<<User>>]]></literal> stereotype may be
                  added to define the concept of a primary actor in UML.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Context</title>
                <para>
                  The context is directly shown in the use case diagram as the 
                  system or subsystem which contains the use cases.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Preconditions</title>
                <para>
                  The preconditions can be specified in the use case diagram by
                  attaching a <emphasis>precondition constraint</emphasis> to the
                  link between the primary actor and the use-case. They will also
                  be documented in the sequence and activity diagrams for the use case
                  as rejecting paths.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Guarantees</title>
                <para>
                  The guarantees for the various paths are shown in the sequence and
                  activity diagrams. Success guarantees may be also shown in the
                  use case diagram as a <emphasis>postconditions constraint</emphasis> 
                  on the link between the primary actor and the use case.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Trigger</title>
                <para>
                  The trigger will be documented in the activity diagram as
                  the event launching the process realizing the use case and in the
                  sequence diagram as the first message coming into the system.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Scenarios</title>
                <para>
                  These will be naturally documented in sequence diagrams and an
                  activity diagram showing the multiple scenarios.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Use case completion</title>
                <para>
                  Once again, this is shown in the sequence and activity diagrams.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Channels to actors</title>
                <para>
                  The requirements specifications around communication channels to 
                  the actors are part of the deployment requirements and are best
                  documented using an UML deployment diagram.
                </para>
              </formalpara></listitem>
              <listitem><formalpara>
                <title>Priority</title>
                <para>
                  This may be documented by attaching priority constraints to the
                  use cases. Often one would document the priority also in the
                  textual description for the use case.
                </para>
              </formalpara></listitem>
            </itemizedlist>
          </para>
          <para>
            So, nearly all information is naturally contained in the UML diagrams,
            and often in a clearer and more complete way then what the textual
            descriptions would (<abbrev>e.g.</abbrev> the guarantees for the 
            individual scenarios). The remaining aspects which need to be
            documented in text include
            <itemizedlist>
              <listitem>
                <para>
                  the primary actor's goal which is realized by the use case,
                </para>
              </listitem>
              <listitem><para>
                the stake holders and their interest in the use case,  
              </para></listitem>
              <listitem><para>
                the priority of the use case and  
              </para></listitem>
              <listitem><para>
               the non-functional requirements like the performance, legal, 
               and maintainability requirements.
              </para></listitem>
            </itemizedlist>
          </para>  
        </section>
      </section>
    </section>
    
    <section><title>Example: ATM</title>
      <para> 
        Let us take the example of a client wanting to withdraw funds from an ATM. The use
        case could be described as follows:
          <orderedlist>
            <listitem><formalpara>
              <title>Primary Actor</title>
              <para>
                The ATM card holder â typically an account holder at a bank.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Secondary Actors</title>
              <para>
                The ATM company and the bank which issued the card.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Goal</title>
              <para>
                The card holder withdraws money from an account linked to the card 
                and receives it.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Context of Use</title>
              <para>
                The client of a bank needs cash.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Scope</title>
              <para>
                The ATM.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>stake holders and Interest</title>
              <para>
                <itemizedlist>
                  <listitem><para>
                    <emphasis>Card holder:</emphasis> Wants to withdraw
                    funds from his/her account and receive it in cash.
                  </para></listitem>
                  <listitem><para>
                    <emphasis>ATM company:</emphasis> Wants to offer the use
                    case and receive service fees from the client.
                  </para></listitem>
                  <listitem><para>
                    <emphasis>Bank:</emphasis> Wants to make certain that the
                    client only withdraws funds which are available to the client.
                  </para></listitem>
                </itemizedlist>
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Preconditions</title>
              <para>
                <itemizedlist>
                  <listitem><para>
                    The user must have a valid card.
                  </para></listitem>
                  <listitem><para>
                    The card must be linked to an account at a bank which is
                    registered with the ATM company.
                  </para></listitem>
                </itemizedlist>
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Minimal Guarantees</title>
              <para>
                 The attempt of using the card for a transaction is logged.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Success Guarantees</title>
              <para>
                The account is debited with the withdrawn
                funds and the transaction fees and the user was issued the cash.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Trigger</title>
              <para>
                A user inserts a card into the ATM.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Scenarios</title>
              <para>
                Here show sequence diagrams for the messages exchanged
                during a successful withdrawal as well as for unsuccessful attempts due to 
                <itemizedlist>
                  <listitem>
                    <para>Invalid pin number. </para>
                  </listitem>
                  <listitem>
                    <para>Insufficient funds in ATM. </para>
                  </listitem>
                  <listitem>
                    <para>Insufficient funds in account. </para>
                  </listitem>
                  <listitem>
                    <para>Communication to bank cannot be established. </para>
                  </listitem>
                  <listitem>
                    <para>User aborted transaction.</para>
                  </listitem>
                </itemizedlist> 
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Use Case completion</title>
              <para>
                The card is returned to the user or the card is withheld by the ATM
                and the user is asked to contact her/his bank.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Priority</title>
              <para>
                High.
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Constraints</title>
              <para>
                <itemizedlist>
                  <listitem><para>
                    All responses from the bank should be received within at most 
                    10 seconds.
                  </para></listitem>
                  <listitem><para>
                    The auto teller must be able to print five thousand transaction slips
                    before requiring paper or ink refilling.
                  </para></listitem>
                  <listitem><para>
                    90% of the users must be able to effectively use the system without
                    any prior training.
                  </para></listitem>
                </itemizedlist>
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Channels to Actors</title>
              <para>
                <itemizedlist>
                  <listitem>
                    <para>Screen and keypad to user. </para>
                  </listitem>
                  <listitem>
                    <para>Communication channel to bank.</para>
                  </listitem>
                </itemizedlist>
              </para>
            </formalpara></listitem>
            <listitem><formalpara>
              <title>Open Issues</title>
              <para>
                What happens if the ATM encounters a power failure during a transaction?
              </para>
            </formalpara></listitem>
          </orderedlist>
        </para>
    </section>

    <section><title>Functional Requirements</title>
      <para> 
        These are the requirements around the use cases as documented above.
      </para>
    </section>
    
    <section><title>External Interface Requirements </title>
      <para> 
        The system would typically interface with users and other systems. These other
        systems may be software or hardware systems.
        The external environment with which the system interacts may be graphically
        depicted using deployment diagrams as well as use case diagrams. 
      </para>
      <para>
        The interfaces themselves are documented with class diagrams showing the
        interfaces. The pre- and postconditions for the services to be provided
        by the external systems which the system we are developing requirements for
        is to interface with are documented as pre- and post-condition constraints
        on the services specified in the interface.
      </para>
      <para> 
        The way in which the interaction occurs (the messages exchanged between the system
        which is modeled and the external systems) will be specified via sequence and
        activity diagrams.
      </para>
      
      <section><title>User-Interface Requirements</title>
        <para> 
          User interface requirements include the way the user screens or other interfaces
          look visually as well as the transition paths from one screen to the next.
        </para>
        <para> 
          User Interface screens are typically specified via prototypes developed within a
          Visual Development Tool. They may also be specified via rough sketches.
        </para>
        <para> 
          The dynamics from one screen to the next is typically depicted via activity
          and/or sequence diagrams.
        </para>
      </section>

      <section><title>Usability Requirements</title>
        <para> 
          The usability requirements contain information on how usable the product should
          be. Generally one should adhere to IBM's Common User Access (CUA) Guidelines which are
          publicly available and not introduce some proprietary interface which looks different
          to all other interfaces and hence require a longer learning period.
        </para>
        <para> 
          Part of the usability requirements may be the limits on times which typical tasks
          or transactions will require for completion.
        </para>
        <para> 
          One might also want to specify an upper limit for the amount of training time
          required for the users. One may also specify the training resources which will be
          supplied which may include but is not limited to on-line help systems, wizards, tools,
          user's manuals.
        </para>
      </section>

      <section><title>Software Interfaces</title>
        <para> 
          Software interfaces specify how one software system interfaces with other
          software systems. Often one refers to the published interface of the other system
          specifying which services will be used. The other system may be an application
          purchased by the company, components of other applications, components of the system
          which are outside the scope of this project or external objects which typically offer
          their services over the Internet.
        </para>
        <para>
          In addition to the interface specifying the services with their pre- and 
          postconditions one may specify the concrete integration interface which
          may be, for example,
          <itemizedlist>
            <listitem><para>a WSDL for a web service (B2B) or</para></listitem>
            <listitem><para>a CORBA IDL.</para></listitem>
          </itemizedlist>
        </para>
      </section>
      
    <section><title>Hardware Interfaces</title>
      <para> 
        Hardware interface requirements would also typically refer to the published
        interface of a hardware system together with the pre-- and post-conditions
        of the services. In addition sequence and activity diagrams are used to
        document the expected deliverables of the system and the work flows.
      </para>
    </section>

    <section><title>Communication Interface Specifications</title>
      <para> 
        Here one specifies how the system communicates with the external world. The
        communication channels may be the LAN or Internet as well as serial or parallel ports. A
        deployment diagram can be used to show the communication channels and for each channel
        one would typically specify the communication protocol used and any other communication
        settings like the baud rate for serial channels.
      </para>
    </section>
  </section>

  <section><title>Data Requirements</title>
    <para> 
      The data requirements include the specification
      of the required data structures as well as the way the data has to be stored and
      the possible queries which can be applied to the data.
    </para>
    
    <section><title>Data Structure Requirements</title>
      <para> 
        In object-oriented modeling the data structures would be done via class diagrams
        using composition relationships to show nested data and generalization relationship to
        show data abstraction.
      </para>
      <para>
        Alternatively XML schemas can be used to specify the data structure requirements.
        These can be automatically generated from UML class diagrams.
      </para>
    </section>

    <section>
      <title>Data Flows</title>
      <para> 
        Data flows are usually shown via collaboration or sequence diagrams where the data
        is either part of the message arguments or part of the message return values.
        Activity diagrams can also be used to show the data flows.
      </para>
    </section>

    <section><title>Storage Formats</title>
      <para> 
        If the data is stored within an object-oriented data base there would often be a
        direct mapping of the data structures onto the data base structure.
      </para>
      <para> 
        In the case of relational data bases one would have to show the mapping onto the
        various table columns explicitly. One would also have to show the links between the
        various tables as well as the data formats for each column.
      </para>
      <para> 
        In the case of hierarchical data bases the data structure can be shown via class
        diagrams with each new level in the tree being a another composition link.
      </para>
    </section>

    <section><title>Storage Requirements</title>
      <para> 
        The actual storage requirements are either stated textually or shown within
        deployment diagrams.
      </para>
      <para> 
        Deployment diagrams and relational table hierarchies.
      </para>
    </section>

    <section><title>Requirements for Data Base Queries</title>
      <para> 
        Data base queries are modeled like any other service request and can be part of
        sequence, collaboration or activity diagrams. In addition one might want to have a
        separate table for the information which may be queried from a data base.
      </para>
    </section>
  </section>

  <section><title>Security Requirements</title>
    <para> 
      These include any requirements regarding security, integrity, or privacy issues that
      affect the use of the system and protection of the data used or created by the system.
    </para>
    <para> 
      Also define any user authentication or authorization requirements and identify any
      security or privacy policies or certifications the system must comply to.
    </para>
    <para> 
      For example, you might specify that access to a particular service is only granted if
      a user has authenticated themselves with an appropriate certificate or that the user
      password must be changed every two weeks and that previously used passwords may not be
      used again.
    </para>
  </section>

  <section><title>Reliability Requirements </title>
    <para> 
      These might include aspects like Availability The availability requirements may be as
      severe as 14 hours per day, all year round (365 days per year) or less demanding like
      between 8h00 and 17h00 on business days. For these periods one often specifies a minimum
      availability rate like 95still be vague for many systems. What exactly does availability
      mean? Does it mean available to as many users as required? Accuracy Here one would
      typically specify the number of decimal digits accuracy required on the numerical outputs.
      For financial systems this may mean to the nearest Rand or cent or to the nearest cent for
      every million Rand. Mean Time between Failures (MTBF) One first has to specify the meaning
      of a failure. Does it mean unavailability to users or the fact that maintenance is
      required? The mean time between failures is usually specified in hours, days or months.
      Mean Time to Repair (MTTR) Here one specifies the time within which the system must be
      repaired after a failure. Typically one would specify that 90failures must be repaired
      within 10 minutes and 99 Maximum Defect Rate This is usually measured as either bugs per
      thousand lines of code (in units of bugs/KLOC) or as bugs per class. Both of these are
      implementation related and would only be relevant for quality measures introduced within
      the development organization.
    </para>
  </section>

  <section><title>Performance Requirements </title>
    <para> 
      Performance requirements typically include response times, number of concurrent users
      or operations as well as turn-around time for system processes. For example, you might
      specify that 100 000 transactions must be processed per. This would typically mean that
      the system must handle that amount of transactions within about 6 hours in order to make
      room for load variations and down times.
    </para>
    <para> 
      Of course, processing times must make sense in the context that they are used. It
      would not make sense to require 2 days of processing to predict tomorrow's weather.
    </para>
  </section>

  <section><title>Safety Requirements </title>
    <para> 
      Safety requirements are concerned about the possible loss, damage or harm arising
      from the use of the product. Identify any dangerous actions that must be prevented as well
      as any safeguards or actions which must be introduced to avoid a situation which can
      result in loss, harm or damage.
    </para>
    <para> 
      For example, you might state that if the vibration level exceeds the maximum allowed
      level, the operation must be terminated within 100 milliseconds.
    </para>
  </section>

  <section><title>Legal Requirements </title>
    <para> 
      Legal requirements arise when the business processes or operations performed by the
      system fall under some public legislation or fall within a legal contract signed with
      another party.
    </para>
  </section>

  <section><title>Supportability Requirements </title>
    <para> 
      Requirements for supportability include coding standards, naming conventions, class
      libraries, utilities for maintaining and monitoring the system, utilities for start-up and
      shut-down as well as general configuration utilities.
    </para>
    <para> 
      You may also include requirements for error reporting standards as well as problem
      notification infrastructures as well as testing harnesses or other testing utilities which
      can be used.
    </para>
  </section>

  <section><title>Documentation Requirements</title>
    <para> 
      Here one might specify additional Specification documentation required as well as
      user's manuals, tutorials, on-line help, developers manuals etc.
    </para>
  </section>
  
</chapter>
