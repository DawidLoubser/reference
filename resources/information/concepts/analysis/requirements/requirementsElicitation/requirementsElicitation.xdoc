<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE chapter SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->
<chapter id="resources.information.concepts.analysis.requirements.requirementsElicitation.requirementsElicitation"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Requirements Gathering Techniques </title>

  <section><title>Introduction</title>
    <para> 
      One first generally gathers requirements without spending too much time on organizing
      them. This phase is largely dependent on client input and we shall discuss various
      techniques used to elicit system requirements from clients.
    </para>
  </section>

  <section><title>Interviews</title>
    <para> 
      Interviews are the most direct and relatively inexpensive way of obtaining
      information from a party. One simply asks the party which has the information 
      for it.
    </para>
    <para> One on one interviews can be particularly informal and productive. However,
      interviewing multiple people simultaneously has the benefit of cross-stimulation where one
      idea or comment from one person triggers responses and further ideas from his compatriots.
      On the other side, although a single interviewer can typically be perceived as less
      intimidating one should bear in mind that the interviewer can only absorb those issues and
      ideas which pass his “word-filter” which is formed by his or her personality as well as
      their environment and cumulative experiences.
    </para>
    <para> 
      Initially the interviews will focus on the client side but as the system requirements
      become clearer interviews with representatives of the developer organization and the
      organizations responsible for deploying and maintaining the system might yield further
      useful information.
    </para>
    
    <section><title>Some Guidelines for Interviewing</title>
      <para> 
        You should think about the following issues before going out to interview your
        client: 
        <itemizedlist>
          <listitem>
            <para>Obtain 
            <itemizedlist>
              <listitem>
                <para>Background info for company from public sources. </para>
              </listitem>
              <listitem>
                <para>Background info of interviewee.</para>
              </listitem>
            </itemizedlist>
            This will help you to 
            <itemizedlist>
              <listitem>
                <para>Avoid unnecessary, boring questions. </para>
              </listitem>
              <listitem>
                <para>Make questions more relevant.</para>
              </listitem>
            </itemizedlist>
              </para>
          </listitem>
          <listitem>
            <para>Capture the information on paper in some shorthand notation. Often sketches can
              be used to compactly and quickly capture information. Electronic capturing will only
              frustrate the interviewee and will force you to sacrifice a lot of personal contact –
              it is difficult to maintain any significant eye contact when using electronic
              capturing. </para>
          </listitem>
          <listitem>
            <para>Use context-free and in-context questions. Valuable information can be obtained
              by encourage the interviewee to think laterally outside their own context and
              more direct expectations. On the other hand their own context information is
              valuable and has to be captured too. To this end you can use context free questions
              like
              <itemizedlist>
                <listitem><para>
                  Do your competitors have that problem?
                </para></listitem>
                <listitem><para>
                  Is there perhaps another way in which you can give the customer what they
                  need?
                </para></listitem>
              </itemizedlist>
              and in-context questions like
              <itemizedlist>
                <listitem><para>
                  How would you want to perform the task with the new system?
                </para></listitem>
                <listitem><para>
                  What problems do you encounter when performing that task?
                </para></listitem>
              </itemizedlist>
              You should prepare a template for the interview but it should only be used as
              rough guideline. Generally responses will lead to follow-up questions or might
              highlight aspects which were not apparent when developing the template. Still, the
              template helps to avoid forgetting issues you wanted to discuss during the interview
              and can also help to avoid embarrassing pauses. </para>
          </listitem>
          <listitem>
            <para>If interviewee goes of in a tantrum about the problems with the current
              situation, give him/her ample time to relieve their feelings and take careful note
              of everything. Then explore the issues raised further with follow up questions. </para>
          </listitem>
          <listitem>
            <para>Always bear in mind that time is precious for anybody, no matter what position
              they have in the company. The current interview might very well be the last
              interview you will be able to conduct with that person (he or she might even resign)
              and hence try and explore issues arising from the interview until you have
              reasonable clarity about the issue. If this cannot be achieved the interviewee may
              be able to suggest other persons who can shed further light on that particular
              issue. </para>
          </listitem>
          <listitem>
            <para>After a few interviews common issues will resurface again and again. These will
              probably be the highest priority needs.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>

    <section><title>Interviewing the Client</title>
      <para> Usually the first and obvious approach to discovering system requirements is simply
        to ask the client. Of course, the client typically hosts many different types of people
        which have a stake in the system. We identified the following roles on the client side: 
      <itemizedlist>
        <listitem>
          <para>The customer. </para>
        </listitem>
        <listitem>
          <para>The product champion(s). </para>
        </listitem>
        <listitem>
          <para>Management </para>
        </listitem>
        <listitem>
          <para>Users. </para>
        </listitem>
        <listitem>
          <para>Domain experts. </para>
        </listitem>
        <listitem>
          <para>Affected business areas. </para>
        </listitem>
        <listitem>
          <para>Evaluators.</para>
        </listitem>
      </itemizedlist>
      </para>
      <section><title>Interviewing the customer</title>
        <para> The starting point in the interviewing would naturally be the customer, i.e. the
          entity which requested the product in the first place and which pays for the product.
        </para>
      </section>
      
      <section><title>Interviewing the Product Champion(s)</title>
        <para> A good next step would be to interview the product champion(s), i.e. the
          person(s) whose vision drives the project. They would typically provide the high-level
          vision for the project and can usually communicate effectively the reason why the
          system is needed by the client.</para>
      </section>

      <section><title>Interviewing Management</title>
        <para> In order to remain initially focused on the bigger picture it might be fruitful
          to then spend some time interviewing management about the wider and more immediate
          business objectives and about how it is expected that the system will contribute to 
          these.
        </para>
      </section>

      <section><title>Interviewing Users</title>
        <para> 
          A possible next step would be to interview the users of the system. They can
          provide a very concrete view of what they are doing and how the system would help
          them. This might be facilitated through user representatives which would be product
          champions on the user level. Alternatively or additionally a questionnaire may be
          developed which would be given to all users. The advantage of the latter is that they
          may provide some statistical information about how wide spread certain feelings and
          problems are.
        </para>
      </section>

      <section><title>Domain Experts</title>
        <para> 
          The interviews with domain experts will fill in a lot of the detailed requirements
          and constraints. Furthermore, the domain experts can provide detailed explanations of
          the various business processes and work flows in the client organization.
        </para>
        <para> 
          Often they can point out incorrect and incomplete information obtained from the
          other role players and can be used to resolve conflicting information.
        </para>
      </section>
    </section>

    <section><title>Interviewing Developers, Deployers and Maintainers</title>
      <para> 
        Once the client's requirements start becoming clearer it might be useful to conduct
        some interviews with the organizations for developing, deploying and maintaining the
        system. They might point features of the requirements which are unfeasible or very
        costly and may suggest alternative ways of providing similar functionality.
      </para>
    </section>
  </section>

  <section><title>Obtaining Information from the Client's Clients</title>
    <para> 
      For systems which provide a portal into a company one often has to obtain
      requirements and preferences information from the client's clients. This 
      is often quite difficult.
    </para>
    <para> 
      Depending on the client profile there might be market surveys available. Alternatively
      one could conduct such market surveys which has the advantage of being able to control the
      questions raised with the clients.
    </para>
    <para> 
      Another approach is to convince the client company that it is in their interest to
      offer incentives (e.g. discounts, gifts, free services, …) to their clients for fling in
      a feedback form. Such feedback forms would typically be made available on-line.
    </para>
    <para> 
      In cases where the clients are companies or well-defined and easily locatable groups
      one can arrange interviews with them to elicit their requirements.
    </para>
  </section>

  <section><title>Current Systems</title>
    <para> 
      In the case where the new system should replace a current system the current system
      is a very valuable resource of system requirements. One can study the processes the system
      handles themselves as well as user's and developer's manuals any on-line documentation.
    </para>
    <para> 
      After understanding what the existing system does one should focus on its limitations
      and inefficiencies and in particular on the reasons the client has for wanting to replace
      the system. To this end one can look at problem reports and enhancement requests. They may
      not only provide information about the problems, limitations and frustrations encountered
      with the current system but may also contain suggestions for improving the system.
    </para>
    <para> 
      You can also ask the client stake holders for those features of the current system
      which they feel are never used. This will be useful when pruning and prioritizing features
      of the new system.
    </para>
  </section>

  <section><title>Observing Users at Work</title>
    <para> 
      Analysts may want to observe people at work and view the various work flows firsthand
      from within their own context. In this way analysts may obtain a more accurate
      understanding of the issues encountered by users and may feel more confident about
      understanding the system requirements. During observation analysts may get their own ideas
      about how certain business processes may be improved.
    </para>
  </section>

  <section><title>Brainstorming Sessions</title>
    <para> 
      There are many benefits of brainstorming sessions. These include 
      <itemizedlist>
        <listitem>
          <para>Generally one idea leads to another and a large amount of ideas and issues are
            raised in a short amount of time. </para>
        </listitem>
        <listitem>
          <para>Because people with different backgrounds who may not normally talk to one another
            come together one observes that 
          <itemizedlist>
            <listitem>
              <para>New communication channels may be opened. </para>
            </listitem>
            <listitem>
              <para>A lot of lateral thinking is encouraged. </para>
            </listitem>
            <listitem>
              <para>Ideas can be explored from many different contexts and can be refined using the
                wider experience and skills pool available during brainstorming sessions. </para>
            </listitem>
            <listitem>
              <para>Different ideas arising from different contexts may be combined to generate
                ingenuitive solutions to problems. </para>
            </listitem>
            <listitem>
              <para>Mutual understanding and consensus between stake holders is facilitated. </para>
            </listitem>
            <listitem>
              <para>Stake holders who only had a very limited vision of the system relevant for
                their context gain a wider understanding of the system.</para>
            </listitem>
          </itemizedlist></para>
        </listitem>
      </itemizedlist>
    </para>  

    <para> 
      One should, however, try and keep the brainstorming sessions productive and although
      political issues and debates should not be totally squashed, they should be mediated and
      defused by an independent chair.
    </para>
  </section>

  <section><title>Requirements Workshops</title>
    <para> 
      After having obtained some feeling for the required system through some initial
      interviews it is most probably a good idea to conduct a requirements workshop. A
      requirements workshop is largely a brainstorming session among all participants. Generally
      it may be good to have the requirements workshop prior to more focused brainstorming
      sessions where only key stake holders are involved. Depending on the size of the project
      the requirements workshop could span a few hours to perhaps 2 days.
    </para>
    <para> 
      Initially the idea of a requirements workshop may encounter some resistance. The need
      for the workshop might be understood but the company may feel they cannot get all
      stake holders together. Try and find a time which suits the critical stake holders as well as
      those which have already demonstrated buy-in and schedule the workshop anyway. Usually
      most stake holders will pitch up anyway. (Remember that the company most probably has no
      difficulties in organizing an annual social event).
    </para>
    <para> Requirements workshops are particularly effective in 
      <itemizedlist>
        <listitem>
          <para>Generating a lots of ideas and exposing many issues. </para>
        </listitem>
        <listitem>
          <para>Facilitating consensus about the requirements. </para>
        </listitem>
        <listitem>
          <para>Obtaining commitments from all stake holders for the project. </para>
        </listitem>
        <listitem>
          <para>Agreeing upon a course of action. </para>
        </listitem>
        <listitem>
          <para>Exposing and possibly resolving political issues which might affect the project.</para>
        </listitem>
      </itemizedlist>
    </para>  
    <para> 
      You will most probably have only one opportunity to get all stake holders together and
      hence the requirements workshop should be carefully organized and publicized.
    </para>
    <para> 
      Participants should not arrive at the workshop without any prior briefings. Material
      on suggested features, draft requirements, bug and enhancement reports, marketing and
      survey information as well as unique insights obtained by the analysts should be
      circulated in concise form. Often a hard-copy is less likely to be ignored than an e-mail
      entering an already overfull in-box.
    </para>
    <para> 
      The workshop should be chaired by somebody who has no vested interests and who is not
      going to contribute ideas to the meeting. Otherwise the meeting will already be biased and
      politicized. It might be a good idea to use a facilitator with requirements management as
      well as team- and consensus-building skills to chair the workshop. Otherwise the chair
      might be fled by a representative of the analyst organization who should, however, not
      contribute ideas to the meeting.
    </para>
  </section>

  <section><title>Story Boarding</title>
    <para> 
      During story boarding sessions the analysts explain the system requirements as they
      currently understand them. The idea is to make the sessions as informal as possible,
      preferably not making the story boarding session into a standard presentation with
      prepared slides or multimedia presentations. The problem with these is that it looks to
      the client as if a lot of work has gone into developing the requirements and may even give
      the impression that these requirements are cast in stone. Instead you could use a simple
      white board or perhaps develop slides real-time, either using an overhead projector with
      some transparency pens or by developing them live using a some slide generation software.
      you do not give the impression that anything is cast in stone yet. The client is more
      likely to suggest that something is incorrect and that you should perhaps rub out some
      statement or graph and replace it with something else.
    </para>
    <para> 
      Similarly, your understanding of the required user interfaces may be best
      communicated by developing user interface screens live during story boarding sessions,
      either on a white board or more likely using a Visual QUI development tool.
    </para>
    <para> 
      The whole purpose of story boarding is to stimulate interactive lively sessions where
      a lot of ideas are generated within an informal setting. It is very fruitful to introduce
      story boarding sessions early in the process, even (or particularly) if you know that you
      do not understand the system requirements yet. The purpose of these sessions is not to
      impress the client with the amount of work you have put into the project. Neither is it to
      try and demonstrate to the client that you already have a complete understanding of the
      system requirements. If this was the case, there would be no need for storyboarding.
      Instead, the client should get the impression that you do not yet have a good
      understanding of the system requirements and that you are still at a stage where you can
      easily modify requirements.
    </para>
    <para> 
      Later on in the system requirements process you can demonstrate the system
      requirements through more sophisticated means including prepared slides, demonstrations of
      prototypes and general multimedia presentations.
    </para>
  </section>

  <section><title>Pruning Requirements</title>
    <para> 
      I feel only those requirements which are simply wrong should be pruned. Unimportant
      features of the collected requirements will fall out during the prioritization step.
      Domain experts and product champions and perhaps the sponsor and management of the client
      company are particularly suited for the job of pruning out ideas which are either
      incorrect or not aligned with the business objectives.
    </para>
  </section>

  <section><title>Prioritization</title>
    <para> In chapter <xref linkend="resources.information.concepts.analysis.requirements.visionScope.visionScope"/>
      we identified the following priority classes: A driver: An objective which gives
      the project a reason for its existence, i.e. without driver objectives the project would
      not exist. A constraint: A limiting factor which has to be satisfied for the product to be
      useful to the client. Important: If important objectives are not met the utility or
      revenue generated or saved by the system will be compromised. Useful: An objective which
      may be balanced against other factors in order to be able to achieve the driver objectives
      within the constraints.
    </para>
    <para> 
      We now have to get the client to allocate requirements to the priority classes. The
      tendency is typically to view requirements as more important than they really are. From
      the view of one perspective some feature might seem critical which, in the bigger picture
      of the business objectives, may fade away in insignificance.
    </para>
    <para> 
      One way to get clients to commit to priorities is to initially ask them to which
      feature they would choose if they could keep their current system (if they have one) and
      the new system could only support a single feature. Ask whether that feature is part of
      the justification for the project. If this is so, one usually has identified the requirement
      behind the main driver objective of the project and highlights the main contribution
      expected from the new system.
    </para>
    <para> 
      Next ask them to identify only those features which have to be supported in order for
      the main feature to work. This should resolve the constraints for the main driver 
      objective.
    </para>
    <para> 
      You can now iterate this process identifying the various drivers and accompanying
      constraints in the order of their priorities.
    </para>
    <para> 
      If there is a current Next you can ask the client stake holders to select those
      features of the current system which are not or no longer used and can be excluded from
      the requirements Specification for the new system.
    </para>
    <para> 
      Next you can reverse the process by asking the client what feature they would select
      if they could only select one feature from the current system which is not contained in
      the driver or constraint features so far agreed upon for the new system.
    </para>
    <para> 
      Instead of active if only one feature could be supplied, what would you want it to be?
    </para>
  </section>
  
</chapter>
