<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns144:section xmlns:ns144="http://docbook.org/ns/docbook" xml:id="resources.information.concepts.objectOrientation.introduction.ooModeling">
<ns145:title xmlns:ns145="http://docbook.org/ns/docbook">Introduction to Object-Oriented Modeling</ns145:title>
  <ns146:para xmlns:ns146="http://docbook.org/ns/docbook">
    Object-oriented modeling is used in more and more disparate fields. Let
    us first look at what object-oriented modeling is and then at some benefits
    provided by object-oriented modeling.
  </ns146:para>
  
  
  
  <ns147:section xmlns:ns147="http://docbook.org/ns/docbook"><ns148:title xmlns:ns148="http://docbook.org/ns/docbook">What is Object-Oriented Modeling?</ns148:title>
    <ns149:para xmlns:ns149="http://docbook.org/ns/docbook">
      Object-Oriented Modeling is a way of modeling systems in a
      language natural to the system. The system, which itself is an object,
      is iteratively decomposed into objects (components) each with its own
      attributes and services.
      These components collaborate to provide the required functionality
      of the system.
    </ns149:para>
    <ns150:para xmlns:ns150="http://docbook.org/ns/docbook">
      Object-oriented modeling thus aims to structurally and functionally
      decompose a system into smaller units with less complexity and
      less responsibilities. These units should be as independent as possible
      and should preferable be testable outside the system. The system is
      then iteratively assembled from these tested components.
    </ns150:para>
    <ns151:para xmlns:ns151="http://docbook.org/ns/docbook">
      There is an overhead associated with developing and maintaining the
      models. In fact, in many projects the model has not been kept at the
      same maintenance level as the code, often because developers find it
      a burden to do that. But even in these projects the benefits from 
      having based the system on an initial analysis and design usually
      justify the extra effort incurred.
    </ns151:para>  
  </ns147:section>
  
  

  <ns152:section xmlns:ns152="http://docbook.org/ns/docbook"><ns153:title xmlns:ns153="http://docbook.org/ns/docbook">What is Object-Oriented Analysis and Design?</ns153:title>
    <ns154:para xmlns:ns154="http://docbook.org/ns/docbook">
      Object-Oriented Analysis and Design (OOAD) refers to the application
      of object-oriented modeling to the analysis of systems or system requirements
      and to designing object-oriented systems fulfilling these requirements.
    </ns154:para>
    <ns155:para xmlns:ns155="http://docbook.org/ns/docbook">
      The system may be virtually anything including an organization 
      (<ns156:abbrev xmlns:ns156="http://docbook.org/ns/docbook">e.g.</ns156:abbrev> a company), a business unit, a software
      system which exists or one for which the requirements specification
      are written, a data warehouse or even a hardware system.
    </ns155:para>
  </ns152:section>

  
  

  <ns157:section xmlns:ns157="http://docbook.org/ns/docbook"><ns158:title xmlns:ns158="http://docbook.org/ns/docbook">Why use Object-Oriented Modeling?</ns158:title>

    <ns159:para xmlns:ns159="http://docbook.org/ns/docbook">
      Object-Orientation (OO) has been the buzz word for more than a decade now. The
      initial expectations where perhaps inflated and many of the initial OO
      projects where either much more expensive than anticipated or failed
      completely. The OO technologies have, however, matured a lot and the
      delivery of good quality, cost-efficient products are today largely in the 
      OO paradigm.
    </ns159:para>
    
    <ns160:section xmlns:ns160="http://docbook.org/ns/docbook">
      <ns161:title xmlns:ns161="http://docbook.org/ns/docbook">Clean conceptual modeling of domains</ns161:title>
      <ns162:para xmlns:ns162="http://docbook.org/ns/docbook">
        Object oriented models provide a farmework within which one can formalize clean, 
        intuitive conceptualizations of domains. 
      </ns162:para>
    </ns160:section>
    
    
    <ns163:section xmlns:ns163="http://docbook.org/ns/docbook"><ns164:title xmlns:ns164="http://docbook.org/ns/docbook">Reducing Realization Costs</ns164:title>
      <ns165:para xmlns:ns165="http://docbook.org/ns/docbook">
        One of the main attractions of object-oriented methodologies 
        is the promise of reduced realization costs. This is facilitated
        by
        <ns166:itemizedlist xmlns:ns166="http://docbook.org/ns/docbook">
          <ns167:listitem xmlns:ns167="http://docbook.org/ns/docbook"><ns168:para xmlns:ns168="http://docbook.org/ns/docbook">
            improved communication between role players,
          </ns168:para></ns167:listitem>
          <ns169:listitem xmlns:ns169="http://docbook.org/ns/docbook"><ns170:para xmlns:ns170="http://docbook.org/ns/docbook">
            complexity reduction for complex domains, and
          </ns170:para></ns169:listitem>
          <ns171:listitem xmlns:ns171="http://docbook.org/ns/docbook"><ns172:para xmlns:ns172="http://docbook.org/ns/docbook">
            contract and component based approach to service providers.
          </ns172:para></ns171:listitem>
        </ns166:itemizedlist>
      </ns165:para>
    </ns163:section>

    <ns173:section xmlns:ns173="http://docbook.org/ns/docbook"><ns174:title xmlns:ns174="http://docbook.org/ns/docbook">Improved Communication between Role Players</ns174:title>
      <ns175:para xmlns:ns175="http://docbook.org/ns/docbook">
        Because OOAD languages (<ns176:abbrev xmlns:ns176="http://docbook.org/ns/docbook">e.g.</ns176:abbrev> UML)
        <ns177:itemizedlist xmlns:ns177="http://docbook.org/ns/docbook">
          <ns178:listitem xmlns:ns178="http://docbook.org/ns/docbook"><ns179:para xmlns:ns179="http://docbook.org/ns/docbook">aim to remain close to the problem domain</ns179:para></ns178:listitem>
          <ns180:listitem xmlns:ns180="http://docbook.org/ns/docbook"><ns181:para xmlns:ns181="http://docbook.org/ns/docbook">
            allow for direct mapping onto various programming languages, 
            particularly onto OO programming languages
          </ns181:para></ns180:listitem>
        </ns177:itemizedlist>
        they provide an ideal communication medium between the various role 
        players in the system analysis and development process, from domain
        expert to analysts, designer, implementor and maintainer. 
      </ns175:para>
      <ns182:para xmlns:ns182="http://docbook.org/ns/docbook">
        Graphical languages like the Unified Modeling Language (UML) allow for 
        diagrammatic designs which provide selective views, focusing only on 
        those elements which are relevant to those points one currently wants 
        to illustrate.
      </ns182:para>
      
      <ns183:section xmlns:ns183="http://docbook.org/ns/docbook"><ns184:title xmlns:ns184="http://docbook.org/ns/docbook">Communication with Domain Experts</ns184:title>
        <ns185:para xmlns:ns185="http://docbook.org/ns/docbook">
          Of particular importance is the communication with domain experts
          who are in the best position to understand the system requirements.
          A domain expert is one who is an expert of the problem domain. 
          Typically domain experts are found within the client company. They
          should be included formally or informally in the development team, 
          at least during the requirements analysis stage.
        </ns185:para>
        <ns186:para xmlns:ns186="http://docbook.org/ns/docbook">
          Many studies have shown that typically around
          half of the system bugs are due to errors in understanding
          the system requirements and that these errors contribute more than 80% of
          the cost of system errors. It is thus critical that one obtains a complete
          and precise (unambiguous) understanding of the client's requirements
          and there is no better source for information regarding these than
          the domain experts.
        </ns186:para>
        <ns187:para xmlns:ns187="http://docbook.org/ns/docbook">
          Good object-oriented models are usually easily accessible to domain experts
          and they facilitate communication between domain experts, system analysts
          and developers.
        </ns187:para>
      </ns183:section>
    </ns173:section>

    <ns188:section xmlns:ns188="http://docbook.org/ns/docbook"><ns189:title xmlns:ns189="http://docbook.org/ns/docbook">Reducing Complexity</ns189:title>
      <ns190:para xmlns:ns190="http://docbook.org/ns/docbook">
        Systems are generally complex and a large part of the effort should be
        directed at reducing the intrinsic complexity. This is not only true
        for software systems but for systems in general. A modern motor car, for 
        example, is in its entirety a very complex system. However, by viewing
        the car not as a single monolithic apparatus, but as a collection of
        components which interact with one another in standardized ways the
        perception of the system is a lot less complex. One can understand
        the functioning of the car at a higher, more abstract level by talking
        abstractly about the components without zooming into the design and
        implementation details of these components. These components can 
        then be designed and developed by separate development teams residing
        very often in separate companies. 
      </ns190:para>
      <ns191:para xmlns:ns191="http://docbook.org/ns/docbook">
        In a similar way complexity reduction in software systems can be achieved
        via a component based approach. Furthermore, object-oriented analysis
        and design techniques allow for selective viewing of system features.
        These selective views are incomplete views which only present those
        features of the system relevant to the current view.
      </ns191:para>
    </ns188:section>

    <ns192:section xmlns:ns192="http://docbook.org/ns/docbook"><ns193:title xmlns:ns193="http://docbook.org/ns/docbook">Component Based Approach</ns193:title>
      <ns194:para xmlns:ns194="http://docbook.org/ns/docbook">
        In the previous section we touched upon how system complexity reduction
        has been achieved in the manufacturing world using a component based
        approach. A car manufacturer does not have to understand the implementation
        complexities of the electronic ignition or gearbox. He has to understand
        the specifications and the interface. Understanding is sufficient for
        judicious component selection and interfacing/assembling of components
        to produce the product.
      </ns194:para>
      <ns195:para xmlns:ns195="http://docbook.org/ns/docbook">
        In a similar way we are moving towards a component based approach in
        software development. This is facilitated by object orientation and
        various system integration methodologies (particularly CORBA) as well
        as business and presentation logic containers like servlet and EJB
        containers or the containers provided by .Net.
      </ns195:para>
      <ns196:para xmlns:ns196="http://docbook.org/ns/docbook">
        Each component deployed on a machine or in a component container
        complies to some specifications and has a well defined
        interface. The components themselves can be produced by component
        vendors. Such components may be bought from these component vendors.
        A component-based approach aims for increases in
          <ns197:itemizedlist xmlns:ns197="http://docbook.org/ns/docbook">
            <ns198:listitem xmlns:ns198="http://docbook.org/ns/docbook"><ns199:para xmlns:ns199="http://docbook.org/ns/docbook">productivity,</ns199:para></ns198:listitem>
            <ns200:listitem xmlns:ns200="http://docbook.org/ns/docbook"><ns201:para xmlns:ns201="http://docbook.org/ns/docbook">quality and</ns201:para></ns200:listitem>
            <ns202:listitem xmlns:ns202="http://docbook.org/ns/docbook"><ns203:para xmlns:ns203="http://docbook.org/ns/docbook">re-use.</ns203:para></ns202:listitem>
          </ns197:itemizedlist>
      </ns196:para>
    </ns192:section>
    
    <ns204:section xmlns:ns204="http://docbook.org/ns/docbook"><ns205:title xmlns:ns205="http://docbook.org/ns/docbook">Increasing Productivity and System Quality</ns205:title>
      <ns206:para xmlns:ns206="http://docbook.org/ns/docbook">
        The industrial revolution of the 19'th century has shifted the production
        process from single producers developing entire systems from scratch to
        a component-based approach where systems are largely assembled from tested
        components. This has resulted in an increase in quality as well as in
        productivity. These are driven by specialization of manufacturers and by
        component reuse.
      </ns206:para>    
      <ns207:para xmlns:ns207="http://docbook.org/ns/docbook">
        The component-based approach in software production is starting to result
        in a similar increase in quality and productivity. The components interface
        via predefined interfaces and comply to manufacturer specifications. They
        are tested thoroughly and software systems are, to a large extend, assembled
        from these tested components.
      </ns207:para>
    </ns204:section>
    
    <ns208:section xmlns:ns208="http://docbook.org/ns/docbook"><ns209:title xmlns:ns209="http://docbook.org/ns/docbook">Reducing Risk of Failures</ns209:title>
      <ns210:para xmlns:ns210="http://docbook.org/ns/docbook">
        Traditionally a large proportion of system development projects simply failed.
        They did not deliver what the client really needed, were often error prone
        and hugely over budget.
      </ns210:para>
      <ns211:para xmlns:ns211="http://docbook.org/ns/docbook">
        The focus on communication with domain experts in order to understand the
        system requirements together with the component-based approach of assembling
        systems from tested components should significantly reduce the risk of failure.
      </ns211:para>
      <ns212:para xmlns:ns212="http://docbook.org/ns/docbook">
        The biggest risk is perhaps that of building the wrong system. This can be due 
        to not understanding what the clients requested. It is, however, not uncommon
        that the client themselves do not understand what they actually need. OOAD can
        help to prevent both problems. It facilitates communication with clients and
        domain experts and it can help clients to understand their own needs.
      </ns212:para>  
      <ns213:para xmlns:ns213="http://docbook.org/ns/docbook">
        Other factors which should help to reduce the risk of failure are
        <ns214:itemizedlist xmlns:ns214="http://docbook.org/ns/docbook">
          <ns215:listitem xmlns:ns215="http://docbook.org/ns/docbook"><ns216:formalpara xmlns:ns216="http://docbook.org/ns/docbook">
            <ns217:title xmlns:ns217="http://docbook.org/ns/docbook">Incremental delivery</ns217:title>
            <ns218:para xmlns:ns218="http://docbook.org/ns/docbook">
              The required functionality (all the use cases)
              are not delivered all at once but incrementally. This gives clients
              the chance to evaluate the completed modules and give early feedback.
            </ns218:para>
          </ns216:formalpara></ns215:listitem>
          <ns219:listitem xmlns:ns219="http://docbook.org/ns/docbook"><ns220:formalpara xmlns:ns220="http://docbook.org/ns/docbook">
            <ns221:title xmlns:ns221="http://docbook.org/ns/docbook">Solving difficult problems first</ns221:title>
            <ns222:para xmlns:ns222="http://docbook.org/ns/docbook">
              The difficult elements of a system should be
               attacked early. This makes certain that problems are identified early 
               and allows more time to think about these issues. Furthermore, should a
               problem be unsurmountable, this will be apparent early in the process
               where the project cost is still relatively low. Also, once these have
               been completed the scheduling of delivery should be a lot more certain.
            </ns222:para>
          </ns220:formalpara></ns219:listitem>
          <ns223:listitem xmlns:ns223="http://docbook.org/ns/docbook"><ns224:formalpara xmlns:ns224="http://docbook.org/ns/docbook">
            <ns225:title xmlns:ns225="http://docbook.org/ns/docbook">Testing</ns225:title>
            <ns226:para xmlns:ns226="http://docbook.org/ns/docbook">
              Testing should be an integral part of the process starting with
              <ns227:itemizedlist xmlns:ns227="http://docbook.org/ns/docbook">
                <ns228:listitem xmlns:ns228="http://docbook.org/ns/docbook"><ns229:para xmlns:ns229="http://docbook.org/ns/docbook">
                  testing of the business model and continuing with                  
                </ns229:para></ns228:listitem>
                <ns230:listitem xmlns:ns230="http://docbook.org/ns/docbook"><ns231:para xmlns:ns231="http://docbook.org/ns/docbook">
                  testing of the requirements,
                </ns231:para></ns230:listitem>
                <ns232:listitem xmlns:ns232="http://docbook.org/ns/docbook"><ns233:para xmlns:ns233="http://docbook.org/ns/docbook">
                  testing of the architecture and high-level design,
                </ns233:para></ns232:listitem>
                <ns234:listitem xmlns:ns234="http://docbook.org/ns/docbook"><ns235:para xmlns:ns235="http://docbook.org/ns/docbook">
                  testing of the logical units at various levels of granularity
                  and finally 
                </ns235:para></ns234:listitem>
                <ns236:listitem xmlns:ns236="http://docbook.org/ns/docbook"><ns237:para xmlns:ns237="http://docbook.org/ns/docbook">
                  high-level system testing in a deployment environment.
                </ns237:para></ns236:listitem>
              </ns227:itemizedlist>
            </ns226:para>
          </ns224:formalpara></ns223:listitem>
        </ns214:itemizedlist>
      </ns213:para>
    </ns208:section>
    
    <ns238:section xmlns:ns238="http://docbook.org/ns/docbook"><ns239:title xmlns:ns239="http://docbook.org/ns/docbook">Reduced Maintenance Costs</ns239:title>
      <ns240:para xmlns:ns240="http://docbook.org/ns/docbook">
        The reduced system complexity and a component-based approach should result
        in significant lower maintenance costs. The systems should be much more
        accessible to persons who were not part of the original development team
        and even for those who were, the model should help to understand the system
        once again. 
      </ns240:para>
      <ns241:para xmlns:ns241="http://docbook.org/ns/docbook">
        Furthermore, often maintenance can be localized to within single components
        and sometimes these components can be simply exchanged for more modern
        components which may even be supplied by different suppliers.
      </ns241:para>
    </ns238:section>

    <ns242:section xmlns:ns242="http://docbook.org/ns/docbook"><ns243:title xmlns:ns243="http://docbook.org/ns/docbook">Facilitating Dynamic Systems</ns243:title>
      <ns244:para xmlns:ns244="http://docbook.org/ns/docbook">
        Successful software systems generally live longer than anticipated as is
        seen by the large number of legacy systems in use.
        Over such long periods the environment can change substantially. The result
        is that the requirements for systems may change frequently. Often companies
        which can change their systems more rapidly and can hence deliver new 
        products faster have the edge over those companies not in the position to 
        do that.
      </ns244:para>  
      <ns245:para xmlns:ns245="http://docbook.org/ns/docbook">
        Object-oriented modeling and in particular a component based approach where
        newer components can be plugged in to replace the older components can
        increase the flexibility of systems considerably. Also, the ability to
        understand a system from the design and to test the system after modification
        can increase the speed with which systems can be modified.
      </ns245:para>
      <ns246:para xmlns:ns246="http://docbook.org/ns/docbook">
        Furthermore, aspects of legacy systems can be re-used in a clean object-oriented 
        way and integrated cleanly into modern systems via integration technologies like
        CORBA and SOAP.
      </ns246:para>
    </ns242:section>

    <ns247:section xmlns:ns247="http://docbook.org/ns/docbook"><ns248:title xmlns:ns248="http://docbook.org/ns/docbook">Availability of Analysis and Design Tools</ns248:title>
      <ns249:para xmlns:ns249="http://docbook.org/ns/docbook">
        Finally, object orientation lends itself to developing  
        powerful analysis and design tools. Many of these support the full
        software development cycle, including analysis, design, implementation, 
        documentation generation and verification. They often support automatic 
        code generation from designs and automatic design generation from code. 
        Some of these support round-trip engineering which allows the user to 
        make changes either on the code or on the design with the rest of the 
        system being automatically updated. This ensures that design and code 
        are always on the same maintenance level.
      </ns249:para>
    </ns247:section>
  </ns157:section>
</ns144:section>