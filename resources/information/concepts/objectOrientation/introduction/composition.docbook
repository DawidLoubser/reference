<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns16:section xmlns:ns16="http://docbook.org/ns/docbook" xml:id="resources.information.concepts.objectOrientation.introduction.composition">

  <ns17:title xmlns:ns17="http://docbook.org/ns/docbook">Composition</ns17:title>
  <ns18:para xmlns:ns18="http://docbook.org/ns/docbook">
    An object is usually composed of a number of components which are themselves
    objects. The question which is not always trivial to answer is 
    <ns19:blockquote xmlns:ns19="http://docbook.org/ns/docbook"><ns20:para xmlns:ns20="http://docbook.org/ns/docbook"><ns21:emphasis xmlns:ns21="http://docbook.org/ns/docbook">
      What makes one object a component of another? 
    </ns21:emphasis></ns20:para></ns19:blockquote>
    To this end we need to understand the implications of a composition relationship.
    Composition implies
    <ns22:itemizedlist xmlns:ns22="http://docbook.org/ns/docbook">
      <ns23:listitem xmlns:ns23="http://docbook.org/ns/docbook"><ns24:formalpara xmlns:ns24="http://docbook.org/ns/docbook">
        <ns25:title xmlns:ns25="http://docbook.org/ns/docbook">Ownership</ns25:title>
        <ns26:para xmlns:ns26="http://docbook.org/ns/docbook">
          Linguistically one would say that the aggregate object (the
          container object) <ns27:emphasis xmlns:ns27="http://docbook.org/ns/docbook">has</ns27:emphasis> a component. For example
          <ns28:blockquote xmlns:ns28="http://docbook.org/ns/docbook"><ns29:para xmlns:ns29="http://docbook.org/ns/docbook"><ns30:emphasis xmlns:ns30="http://docbook.org/ns/docbook">
            The car has an engine.
          </ns30:emphasis></ns29:para></ns28:blockquote>
          The container object must be able to say with a good conscience
          that the component is his/hers.              
        </ns26:para>
      </ns24:formalpara></ns23:listitem>
      <ns31:listitem xmlns:ns31="http://docbook.org/ns/docbook"><ns32:formalpara xmlns:ns32="http://docbook.org/ns/docbook">
        <ns33:title xmlns:ns33="http://docbook.org/ns/docbook">Adopting Responsibility for Component</ns33:title>
        <ns34:para xmlns:ns34="http://docbook.org/ns/docbook">
          If a car is yours then you are responsible for it. For example,
          if the car crashes into a building because the brakes failed,
          then you are responsible for the damage. Similarly, if the car is
          yours, nobody should be able to make use of it or to change its
          state without your permission. We shall see later that a lot of
          object-oriented modeling revolves around judicious distribution 
          of responsibilities.
        </ns34:para>
      </ns32:formalpara></ns31:listitem>
      <ns35:listitem xmlns:ns35="http://docbook.org/ns/docbook"><ns36:formalpara xmlns:ns36="http://docbook.org/ns/docbook">
        <ns37:title xmlns:ns37="http://docbook.org/ns/docbook">Coincident life spans</ns37:title>
        <ns38:para xmlns:ns38="http://docbook.org/ns/docbook">
          In object-oriented software systems composition may imply
          that the life span of the component is limited to that of its
          owner/container. For example, when an account is closed and
          deleted, its balance and account number will no longer exist.
        </ns38:para>
      </ns36:formalpara></ns35:listitem>
    </ns22:itemizedlist>
  </ns18:para>
</ns16:section>