<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-2-6 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>What is a class?</title>
    <para> Classes represent concepts and can be used to specify static aspects around these
        concepts. They are abstraction of objects and encapsulate commonalities across all objects
        of that class, <abbrev>i.e.</abbrev> across all instances of the class.
        <indexterm>
            <primary>class</primary>
            <secondary>definintion of</secondary>
        </indexterm>
    </para>
    <para> Commonalities which may be defined for a class include <itemizedlist>
            <listitem>
                <para>common user properties,</para>
            </listitem>
            <listitem>
                <para>common internal state,</para>
            </listitem>
            <listitem>
                <para>common services offering,</para>
            </listitem>
            <listitem>
                <para>common processes followed when realizing a particular type of service request,
                    and</para>
            </listitem>
            <listitem>
                <para>common relationships to other objects.</para>
            </listitem>
        </itemizedlist>
    </para>

    <para> Any object which is an instance of the class will thus have the properties and behaviour
        as specified for the class. </para>

    <section>
        <title>Assigning process to services</title>
        <para> Introducing classes, enables one to specify the processes which should be followed
            for its services. These could be business or system processes. Wen a user requests a
            service from in instance of the class, the instance will follow the process for that
            service as defined for the class. </para>
    </section>

    <section>
        <title>Classes and substitutability</title>
        <para> Since a class is an abstraction of an object, it can be used to decouple from any
            particular object, <abbrev>i.e.</abbrev> in cases where the dependency is on a class,
            one can substitute one instance of a class with another. </para>
        <para> For example, one may make the following statement: <blockquote>
                <para>
                    <emphasis> Hire a car and drive to your parents. </emphasis>
                </para>
            </blockquote> This is a statement made at the class level. When executing the request
            one may substitute any object which <emphasis>is a</emphasis> car and hence has the
            properties and behaviour of a car. </para>
    </section>

</section>
