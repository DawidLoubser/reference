<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-2-6 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Contracts in object oriented modeling</title>
    <para>
        <indexterm>
            <primary>interface</primary>
        </indexterm> Interfaces alone do not guarantee pluggability. A service provider may realize
        all services specified <indexterm>
            <primary>pluggability</primary>
        </indexterm> in an interface, but may, for example, not provide all deliverables (satisfy
        not all post-conditions) or may not be able to provide the scalability, performance or some
        other quality requirement. <indexterm>
            <primary>quality of service</primary>
        </indexterm>
    </para>
    <para> Contracts are introduced to fully specify the client requirements. This then facilitates
        true pluggability of different service providers, <abbrev>i.e.</abbrev> that service
        providers realizing the contract can be exchanged without affecting any of the business or
        system processes. </para>
    <para> Using a contracts based approach, one can define the system or business process without
        referring to any specific service provider. The service provider selection is typically made
        either when the process is implemented or when it is executed. One may even fully define an
        organizational or business process without knowing whether the process will be realized
        manually or by a system. Such a process would then be mapped onto manual and system
        processes deployed across organizational and systems architecture. </para>
    <para> In order to expand an interface into a services contract, one needs to add the pre- and
        post-conditions, quality requirements, communication channels and, if relevant, the message
        exchange patterns for each use case. </para>
</section>
