<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.algorithms.sorting.exampleProblems.marbles.marbles"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Marbles</title>
   
  <section>
    <title>Problem</title>
    <para>
    I have some (say, n) marbles (small glass balls) and I am going to buy some boxes to store them. 
    The boxes are of two types:
    <itemizedlist>
      <listitem><para>
        Type 1: each box costs c1 Taka and can hold exactly n1 marbles
      </para></listitem>
      <listitem><para>
        Type 2: each box costs c2 Taka and can hold exactly n2 marbles
      </para></listitem>
    </itemizedlist>
      I want each of the used boxes to be filled to its capacity and also to minimize the total cost 
      of buying them. Since I find it difficult for me to figure out how to distribute my marbles among 
      the boxes, I seek your help. I want your program to be efficient also.
    </para>
  </section>
  
  <section>
    
    <title>Input</title>
    <para>
      The input file may contain multiple test cases. Each test case begins with a line containing the integer 
      <literal><![CDATA[n (1 <= n <= 2,000,000,000)]]></literal>. The second line contains c1 and n1, 
      and the third line contains c2 and n2. Here, c1, c2, n1 and n2 are all positive integers having values 
      smaller than 2,000,000,000.
    </para>
    <para>
        A test case containing a zero for n in the first line terminates the input.
    </para>
  </section>
  
  <section>
    <title>Output</title>
    <para>
      For each test case in the input print a line containing the minimum cost solution (two nonnegative 
      integers m1 and m2, where mi = number of Type i boxes required) if one exists, print "failed" otherwise.
    </para>
    <para>
      If a solution exists, you may assume that it is unique.
    </para>
  </section>
  
  <section>
    <title>Sample input</title>
    <para>
      <programlisting><![CDATA[
43
1 3
2 4
40
5 9
5 12
0
        ]]></programlisting>
    </para>
  </section>
  
  <section>
    <title>Sample output</title>
    <para>
      <programlisting><![CDATA[
13 1
failed
        ]]></programlisting>
    </para>
  </section>
</section>
