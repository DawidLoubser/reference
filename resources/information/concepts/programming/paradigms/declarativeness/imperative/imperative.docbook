<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
         xml:id="resources.information.technologies.java.lang.ooMappings.ooMappings"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>Imperative programming languages</title>

    <para>
        Imperative languages are good at:
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>Predictable execution</title>
                    <para>
                        When one wants explicit control over timing or resources, especially
                        in constrained environments. For example: Video game graphics rendering
                        written in <productname>C++</productname>.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Simplicity</title>
                    <para>
                        Most imperative languages are easier for most people to learn, than declarative
                        ones. Fewer abstractions control your problem flow, "what you see is what you get".
                        For example: Java.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Support technologies</title>
                    <para>
                        Because of historic prevalence, the languages with the most support technologies
                        (libraries, toolkits, development tools, mapping to other languages) are typically
                        imperative languages.
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>
    </para>


</section>