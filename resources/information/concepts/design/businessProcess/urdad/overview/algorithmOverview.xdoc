<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.concepts.design.businessProcess.urdad.overview.algorithmOverview"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Overview of the URDAD algorithm</title>
  <para>
    URDAD, Use Case, Responsibility Driven Analysis and Design, is a design methodology which
    provides a step-for-step algorithm for generating, analyzing, and documenting the stake holder
    requirements and designing a business process which realizes these requirements. URDAD
    has been defined in such a way that many requirements for <quote><emphasis>good
      design</emphasis></quote> are directly enforced by the algorithm.
  </para>
  
  
  <figure>
    <title>Overview of URDAD</title>
    <graphic fileref="highLevelUrdad.jpg"/>
  </figure>
  
  
  <figure>
    <title>Steps of the analysis and design phases of URDAD algorithm</title>
    <graphic fileref="urdadOverview.jpg"/>
  </figure>
  
  <section>
    <title>Steps for the analysis phase</title>
    <para>
      During the analysis phase one identifies a service required by a stake holder and specifies
      the requirements from the perspective of all stake holders for that service. The deliverable
      is a contract containing the stake holder requirements which the organization has to fulfill.
    </para>
    <para>
      The analysis phase of URDAD has the following steps:
      <orderedlist>
        <listitem><para>
          Identifying the stake holder who requires a service.  
        </para></listitem>
        <listitem><para>
          Identifying the service (use case) the stake holder requires.
        </para></listitem>
        <listitem><para>
          Identifying the other stake holders which have an interest in this use case.
        </para></listitem>
        <listitem><para>
          Identify the functional requirements for each stake holder. 
        </para></listitem>
        <listitem><para>
          Identify the secondary actors the organization has to make use of, as per requirements.
          These will be external service providers and observers of the business process.  
        </para></listitem>
        <listitem><para>
          Specify the user work flow for the use case.
        </para></listitem>
        <listitem><para>
          Specify the structure of the exchanged value (information) objects.
        </para></listitem>
        <listitem><para>
          Specify the  pre- and post-conditions, required
          capabilities.
        </para></listitem>
      </orderedlist>
    </para>
  </section>
  
  <section>
    <title>Steps for the design phase</title>
    <para>
      The stake holder requirements are fed into the business process design. Design in URDAD is an
      iterative process which zooms recursively into the details of the individual work flow steps. In this way
      the different levels of granularity are generated for the business process.
    </para>
    <para>
      The steps within one iteration are
      <orderedlist>
        <listitem><para>Responsibility identification.</para></listitem>
        <listitem><para>Responsibility allocation.</para></listitem>
        <listitem><para>Work flow specification.</para></listitem>
        <listitem><para>Projecting out the collaboration context.</para></listitem>
        <listitem><para>Specifying a contract for each role player</para></listitem>
      </orderedlist>
      After these steps one verifies whether the business process has been fully specified. If any
      of the work flow steps need further refinement, one zooms into the next level of granularity.
    </para>
    
    <section>
      <title>Responsibility identification</title>
      <para>
        During the first step of the business process design one identifies the core responsibilities
        which need to be addressed when realizing a stakeholder service. This step 
        fixes the level of granularity. During the first iteration it will be the level of granularity
        for the high level view of the business process. During subsequent iterations the process will
        expose lower level views showing finer grained aspects of the business process.
      </para>
    </section>
    
    <section>
      <title>Responsibility allocation</title>
      <para>
        During the responsibility allocation step URDAD requires that each responsibility is assigned
        to a conceptual role player. This step enforces the single responsibility principle by
        requiring that each responsibility must be assigned to a separate role player and that each
        role player may address only one responsibility.
        <note><para>
          Ultimately these conceptual roles will be assigned to physical objects like business units, 
          persons or positions within an organization and system components. The assignment of the
          roles used in the business process design to physical objects will only
          be done during the implementation phase, <abbrev>i.e.</abbrev>when the technology and
          architecture neutral business process design is mapped onto realization technologies and
          deployed across the organizational and systems architecture.
        </para></note>        
      </para>
    </section>
    
    <section>
      <title>Work flow specification</title>
      <para>
        Once the responsibilities have been identified and allocated, one knows which high level role
        players collaborate to realize the stakeholder service. Next the business process designer
        will have to specify the actual business process for the current level of granularity,
        <abbrev>i.e.</abbrev> how these role players collaborate to realize the stake holder service.
      </para>
      <para>
        The work flow will be at a specific level of granularity. The level of granularity was fixed
        during the responsibility identification step. Only the work flow steps for the current level
        of granularity will be exposed. Lower level activities done within one of the core
        role players when executing a particular work flow step will only be specified and shown as we
        zoom into lower levels of granularity.
      </para>
      <para>
        The work flow specification will show the high level activities for the business process,
        as well as decision points and concurrencies within the business process. Furthermore, common
        and alternative work flow paths will be specified for that level of granularity. The work flow
        specification will also show the communication requirements between the role
        players at the current level of granularity.
      </para>
      <para>
        This step will thus generate the complete work flow specification for the business process at
        one level of granularity/refinement.
      </para>
    </section>
    
    <section>
      <title>Projecting out the collaboration context</title>
      <para>
        The business process work flow shows how the role players collaborate to realize a stake
        holder service. The collaboration context shows a static view of the business process
        requirements. In particular, it shows the services required from each role player as well as
        the communication channels required between the role players.
      </para>
      <para>
        In URDAD the collaboration context can be auto-generated from the business process dynamics.
        The process enforces minimal complexity (simplicity) by feeding in only those role players,
        communication channels and services which are required to realize the stake holder service.
      </para>
    </section>
    
    <section>
      <title>Specifying role player contracts</title>
      <para>
        During the design we will abstract from the physical objects fulfilling these roles. The
        abstraction is achieved by specifying for each role player a contract. The contract has two
        aspects
        <orderedlist>
          <listitem><para>
            the functional requirements around the services which must be provided by a service
            provider realizing the contract, and
          </para></listitem>
          <listitem><para>
            the non-functional requirements, <abbrev>i.e.</abbrev> the capabilities or quality
            attributes of the service provider.
          </para></listitem>
        </orderedlist>
        The capabilities include the demand the service provider must be able to handle (scalability),
        the time within which the service must be performed (performance), the reliability with which
        the service must be provided and so on.
      </para>
      <para>
        For the functional requirements around the services we are guided by <emphasis>Design by
          Contract</emphasis> (see <xref linkend="Meyer-1991"/> and <xref linkend="Meyer-1992"/>).
        Design by contract requires us to specify for each service
        <itemizedlist>
          <listitem><para>
            the information required upon service request,
          </para></listitem>
          <listitem><para>
            the conditions under which the service provider may refuse the service without breaking
            the contract (the pre-conditions),
          </para></listitem>
          <listitem><para>
            the conditions which must hold after the service has been successfully realized (the
            post-conditions), and
          </para></listitem>
          <listitem><para>
            any other business rules which must always be satisfied (the invariance constraints).
          </para></listitem>
        </itemizedlist>
      </para>
      <para>
        The service provider realizing the contract may be
        <itemizedlist>
          <listitem><para>
            a business unit of the organization,
          </para></listitem>
          <listitem><para>
            an external organization used by the organization in the context of realizing a service to
            its stake holders,
          </para></listitem>
          <listitem><para>
            a person filling a particular position within the organization,
          </para></listitem>
          <listitem><para>
            a system which realizes aspects of a business process or the business process in its
            entirety, or
          </para></listitem>
          <listitem><para>
            a system component.
          </para></listitem>
        </itemizedlist>
        The business process design does not contain any information about the physical service provider
        realizing the contract. This is determined upon implementing the business process
        implementation, <abbrev>i.e.</abbrev>  when deploying the business process across the
        organizational and systems architecture. Implementing a business process across systems
        requires the technical team to perform a  technology mapping for the business process. 
        Changing service providers (from internal business units to external providers or to a system)
        does not require changing the business process. 
      </para>
    </section>
    
    <section>
      <title>Transition to next lower level of granularity</title>
      <para>
        After one iteration we have
        <itemizedlist>
          <listitem><para>
            the business process at a particular level of granularity, and
          </para></listitem>
          <listitem><para>
            contracts for the service provider roles required by the business process at that level
            of granularity.
          </para></listitem>
        </itemizedlist>
      </para>
      <para>
        In order to go over to the next lower level of granularity we select one of the role players
        from the previous levels of granularity. We know the services which any service provider
        realizing the contract for that role player needs to realize. In this next iteration we define
        the lower level business process which provides the details around the business process for
        the lower level service. 
      </para>
      <para>
        The process is the same as it was for the previous level of granularity. We start by defining
        the lower level responsibilities which need to be addressed for this lower level service,
        assign them to lower level role players and define the business process across these lower
        level role players. Ultimately we define for each lower level role player a contract.
      </para>
    </section>
  </section>
  
  <section>
    <title>How far do you go?</title>
    <para>
      URDAD provides a framework to define a business process across the various levels of
      granularity. Yet, who should design the business process in all its detail,
      <abbrev>i.e.</abbrev> the recursively lower levels of granularity? Each level of granularity
      is typically designed by the service provider realizing the contractual obligations for that
      level of granularity.
    </para>
    <para>
      Recall that URDAD inserts, at all levels of granularity, a service provider contract for each role player.
      When deploying a business process, the organization will allocate these roles to either
      internal business units or external service providers. In either case, the service provider 
      contract provides a complete requirements specification for the service provider fulfilling
      that role. The lower level business process design and its implementation can be left to the
      service provider itself. 
    </para>
    <para>
      These service providers would thus typically design the business process for the level of
      granularity they are responsible for. In that context they would identify lower level
      responsibilities which would be assigned to lower level role players. The business process
      design for this level of granularity would churn out the contracts these lower level role
      players need to fulfill. The lower level business process design an implementation is, once
      again, then delegated to the service providers fulfilling these roles.
    </para>
    <para>
      At any level of granularity, service providers may, use a system to realize the
      service(s) they are responsible for. The service provider contract will directly represent the
      business requirements specification for the system.
    </para>
  </section>
  
</section>  