<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.design.businessProcess.urdad.overview.requirementsForGoodBusinessProcessDesign"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Requirements for good design</title>
  <para>
    Often design is seen as more of an art than a science. Yet, there are a number of widely
    accepted criteria for good design. One of the aims of URDAD is to enforce these criteria for
    <quote><emphasis>good design</emphasis></quote> directly through the design methodology
    itself.
  </para>
  <para>
    We have put some effort into separating requirements for good design from its consequences.
    For example, re-usability is often seen as a requirement for good design. Yet designing
    something for re-usability is a difficult task, as it requires one to envisage potential reuse
    scenarios which may currently not be required. The approach taken here is to rather design a
    clean solution which addresses the current requirements. If this design solution satisfies the
    criteria for good design (in particular those of being contract based and adhering to the single
    responsibility principle), then it is quite likely that one will be able to achieve a high
    level of reuse. 
  </para>

  <figure>
    <title>Best practices for design</title>
    <graphic fileref="requirementsForGoodDesign.jpg"/>
  </figure>
  
  <section>
    <title>Single responsibility principle</title>
    <para>
      A widely accepted best practice for design is known as the single responsibility principle. 
      It states that, at any level of granularity, any role player in the business process should address
      only a single responsibility. All the services offered by the service provider should fall
      within the single responsibility addressed by the service provider.
    </para>
    <para>
      For example, if the finance department provided, in addition to the financial services, some
      services which are effectively legal services, then this would be a violation of the single
      responsibility principle. 
    </para>
  </section>
  
  <section>
    <title>Clean layers of granularity</title>
    <para>
      A <quote><emphasis>good design</emphasis></quote> projects out the different layers of
      granularity, <abbrev>i.e.</abbrev> enables one to expose views of the business process and its
      role players at different levels of refinement. This enables one to provide different role
      players the view which is appropriate to them.  
    </para>
    <para>
       For example, the CEO is unlikely to want to see a business process in all its gory details.
      Instead, he/she is likely to request a high level view which exposes the high responsibilities
      and work flow steps. In addition the CEO may want to see a coarse grained view of how the
      business process is realized across the core organizational components.
    </para>
    <para>
      The head of a department may require a lower level view of the business process, exposing the
      work flow steps which need to be realized within that department. Finally, a worker responsible
      for a particular part of the work flow would require a very detailed view of the section of the
      work flow he/she is responsible for.
    </para>
    <para>
      Similarly, should the business process be mapped onto a systems realization, then the
      architect, lead developer for a particular system, and the developer of a low level class
      within a system would all require different views to be able to realize their responsibilities
      effectively.
    </para>
    <para>
      A design methodology which effectively manages layers of granularity and which is thus able to
      project out different views of the design for the different levels of granularity enables thus the
      various role players to do their job effectively.
      <note><para>
        Lets look at a real life example of how the ability to project out views for the different
        levels of granularity enables different role players to do their job effectively. For this,
        let us consider a car. A non-technical person can learn to effectively drive a car. This is
        only possible because they do not have to understand the details of the lower level
        functioning of the car. A mechanic at a local service station will have to understand the
        car at a lower level of granularity, sufficiently so to be able to perform a general service
        on the car.  The mechanic does not, however, need to understand how the individual
        components work in detail. Should the mechanic find a problem with one of these components,
        say  the gearbox, then he/she will take it out and send it to a gearbox specialist.
        Finally a gearbox specialist will understand the components of the gearbox and their
        functioning. If the driver had to understand the process of driving the car across all
        levels of granularity, he/she would be unlikely to drive the car. Similarly, it would be
        difficult (and expensive) to source a mechanic who would be able to understand  
        the functioning of the car at all levels of granularity. Being able to provide each of the different
        role players an appropriate granularity view of the car and the processes within the car,
        enables them all to do their job effectively.
      </para></note>
    </para>
  </section>
  
  <section>
    <title>Simplicity</title>
    <para>
      If one has two business processes which both fulfill the stake holder requirements, then the
      simpler of these two solutions is the preferable one. Complexity adds realization cost, risk
      and maintenance cost.
    </para>
    <para>
      Furthermore, a business process design which is understandable and conceptually aids
      flexibility as it will be easier for future business analysts and business process designers
      to work on that business process. Ultimately,  an organization with complex business processes
      is usually less flexible than one with simple business processes.
    </para>
  </section>
  
  <section>
    <title>Contracts based</title>
    <para>
      A business process design should define the requirements for each role player very precisely.
      To this end one would aim towards a contracts based approach which defines very precisely the
      services required from the various role players, the conditions under which these services
      must be provided and the deliverables of these services.
    </para>
    <para>
      Focusing on the contracts instead the service providers themselves decouples one from the
      actual service providers ultimately used in a business process implementation. This enables
      one to replace an internal department with an external service provider or vice versa or even
      a manual implementation with an automated business process realization. 
      <note><para>
        The entire business process design represents a requirements view. These requirements will
        be fulfilled when we map the technology neutral business process design on a realization
        within the organizational and system architectures.
      </para></note>
    </para>
  </section>
  
  <section>
    <title>Traceability</title>
    <para>
      In a <quote>good design</quote>one should be able to trace any design element back to a stake holder
      requirement. Having a design which is traceable result in improved
      <emphasis>maintainability</emphasis> as it will be easier to assess the impact of changes to the
      requirements on a design and to ascertain  that the design is a minimalist design where
      every element does contribute to addressing a stake holder requirement. Furthermore, reverse
      traceability enables one to assess the impact of broken functionality across the business
      processes which require it.
    </para>
    <para>
      Traceability also assists <emphasis>testability</emphasis>. If a User Acceptance Test (UAT)
      fails, one can trace through the layers of granularity following the test failures until one has
      identified the component/service provider which is the root cause for the failure.
    </para>
  </section>
  
  <section>
    <title>Architecture and technology neutral</title>
    <para>
      A good design should be long-lived. To this end the design should be able to survive changes
      in its implementation including
      <itemizedlist>
        <listitem><para>
          changes in the architecture within which the business process is to be deployed, and
        </para></listitem>
        <listitem><para>
          changes in the technologies used to realize the business process (including a change from
          a manual process to an automated process).
        </para></listitem>
      </itemizedlist>
      <note><para>
        This is in the spirit of OMG's <emphasis>Model Driven Architecture</emphasis> (MDA) which
        includes a step where the platform independent model (PIM) is mapped onto realization
        technologies (the platform specific model or PSM).
      </para></note>
    </para>
  </section>
  
  
  
</section>  
