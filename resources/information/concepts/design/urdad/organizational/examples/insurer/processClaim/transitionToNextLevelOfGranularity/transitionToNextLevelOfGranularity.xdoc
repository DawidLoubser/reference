<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.concepts.design.urdad.organizational.examples.insurer.processClaim.transitionToNextLevelOfGranularity.transitionToNextLevelOfGranularity"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Transition to next lower level of granularity</title>
  <para>
    Within an iteration URDAD looks at the workflow only at one level of granularity, <abbrev>i.e.</abbrev> 
    the only objects participating in the workflow are those to which the core responsibilities were assigned 
    during the responsibility allocation step.
  </para>
  <para>
    In URDAD one goes over to the next lower level by selecting one of the components from the current level 
    of granularity as the new context for the next lower level of granularity. Those objects from the current 
    level of granularity which interface with the new context will become actors of the context. The services 
    from the previous level of granularity will become the use cases of the new context.
  </para>
  <para>
    One then starts the next lower level iteration by identifying the the responsibilities which need to be 
    addressed when realizing the lower level use case. Each responsibility would in turn be assigned to
    either, a component of the new context or to a service provider for the new context. The workflow 
    specification would then lead to its context which resembles the static structure required to realize 
    this lower level use case.
  </para>
  <para>
    In the case of the insurer example, one could select the Policies department as the new context. 
    In order to support the higher level process claim use case it would have to provide one use case 
    for verifying the status of a policy and another to assess to what extend the policy covers the claim.
  </para>
  <para>
    The use case realizations will be designed iteratively. Selecting first the 
    <literal>assessPolicyCoverage</literal> 
    use case one would identify the core responsibilities which need to be addressed when realizing the 
    lower level use case. This may include checking against exclusions, checking whether policy requirements 
    have been adhered to (for example the policy may state that it will cover damage on a car only if the 
    driver has a drivers license) and many other aspects. The policies department may choose to outsource 
    some of these responsibilities to external service providers. In this case external means external to 
    the new context which is the policy department. Thus, if some responsibilities are assigned to the 
    legal department, the latter would become an external service provider (actor) to the policies department.
  </para>
</section>  