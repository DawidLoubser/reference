<?xml version="1.0" encoding="UTF-8"?>
<section id="projects.solms.research.design.integratedBusinessProcessAndSystemDesignViaUrdad.urdad.serviceProviderContracts.serviceProviderContracts"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
   
  <title>Service provider contracts</title>
  <para>
    At any level of granularity, the context at that level of granularity the context at that level of granularity may 
    outsource responsibilities to external service providers per requirements, or, at a later stage, as a design
    decision. In either case one should put a service-provider contract in place which 
    <itemizedlist>
      <listitem><para>
        clearly specifies the functional and non-functional requirements of a service provider from the perspective
        of the business or system process requiring the service provider,
      </para></listitem>
      <listitem><para>
        enables substitutability of service providers (and hence avoids service provider locking),
      </para></listitem>
      <listitem><para>
        facilitates the definition of test cases for service providers,
      </para></listitem>
    </itemizedlist>
  </para>
  <section>
    <title>Contract components</title>
    <para>
     The contract components are based on the design-by-contract requirements and add the non-functional
      requirements. The include
      <itemizedlist>
        <listitem><formalpara>
          <title>The interface</title>
          <para>
            The interface lists the services which must be offered by any service provider realizing the contract,
            the client deliverables (if any)  -- these are the deliverables the client has to provide upon service request --
            and the service provider return (if any) which may, for example, simply be an acknowledgement 
            of having received the service request.
            <note><para>
              Optional services for different levels of service providers will be catered for by interface specialization.
            </para></note>
          </para>
        </formalpara>
        </listitem>
        <listitem><formalpara>
          <title>Pre-conditions</title>
          <para>
            If the pre-conditions are not met a service provider may refuse the service without breaking the contract.
            If all pre-conditions are met the service provider must realize the service as per contract, realizing all
            post-conditions.
          </para>
        </formalpara>
        </listitem>
        <listitem><formalpara>
          <title>Post-Conditions</title>
          <para>
            These are the deliverables the service provider must provide to the client upon successful completion of
            a service.
          </para>
        </formalpara>
        </listitem>
        <listitem><formalpara>
          <title>Invarianc contraints</title>
          <para>
            These specify rules on the service provider state as seen from the client. These rules must always hold,
            at least on transaction boundaries, otherwise the service provider state is in failure.
          </para>
        </formalpara>
        </listitem>
        <listitem><formalpara>
          <title>Quality attributes</title>
          <para>
            The quality attributes specify quality/non-functional requirements on how the service needs to be provided. It
            may include performance, scaleability, reliability and many other requirements.
          </para>
        </formalpara>
        </listitem>
      </itemizedlist>
      
    </para>
  </section>
  
  <section>
    <title>SLA for a Caterer</title>
    <para>
    </para>
    <figure>
      <title>SLA contract for a Caterer</title>
      <graphic fileref="catererContract.jpg"/>
    </figure>
    
  </section>
  
  
</section>
