<?xml version="1.0" encoding="UTF-8"?>
 
<section id="resources.information.concepts.design.urdad.system.methodology.overview.overview"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
   xmlns:xi="http://www.w3.org/2001/XInclude">
   <title>Overview of URDAD</title>
  <para>
    URDAD generates MDA's <emphasis>Platform Independent Model</emphasis>
    (PIM) which is then mapped onto the chosen architecture and technologies to yield the
    <emphasis>Platform Specific Model</emphasis> (PSM). It takes use-case based functional 
    requirements through an iterative design process generating the various levels of granularity
    of the system iteratively.
  </para>
  
  <figure id="resources.information.concepts.design.urdad.system.methodology.overview.urdadOverview_fig">
    <title>Use-Case/Responsibility Driven Design</title>
    <graphic fileref="urdadOverview.jpg"/>
  </figure>
  
  <para>
    <xref linkend="resources.information.concepts.design.urdad.system.methodology.overview.urdadOverview_fig"/>
    provides an overview of URDAD. The core steps of an iteration in URDAD are
    <orderedlist>
      <listitem><para>Identify the core responsibilities which need to be addressed when realizing the use case.</para></listitem>
      <listitem><para>Allocate each responsibility to either a component of the current context or an actor.</para></listitem>
      <listitem><para>Specify how these components and actors collaborate to realize the use case.</para></listitem>
      <listitem><para>
        Project out the context of the collaboration. This is that subset of the static model
        which at the current level of granularity is required to realize the use case.
      </para></listitem>
      <listitem><para>
        Specify for each responsibility the contract they have to realize in the context of the current use case.
      </para></listitem>
      <listitem><para>
        Specify the structure of exchanged value objects using class diagrams.
      </para></listitem>
      <listitem><para>
        Traverse to the next lower level of granularity by selecting one of the components from the previous iteration as the new context
        with the services at the previous level of granularity becoming the use cases of this new, lower level of granularity.
      </para></listitem>
      <listitem><para>
        Repeat the above steps for the use cases at the next lower level of granularity.
      </para></listitem>
    </orderedlist>
    <note><para>
      URDAD is a double-iterative process with
      <orderedlist>
        <listitem><para>
          <emphasis>use case iterations</emphasis> ensuring the system is designed iteratively, realizing use case after use case, and
        </para></listitem>
        <listitem><para>
          <emphasis>design iterations</emphasis> taking the design iteratively through lower and lower levels of granularity.
        </para></listitem>
      </orderedlist>
    </para></note>
  </para>  
  <para>
    In the following sections these steps will be explained in detail, using the design of a simple mail client as an example.
  </para>
</section> 
 