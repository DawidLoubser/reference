<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0b5/rng/docbookxi.rng" type="xml"?>
<section
  xmlns="http://docbook.org/ns/docbook"  
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Contracts</title>
  <para>
    An interface together with the pre- and post-conditions on the services and potentially some
    invariance constraints around the published state
    goes a long way towards defining a complete contract facilitating full pluggability of service providers.
    To complete the contract and allow for full pluggability of any service provider realizing the contract
    we still need to add
    <itemizedlist>
      <listitem><para>
        the class diagrams for the value objects exchanged, and
      </para></listitem>
      <listitem><para>
        the quality requirements for the service provider.
      </para></listitem>
    </itemizedlist>
  </para>
  
  <section>
    <title>Quality requirements</title>
    <para>
      Having specified that a venue agent needs to be able to process booking requests and having associated the pre- and 
      post-conditions for the required <emphasis>bookVenue</emphasis> service will not yet guarantee us that any service 
      provider realizing the interface subject to these design-by-contract constraints will indeed be pluggable. We may still have
      certain quality requirements for the services. For example, our business processes may require that we receive the booking
      information within an hour of placing the booking request. Some venue agents which implement the above interface may not 
      be able to adhere to this <emphasis>performance</emphasis> requirement and may thus not be pluggable.
    </para>
    <para>
      Another quality requirements may specify a certain <emphasis>scalability</emphasis>, the ability to process a certain number of booking 
      requests per unit time (<abbrev>e.g.</abbrev> per day).
    </para>
  </section>
  
  <section>
    <title>Services without pre- and/or post conditions</title>
    <para>
      Some services may need to be provided unconditionally. For such services one would not specify any preconditions.
      Similarly, some services would return some result, but would have no further remnants after the service has been
      provided. Such services would have no post-conditions.
    </para>
    <para>
      Consider the <emphasis>getTime</emphasis> of a <emphasis>Clock</emphasis>. This service should always
      be provided, <abbrev>i.e.</abbrev> if, under any conditions, the clock does not provide the service, then there
      would be an error with the clock. Furthermore, the clock will return the current time, but there would be no further
      persistent remnants of the service request. There would thus be no pre- and no post-conditions for the 
      <emphasis>getTime</emphasis> service of a clock.
    </para>
  </section>
  
  
  <section>
    <title>An SLA for a caterer</title>
    <para>
      We can package together the contract elements into a contract package. The package may be seen as a UML representation
      of a Services Level Agreement (SLA). It will contain the following elements:
      <itemizedlist>
        <listitem><para>
          an interface specifying the services required from the service provider,    
        </para></listitem>
        <listitem><para>
          potentially pre- and/or post-conditions on services,
        </para></listitem>
        <listitem><para>
          potentially quality requirements for the individual services or for the service provider as a whole (such
          quality requirements would apply across all services specified in the interface), and
        </para></listitem>
        <listitem><para>
          class diagrams for each of the objects exchanged between the client and the service provider.
        </para></listitem>
      </itemizedlist>
      
    </para>
    
    <figure>
      <title>The Service Level Agreement (SLA) for a caterer</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="catererSLA.jpg"/>
        </imageobject>
        <caption>
          <para>
            A UML representation for a Service Level Agreement (SLA) for a caterer.
          </para>
        </caption>
      </mediaobject>
    </figure>
    
  </section>
  
  <section>
    <title>Always specify the contract from the perspective of the client</title>
    <para>
      The purpose of the SLA is to encapsulate the client's requirements for a service provider, decoupling the client's business 
      process from any particular service provider. The pre- and post-conditions and quality requirements should thus be specified 
      from the perspective of the client's needs and not from the perspective of how a particular service provider is able to render
      a service.
    </para>
  </section>
  
</section>