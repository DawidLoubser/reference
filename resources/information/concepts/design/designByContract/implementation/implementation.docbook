<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Design by contract and implementing interfaces</title>
  <para>
    We can assign pre- and post-conditions to a service specified in an interface, and invariance constraints to the
    interface as a whole. This would require that any implementation of that interface would have to
    <itemizedlist>
      <listitem><para>
        provide each service, subject to no more pre-conditions than what is specified in the interface,
      </para></listitem>
      <listitem><para>
        realise each service such that all the post-conditions are met once the service has been provided, and
      </para></listitem>
      <listitem><para>
        ensure that the published state of the implementing object never violates the invariance constraints.
      </para></listitem>
    </itemizedlist>
  </para>
  <figure>
    <title/>
    <mediaobject>
      <imageobject>
        <imagedata fileref="venueAgent.jpg"/>
      </imageobject>
    </mediaobject>
  </figure>
  <para>
    Very often one uses an interface with pre- and post-conditions on the services to specify the service requirements for service providers
    without constraining the state of the service provider. In such cases there would be no invariance constraints. 
    The previous figure shows an interface with pre-
    and post-conditions specified for the required service. Any particular implementation of a venue agent must be assigned a business
    process which refuses the service under no more conditions than what is allowed via the pre-conditions and which realizes the
    service in such a way that the post conditions are met for any success scenario (i.e. any scenario 
    where the service was not refused due to some pre-condition not having been met).
  </para>
  
</section>