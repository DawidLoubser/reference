<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.design.patterns.classical.behavioral.visitor.dynamics"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Dynamics</title>
  <para>
    The dynamics of the visitor pattern may look a little convoluted at first:
    <orderedlist>
      <listitem><para>
       Clients request a service added to a class hierarchy via a visitor from an element added
       to that class hierarchy by asking the element to accept the vistor.
      </para></listitem>
      <listitem><para>
        The element then invites the visitor to visit it, providing the visitor with its address --
        how else could the visitor come and visit?
      </para></listitem>
      <listitem><para>
        The visitor then makes one or more call-backs to that element, requesting any information
        it may need from the element to realize its service. 
      </para></listitem>
      <listitem><para>
        Upon completion of the service, the visitor returns control to the element which, in turn,
        returns control back to the client.
      </para></listitem>
      <listitem><para>
        At this stage the client may request the deliverables of the service request directly from
        the visitor.
        <note>
          <para>
            Alternatively the visitor may accumulate a result across multiple service requests and the
            result may be queried at the end.
          </para>  
        </note>
      </para></listitem>
    </orderedlist>
  </para>
  
  <figure id="resources.information.concepts.design.patterns.classical.behavioral.visitor.dynamics_fig">
    <title>Dynamics of the visitor pattern</title>
    <graphic fileref="dynamics.jpg"/>
  </figure>
</section>
