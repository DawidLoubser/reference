<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE para SYSTEM "/usr/share/sgml/docbook/xml-dtd-4.1.2/docbookx.dtd"-->
<para id="resources.information.concepts.design.patterns.classical.behavioral.mediator.introParagraph"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude">

  In the early days of software development one often had the problem of
  lots of direct linkage between statements and functions resulting in what
  is known as <emphasis>spaghetti code</emphasis>. Of course we do not
  have this problem anymore in modern software development (??), but now 
  we often face the problem of an excessively complex communication network
  between objects. It is this problem which the mediator pattern aims to address.
  <note><para>
    Every association, aggregation, composition and even specialization relationship
    resembles a message path contributing to the communication network between
    objects. Even dependency relationships resemble temporary message paths.
    Object-oriented systems can degenerate into a situation where there are
    very many dependencies between classes. The resultant system is often
    very complex and difficult to understand and modifying one class can result
    in an avalanche of maintenance sweeping across large parts of the system.
  </para></note>
</para>


