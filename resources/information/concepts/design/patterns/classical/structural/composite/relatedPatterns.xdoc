<?xml version="1.0" encoding="UTF-8"?>
 
<section id="resources.information.concepts.design.patterns.classical.structural.composite.relatedPatterns"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Related patterns</title>
  <para>
  <itemizedlist>
    <listitem><formalpara>
      <title>The decorator pattern</title>
      <para>
        The decorator pattern is often used instead of the associative composite pattern.  It
        facilitates the step-for-step decoration of a service with further responsibilities.
      </para>
    </formalpara></listitem>
    <listitem><formalpara>
      <title>Chain of responsibilities</title>
      <para>
        This is another pattern often used when further responsibilities need to be added
        on the fly.
      </para>   
    </formalpara></listitem>
    <listitem><formalpara>
      <title>The Visitor pattern</title>
      <para>
        The visitor pattern is used if further polymorphic services are to be added externally 
        to a class hierarchy.
      </para>
    </formalpara></listitem>
    <listitem><formalpara>
      <title>Iterator</title>
      <para>
        Iterators are commonly used by containers to taverse the component collection.
      </para>
    </formalpara></listitem>
  </itemizedlist>
  </para>
</section>
