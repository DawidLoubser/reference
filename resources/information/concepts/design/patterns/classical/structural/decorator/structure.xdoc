<?xml version="1.0" encoding="UTF-8"?>
 
<section id="resources.information.concepts.design.patterns.classical.structural.decorator.structure"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Structure</title>
  <para>
    The decorator
    <itemizedlist>
        <listitem><para>
          <emphasis>is a</emphasis>  specialization of the decorated component facilitating
          substitutability.
        </para></listitem>
        <listitem><para>
          <emphasis>has the decorated component</emphasis>, <abbrev>i.e.</abbrev> the
          decorated component is contained facilitating run-time plug-ins.
        </para></listitem>
    </itemizedlist>
    The structure is shown
    in <xref linkend="resources.information.concepts.design.patterns.classical.structural.decorator.decoratorStructure_fig"/>.

    <note>
      <para>
        The <quote>is a</quote> (specialization) relationship is used solely for facilitating
        <emphasis>substitutability</emphasis> and not for either
        <itemizedlist>
          <listitem><para>inheritance or to</para></listitem>
          <listitem><para>
            delegate the service request up the specialization hierarchy as is commonly done.
          </para></listitem>
        </itemizedlist>
        Instead, the service request is passed up the containment hierarchy.
      </para>
    </note>
  </para>
  
  <figure id="resources.information.concepts.design.patterns.classical.structural.decorator.decoratorStructure_fig">
    <title>
      Structure of the decorator pattern. 
    </title>
    <graphic align="center" scalefit="0" fileref="decoratorStructure.jpg"/>
  </figure>
  
  <para>
    The abstract collaboration shown in
    <xref linkend="resources.information.concepts.design.patterns.classical.structural.decorator.abstractCollaboration_fig"/>
    shows the responsibilities of the role players of the decorator pattern.
  </para>  

  <figure id="resources.information.concepts.design.patterns.classical.structural.decorator.abstractCollaboration_fig">
    <title>The responsibilities of the role players of the decorator pattern</title>
    <graphic fileref="abstractCollaboration.jpg"/>
  </figure>
  
  <para>
    The structure of the decorator pattern is very similar to that of the composite pattern except
    that
    <itemizedlist>
      <listitem><para>
        the decorator has only one component it decorates and  
      </para></listitem>
      <listitem><para>
        the decorator provides the same service as the component it decorates and
        in its implementation it
        <orderedlist>
          <listitem><para>
            Calls the corresponding service of the object it decorates using the aggregation
            relationship as service request path.
          </para></listitem>
          <listitem><para>
            After the decorated component has realized the service up to its level of 
            responsibility the decorator adds further responsibilities.
          </para></listitem>
        </orderedlist>
      </para></listitem>
    </itemizedlist>
  </para>
</section>
