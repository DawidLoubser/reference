<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.design.patterns.classical.structural.adapter.consequences"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Consequences</title>
  <para>
  <itemizedlist>
    <listitem><formalpara>
        <title>Bridging between otherwise incompatible classes</title>
        <para>
          The adapter pattern facilitates bridging to classes which provide the required
          functionality but whose interface is incompatible.
      </para>
    </formalpara></listitem>
    
    <listitem><formalpara>
      <title>Decoupling of clients from concrete service providers</title>
      <para>
        Clients are decoupled from concrete service providers. Either class can be modified without
        requiring modifications in the other. Only the adapter needs to be modified if either
        the client's interface requirements or the service provider interface changes.
      </para>
    </formalpara></listitem>
    <listitem><formalpara>
      <title>Pluggable service providers</title>
      <para>
        Even if service providers do not implement a common interface, they may be, together
        with suitable adapters, be used in a pluggable service provider environment.
      </para>
    </formalpara></listitem>
  </itemizedlist>
    </para>
</section>
