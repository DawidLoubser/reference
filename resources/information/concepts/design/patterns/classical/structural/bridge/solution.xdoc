<?xml version="1.0" encoding="UTF-8"?>
 
<section id="resources.information.concepts.design.patterns.classical.structural.bridge.solution"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Solution</title>
  <para>
    Encapsulate the abstraction layer in a class which provides the generic client-oriented
    services and maps these onto an implementation domain whose services is defined in
    an interface realized by concrete classes from the implementation domain.
  </para>

  <section>
    <title>Responsibility allocation</title>
    <para>
      The abstract collaboration shown in
      <xref linkend="resources.information.concepts.design.patterns.classical.structural.bridge.responsibilityAllocation_fig"/>
      shows the responsibilities of the role players of the bridge pattern.
    </para>  
    
    <figure id="resources.information.concepts.design.patterns.classical.structural.bridge.responsibilityAllocation_fig">
      <title>The responsibilities of the role players of the bridge pattern</title>
      <graphic fileref="responsibilityAllocation.jpg"/>
    </figure>
    
  </section>
  
  <section>
    <title>Structure</title>
    <para>
      The bridge pattern decouples clients from an implementation domain via an abstraction
      layer. The abstraction and implementation layers may be refined independently through 
      specialization (<abbrev>e.g.</abbrev> sub classing).
    </para>
  
    <figure id="resources.information.concepts.design.patterns.classical.structural.bridge.structure_fig">
      <title>
         Structure of the bridge pattern. 
      </title>
      <graphic align="center" scalefit="0" fileref="structure.jpg"/>
    </figure>
  </section>
  
</section>
