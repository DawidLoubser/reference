<?xml version="1.0" encoding="UTF-8"?>
 
<para id="resources.information.concepts.architecture.referenceArchitectures.j2ee.enterpriseBeans.beanSpecies.introParagraph"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude">

  The EJB standard defines 3 types of beans:
  <itemizedlist>
    <listitem><formalpara>
      <title>Entity Beans</title>
      <para>
        Entity beans represent entity objects which have persistent state stored in some
        persistent storage (typically a database).
      </para>
    </formalpara></listitem>
    <listitem><formalpara>
      <title>Session Beans</title>
      <para>
        Session beans provide expose services (tasks, business work flows) for clients. They may be 
        <itemizedlist>
          <listitem><formalpara>
            <title>Stateless</title>
            <para>
              Stateless session beans do not maintain state across service requests. They are usually
              usually used as facades to provide a consistent, client-centric services interface on top of
              a potentially complex application.
            </para>
          </formalpara></listitem>
          <listitem><formalpara>
            <title>Stateful</title>
            <para>
              Stateful session beans maintain state across service requests, <abbrev>i.e.</abbrev> 
              they maintain the state of the interaction or conversation throughout the client session.
              (for example, a shopping cart)
            </para>
          </formalpara></listitem>
        </itemizedlist>
      </para>
    </formalpara></listitem>
    <listitem><formalpara>
      <title>Message Driven Beans</title>
      <para>
        Message driven beans provide asynchronous service offerings to clients. They process 
        service requests off a message queue or topic.
      </para>
    </formalpara></listitem>
  </itemizedlist>
</para>
