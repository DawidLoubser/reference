<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.concepts.architecture.referenceArchitectures.j2ee.flyweight.flyweight">

  <title>Enterprise bean as flyweights</title>
  <para>
    The EJB model uses the flyweight pattern where a few physical objects (from
  	the bean pool) represent many conceptual objects. For example, a bank system may
  	manage many accounts, all of which are conceptually available at any stage.
  	At any moment in time there may actually be more accounts being manipulated
  	than there are entity objects for accounts. If a client requests a service
  	from her account, the application server will grab any available account
  	object from the bean pool, populate it with the object identity and state
  	from the database and the user uses it. 
  </para>  
	  <para>
		Note that across invocations from the same user reference the physical object
		providing the service may change, but it represents the same user (conceptual)
		object. To facilitate this the instance specific state as well as the object 
		identity need to be externalised (for example residing in the data base).
	</para>
	  <note>
      <para>
		The separation of the conceptual or user object from the physical object is
		also core in the non-proprietary object-oriented integration technology,
		CORBA. In CORBA, which in many ways forms the basis for EJB, the physical
		realization of a user object may even be non-object oriented (<abbrev>e.g.</abbrev>
		a ANSI-C or Cobol realization) and may change location and realization
		technologies, while representing the same user object.
	</para>
   </note>
</section>