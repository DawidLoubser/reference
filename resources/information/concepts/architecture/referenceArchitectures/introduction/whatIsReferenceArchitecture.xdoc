<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.architecture.referenceArchitectures.introduction.whatIsReferenceArchitecture"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>What is a reference architecture?</title>
  <para>
    A reference architecture is <emphasis>an architectural template which provides a complete solution 
    for a particular domain or group of domains</emphasis>.
  </para>
  <para>
    Reference architectures are often formulated as a <emphasis>specific combination of architectural 
    patterns</emphasis> which collaborate to provide the solution for the target domain.
  </para>
  <para>
    There are a wide range of definitions for reference architectures and many vendors propose
    reference architectures based on their products. Here we aim to gain more insight by looking
    generic definitions of reference architectures followed by a few examples of reference architectures
    which are not locked into specific vendor products.
  </para>
  
  <section>
    <title>Definition as provided by Word-Wide-Web Consortium (W3C)</title>
    <para>
        A reference architecture is the <emphasis>generalized architecture of several end systems 
        that share one or more common domains</emphasis>. The reference architecture defines the 
        infrastructure common to the end systems and the interfaces of components that 
        will be included in the end systems.   
    </para>
    <para>
       The <emphasis>reference architecture is then instantiated</emphasis>
       to create a software architecture of a specific system. The definition of the reference 
       architecture facilitates deriving and extending new software architectures for classes 
       of systems.    
    </para>
    <para>
       A reference architecture, therefore, plays a dual role with regard to 
       specific target software architectures:
       <orderedlist>
         <listitem><para>
           It generalizes and extracts common functions and configurations.
         </para></listitem>
         <listitem><para>
           It provides a base for instantiating target systems that use that common base 
           more reliably and cost effectively.  
         </para></listitem>
       </orderedlist>
    </para>
  </section>

  <section>
    <title>Definition from the Rational Unified Process (RUP)</title>
    <para>
      The <emphasis>Rational Unified Process</emphasis> defines a reference architecture as
      <blockquote><para><emphasis>
        a predefined architectural pattern, or set of patterns,  possibly partially or completely 
        instantiated, designed, and proven for use in particular business or technical contexts,
        together with supporting artifacts to enable their use. Often these artifacts are 
        harvested from previous projects.
      </emphasis></para></blockquote>
      <note><para>
        RUP suggests that reference architectures are documented using the 4+1 View
        on a software architecture.
        <!--(see 
        <xref linkend="resources.information.concepts.architecture.documenting.rup.4Plus1View.4Plus1View"/>).-->
      </para></note>
    </para>
    
  </section>
  
  <section>
    <title>Definition as stated by James Kao</title>
    <para>
      Kao published an article on reference architectures at <emphasis>The Middleware Company</emphasis>
      in which a reference architecture is defined as follows:
      <blockquote><para><emphasis>
        Reference architectures are best-practice  system architectures. They represent architectural
        templates which solidify how individual (architectural) design patterns interact within an
        architectural structure.
      </emphasis></para></blockquote>
    </para>
  </section>
  

  <section>
    <title>Reference architectures versus architectural patterns</title>
    <para>
      While an architectural pattern provides a particular high-level design solution which is
      often applied across an entire system architecture and hence influences the entire design 
      and ultimately the entire code base, they do not typically provide a complete architectural
      solution template for a particular domain.
    </para>
    <para>
      A reference architecture, on the other hand, combines architectural patterns to generate a
      architectural template which can typically be instantiated to provide a complete architectural
      solution which only needs to be refined in some minor ways for concrete solution instances
      (concrete architectures).
    </para>
  </section>
  
  <section>
    <title>Reference architectures versus frameworks</title>
    <para>
      Reference architectures are often related to software frameworks. Examples of software
      frameworks include <emphasis>Struts</emphasis> and <emphasis>IBM Websphere</emphasis>,
      <emphasis>JBoss</emphasis>, <emphasis>Microsoft .Net</emphasis>
      or <emphasis>SeeBeyond</emphasis>.
    </para>
    <para>
      A framework can thus be defined as 
      <blockquote><para><emphasis>
        a pre-packaged   implementation of a reference architecture.
      </emphasis></para></blockquote>
      It contains actual code and they aim to <emphasis>jump-start application development with a
      foundation code-base that shapes your architecture and provides utility functions.</emphasis>
    </para>
  </section>
  
</section>

