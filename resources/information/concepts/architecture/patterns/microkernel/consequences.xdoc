<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.concepts.architecture.patterns.microkernel.consequences"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Consequences with reference to quality attributes</title>
  <para>
    Using a microkernel based architecture has a range of consequences, mainly
    focusing around portability and flexibility.  
  </para>
  
  <section>
    <title>Portability</title>
    <para>
      <itemizedlist>
        <listitem><para>
          Applications running on the microkernel are themselves portable across
          different realizations of the microkernel, <abbrev>i.e.</abbrev> when
          the microkernel is ported to other hardware or software platforms.
        </para></listitem>
        <listitem><para>
          Migrating a kernel to different platforms requires only that the hardware
          dependent parts of the kernel are modified. These are typically localized in
          the external ind internal servants.
        </para></listitem>
      </itemizedlist>
    </para>
  </section>
  
  <section>
    <title>Modifiability and extensibility</title>
    <para>
      <itemizedlist>
        <listitem><para>
          To implement a different binding to underlying software or hardware
          services, one only needs to modify the external servant.
        </para></listitem>
        <listitem><para>
          To add further services to the microkernel, one only needs to add or extend
          an internal server.
        </para></listitem>
      </itemizedlist>
    </para>
  </section>
  
  <section>
    <title>Decoupling from concrete implementations</title>
    <para>
      Client applications do not have any direct dependency on any implementation
      classes. Instead they only depend on the adapter which is itself decoupled from
      actual server implementations.
    </para>
  </section>
  
  <section>
    <title>Performance and Scaleability</title>
    <para>
      Because of the extra layers, the microkernel architecture has, in comparison with
      more monolithic architectures, some performance overheads. For a well designed
      system, this overhead is, however, usually negligible.
    </para>
    <para>
      Furthermore, the microkernel architecture through its levels of indirection can easily 
      accommodate  distribution of service requests across multiple servants running on different
      machines. Such an implementation would support scaleability.
    </para>
  </section>
  
  
</section>
