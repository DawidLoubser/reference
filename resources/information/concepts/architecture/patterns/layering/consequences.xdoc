<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.concepts.architecture.patterns.layering.consequences"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Consequences</title>
  <para>
    In most business applications the benefits of using layering typically far
    outweigh the disadvantages.
  </para>

  <section>
    <title>Benefits of layering</title>
    <para>
      <itemizedlist>
        <listitem><formalpara>
          <title>Reduced complexity</title>
          <para>
            A system with layers of well defined responsibilities which are weakly coupled via
            well defined APIs is typically significantly simpler that a non-layered system where
            any component may, in principal, interact with any other component.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>Reuse of layers</title>
          <para>
            Layers may, at times, be re-used across systems.
          </para>
        </formalpara></listitem>
      </itemizedlist>
    </para>
  </section>

  <section>
    <title>Disadvantages of layering</title>
    <para>
      <itemizedlist>
        <listitem><formalpara>
          <title>Lower efficiency</title>
          <para>
            The resultant system may be less efficient due to the integration between the layers
            which may often introduce network communication.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>Difficult to establish the correct granularity</title>
          <para>
            This may be addressed via our URDAD (Use-case/Responsibility Driven Analysis and Design).
          </para>
        </formalpara></listitem>
      </itemizedlist>
    </para>
  </section>
  
</section>
