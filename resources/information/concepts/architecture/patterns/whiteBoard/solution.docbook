<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xml:id="resources.information.concepts.architecture.patterns.whiteboard.solution"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">

    <title>Solution</title>
    <para>
        The solution suggested by the whiteboard architectural pattern is for business services
        to be registered in an efficient service directory, and for infrastructure services to
        continually use this registry to find services that satisfy certain criteria. Instead of
        decorator components or event sources maintaining a message path to the decorated components /
        event listeners, they are lookup up on-the-fly and invoked.
    </para>

    <section>
        <title>Responsibility allocation</title>
        <para>
            The role players in the whiteboard patterns are thus
            <itemizedlist>
                <listitem>
                    <formalpara>
                        <title>the business service</title>
                        <para>
                            which implements a contract, and is published to a central service directory including
                            service metadata (which may indicate a desire to be published as a web service, for example),
                        </para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>the service directory</title>
                        <para>
                            which provides efficient access to / iteration through the publishes services and their metadata, and
                        </para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>an infrastructure service</title>
                        <para>
                            which
                            <itemizedlist>
                                <listitem>
                                    <para>
                                        may or may not publish a contract-implementing service to the environment,
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        when an event occurs (an application event, or for example an incoming
                                        web service call) looks up the service(s) that it is interested in, and
                                        sends service requests to those services
                                    </para>
                                </listitem>
                            </itemizedlist>
                            The infrastructure service(s) and the business services never maintain message paths to one
                            another, and the business service is typically never even aware of the business service.
                        </para>
                    </formalpara>
                </listitem>
            </itemizedlist>
        </para>
        <figure xml:id="resources.information.concepts.architecture.patterns.whiteboard.responsibilityAllocation_fig">
            <title>Responsibilities of the role players in the whiteboard architectural pattern.</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="responsibilityAllocation.png"/>
                </imageobject>
            </mediaobject>
        </figure>

    </section>

    <section>
        <title>Structure</title>
        <para>
            The infrastructure does not maintain its own directory of business services (e.g. event listeners),
            instead delegating to a shared service directory which is uses every time to look up the
            services to interact with. The business service is never aware of the infrastructure
            services / event sources, implicitly hoping to be discovered.
        </para>

        <figure xml:id="resources.information.concepts.architecture.patterns.whiteboard.structure_fig">
            <title>The structure of the whiteboard architectural pattern.</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="structure.png"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>
            The whiteboard pattern enables lightweight, long-running systems, where infrastructure
            services (including the services directory) are deployed as modules next to the
            business services, all of them having independent life cycles. The event source, or
            event the services directory, can by un-deployed, while the business service is still
            running unchanged.
        </para>
        <para>

        </para>
    </section>

    <!--<section>-->
        <!--<title>Dynamics</title>-->
        <!--<para>-->
            <!--The knowledge sources do not interact directly with one another. The blackboard-->
            <!--pattern provides an-->
            <!--<emphasis>opportunistic problem solving</emphasis>-->
            <!--strategy which facilitates<emphasis>experimentation with different algorithms</emphasis>.-->
            <!--The dynamics of the blackboard pattern is illustrated in-->
            <!--<xref linkend="resources.information.concepts.architecture.patterns.blackboard.dynamics_fig"/>.-->
        <!--</para>-->

        <!--<figure xml:id="resources.information.concepts.architecture.patterns.blackboard.dynamics_fig">-->
            <!--<title>The dynamics of the blackboard architectural pattern.</title>-->
            <!--<mediaobject>-->
                <!--<imageobject>-->
                    <!--<imagedata fileref="dynamics.jpg"/>-->
                <!--</imageobject>-->
            <!--</mediaobject>-->
        <!--</figure>-->

        <!--<para>-->
            <!--During the iterative problem solving process the partial contributions to the solution-->
            <!--are added, modified and rejected.-->
            <!--<note>-->
                <!--<para>-->
                    <!--The knowledge sources check concurrently whether they can contribute to the-->
                    <!--solution.-->
                <!--</para>-->
            <!--</note>-->
        <!--</para>-->
    <!--</section>-->


    <!--<section>-->
        <!--<title>What is the solution?</title>-->
        <!--<para>-->
            <!--The blackboard pattern is typically applied to problems with a large solution space-->
            <!--for which there is insufficient domain knowledge available to generate a deterministic-->
            <!--solution. It provides a mechanism for different experts to contribute collaboratively-->
            <!--to a partial or complete solution for a problem.-->
        <!--</para>-->
        <!--<section>-->
            <!--<title>Criterion for selecting hypotheses</title>-->
            <!--<para>-->
                <!--Very often the problem is less that of finding a complete solution, but more one of-->
                <!--the hypothesis space potentially exploding generating a huge number of potential-->
                <!--solutions. In such situation one needs to select hypotheses and hence the ultimate-->
                <!--solution carefully. For this one needs some criterion around which one hypothesis-->
                <!--is preferred above another.-->
            <!--</para>-->

            <!--<section>-->
                <!--<title>Selecting on credibility ratings</title>-->
                <!--<para>-->
                    <!--Hypotheses are usually selected on a-->
                    <!--<emphasis>credibility rating</emphasis>-->
                    <!--which assigns a level of credibility based on the support from other hypotheses-->
                    <!--and general domain knowledge. Such a process-->
                    <!--<emphasis>detects mutually-->
                        <!--supportive clusters of hypotheses-->
                    <!--</emphasis>-->
                    <!--which are consistent with-->
                    <!--the input information.-->
                <!--</para>-->
            <!--</section>-->

            <!--<section>-->
                <!--<title>Preferring wide spanning hypotheses</title>-->
                <!--<para>-->
                    <!--At times one is looking for hypothesis which find support across the-->
                    <!--available information range. This often resembles itself as a drive-->
                    <!--towards higher-level hypotheses.-->
                <!--</para>-->
            <!--</section>-->

            <!--<section>-->
                <!--<title>Islands driving</title>-->
                <!--<para>-->
                    <!--This approach focuses on finding-->
                    <!--<emphasis>-->
                        <!--<quote>islands fo certainty</quote>-->
                    <!--</emphasis>-->
                    <!--which are then-->
                    <!--locked into the solution and reduces the search space which needs to be covered-->
                    <!--in the context of the furthr exploration of the solution.-->
                <!--</para>-->
            <!--</section>-->

            <!--<section>-->
                <!--<title>Information theory approach</title>-->
                <!--<para>-->
                    <!--Another criterion which is may be used is the-->
                    <!--<emphasis>maximum entropy principle</emphasis>-->
                    <!--which is philosophically based on-->
                    <!--<emphasis>Occam's razor</emphasis>. Occam's razor effectively states that-->
                    <!--<blockquote>-->
                        <!--<para>-->
                            <!--<emphasis>-->
                                <!--if you have two solutions which explain equally much about an observed problem,-->
                                <!--then the simpler solution which makes less assumptions and hence contains less-->
                                <!--information is the preferred solution.-->
                            <!--</emphasis>-->
                        <!--</para>-->
                    <!--</blockquote>-->
                <!--</para>-->
                <!--<para>-->
                    <!--The maximum entropy principle puts Occam's razor into a quantitative framework-->
                    <!--where the information content of a solution is measured and minimized subject-->
                    <!--to the condition that the observables need to be explained.-->
                <!--</para>-->
            <!--</section>-->

        <!--</section>-->

        <!--<section>-->
            <!--<title>Types of hypotheses</title>-->
            <!--<para>-->
                <!--A hypothesis may be assembled from a number of lower-level hypotheses -->
                <!--<abbrev>i.e.</abbrev>-->
                <!--one hypothesis may be a part of another. Blackboard-->
                <!--architectures typically also use the concepts of-->
                <!--<itemizedlist>-->
                    <!--<listitem>-->
                        <!--<para>supporting hypotheses, and</para>-->
                    <!--</listitem>-->
                    <!--<listitem>-->
                        <!--<para>abstraction levels of hypotheses.</para>-->
                    <!--</listitem>-->
                <!--</itemizedlist>-->
            <!--</para>-->

            <!--<section>-->
                <!--<title>Supporting hypotheses</title>-->
                <!--<para>-->
                    <!--One hypothesis can-->
                    <!--<emphasis>support</emphasis>-->
                    <!--another hypothesis. Very-->
                    <!--abstract hypotheses are far removed from a concrete solution,-->
                    <!--<abbrev>i.e.</abbrev>-->
                    <!--they generate very lit-->
                <!--</para>-->
            <!--</section>-->

            <!--<section>-->
                <!--<title>The abstraction level of a hypothesis</title>-->
                <!--<para>-->
                    <!--The abstraction level of a hypothesis resembles its-->
                    <!--<emphasis>conceptual distance from the input information</emphasis>.-->
                    <!--The lowest abstraction level is simply the input data representation, while-->
                    <!--the highest abstraction level resembles a solution in the output domain.-->
                <!--</para>-->
                <!--<para>-->
                    <!--Abstraction levels are best understood in the context of a concrete example.-->
                    <!--Blackboard architectures have been widely applied to artificial intelligence-->
                    <!--problems like speech and image recognition. In speech recognition we may-->
                    <!--end up with the following abstraction levels:-->
                    <!--<orderedlist>-->
                        <!--<listitem>-->
                            <!--<para>-->
                                <!--The lowest level hypothesis is the input signal (a sound signal),-->
                            <!--</para>-->
                        <!--</listitem>-->
                        <!--<listitem>-->
                            <!--<para>-->
                                <!--The next higher level of abstraction may be a segmentation of the signal-->
                                <!--into separate units (words).-->
                            <!--</para>-->
                        <!--</listitem>-->
                        <!--<listitem>-->
                            <!--<para>-->
                                <!--The third level of abstraction may be the identification of syllables.-->
                            <!--</para>-->
                        <!--</listitem>-->
                        <!--<listitem>-->
                            <!--<para>-->
                                <!--The fourth level of abstraction could be the identification of the individual-->
                                <!--words.-->
                            <!--</para>-->
                        <!--</listitem>-->
                        <!--<listitem>-->
                            <!--<para>-->
                                <!--The highest level of abstraction would be the solution in terms of statements and-->
                                <!--sentences which are correct in both, vocabulary and syntax.-->
                                <!--<note>-->
                                    <!--<para>-->
                                        <!--A even higher level-->
                                        <!--solution would also be correct in meaning,-->
                                        <!--<abbrev>i.e.</abbrev>-->
                                        <!--would ensure-->
                                        <!--that the statements are meaningful.-->
                                    <!--</para>-->
                                <!--</note>-->
                            <!--</para>-->
                        <!--</listitem>-->
                    <!--</orderedlist>-->
                <!--</para>-->
            <!--</section>-->

            <!--<section>-->
                <!--<title>Information content of a hypothesis</title>-->
                <!--<para>-->
                    <!--The information content is a measure of the complexity of a hypothesis. The higher-->
                    <!--the complexity, the higher its information content.-->
                <!--</para>-->
            <!--</section>-->
        <!--</section>-->

    <!--</section>-->

</section>