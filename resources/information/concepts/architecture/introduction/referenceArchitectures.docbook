<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xml:id="resources.information.concepts.architecture.introduction.referenceArchitectures" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">

    <title>Reference architectures</title>
    <para>
        An architecture may be designed from scratch. It is more typical, however, to build a concrete
        system architecture on one or more reference architectures.
        <blockquote>
            <para>
                <emphasis>
                    A reference architecture is a blueprint for an architecture which addresses the core aspects
                    of a particular domain.
                </emphasis>
            </para>
        </blockquote>
    </para>
    <para>
        As such a specific system architecture may at times be viewed as an instance of a
        reference architecture.
    </para>
    <para>
        There are various reference architectures. For example, a compiler reference architecture
        shows the core components of a generic compiler, the responsibility allocation across
        these components and the relationships between these components. In the case of a
        <emphasis>compiler reference architecture</emphasis>
        there will be components for
        <itemizedlist>
            <listitem>
                <para>lexical analysis,</para>
            </listitem>
            <listitem>
                <para>syntactic analysis,</para>
            </listitem>
            <listitem>
                <para>code generation,</para>
            </listitem>
            <listitem>
                <para>optimization</para>
            </listitem>
        </itemizedlist>
        and so on.
    </para>
    <para>
        Similarly, there are a number of reference architectures for enterprise systems. The most well
        known are perhaps the
        <emphasis>Java EE</emphasis>
        (Java Enterprise Edition)

        and Microsoft's<emphasis>.Net</emphasis>. These
        architectures typically address
        <itemizedlist>
            <listitem>
                <para>
                    application and web-based presentation layers,
                </para>
            </listitem>
            <listitem>
                <para>
                    business logic and entity components,
                </para>
            </listitem>
            <listitem>
                <para>
                    system integration mechanisms,
                </para>
            </listitem>
            <listitem>
                <para>
                    transactional support,
                </para>
            </listitem>
            <listitem>
                <para>
                    security,
                </para>
            </listitem>
        </itemizedlist>
        and other aspects of typical enterprise systems.
    </para>

</section>