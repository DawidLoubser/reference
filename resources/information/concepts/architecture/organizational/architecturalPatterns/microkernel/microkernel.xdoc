<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.concepts.architecture.organizational.architecturalPatterns.microkernel.mikrokernel"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Flexible higher level service providers on a solid core via the micro kernel pattern</title>
  <para>
    The purpose of the micro kernel architectural pattern is to enable flexible, dynamic high level
    service providers built on a small, stable backbone of core back end service providers. It enables an
    organization to be dynamic, yet based on a solid core.
    <note><para>
      The micro kernel pattern is also a widely used software pattern<xref
        linkend="Gamma-Helm-Johnson-Vlissides-1995"/>.  Many operating systems and
      application servers are based on the micro kernel pattern. 
    </para></note>
  </para>  
    
  <section>
    <title>Structure of the micro kernel pattern</title>
    <para>
      In the micro kernel architectural pattern the micro kernel represents the stable backbone of
      core back end service providers, the internal servers. The operations provided by these back end
      service providers are efficient and reliable. Their business processes change very
      infrequently.
    </para>
    <figure>
      <title>The structure of the micro kernel pattern</title>
      <graphic fileref="structure.jpg"/>
    </figure>
    <para>
      Organizations which use the micro kernel architectural pattern want to be able to provide
      flexible higher level client services which change frequently with changing business
      opportunities. The client services are provided by largely independent business units which
      usually operate on their own balance sheet.
    </para>
    <para>
      The micro kernel pattern uses an adapter as client interface. The adapter determines for a
      client request the appropriate external server.
    </para>
    
    <section>
      <title>Example</title>
      <para>
        Let us look at a simplified view of a derivatives trading company based on the micro kernel
        architectural pattern.
      </para>
      
      <figure>
        <title>Simple example of an organization whose core is based on the mirco kernerl
          architectural patter</title>
        <graphic fileref="example.jpg"/>
      </figure>
      
      <para>
        Here the core back office and support services are provided by the internal servers managed
        by the micro kernel. The trading arms of the organization where the company needs to
        continuously innovate and adjust its services client's continuously changing needs are
        operated as independent business units with their own balance sheet. The adapter role is
        played by client services which delegates clients to the appropriate trading arm.
      </para>
    </section>
  </section>
  
  <section>
    <title>Combining micro kernel with other architectural patterns</title>
    <para>
      An organizational architecture seldom uses only a single architectural pattern. Instead
      architectural patterns are combined to define the core infrastructure of the organization.
    </para>
    <para>
      The micro kernel pattern may be the core architectural pattern for certain organizations which
      want to provide flexible client services on a slowly evolving solid core, but the different
      components of the micro kernel (<abbrev>e.g.</abbrev> the internal and external servers) may
      be built on a different architectural pattern. 
    </para>
    <section>
      <title>Example</title>
      <para>
        The following example illustrates how different architectural patterns can be combined with
        the micro kernel pattern. 
      </para>
      <para>
        Organizations which aim to address their clients continuously evolving needs through
        ingenuitive solutions often base their external servers on the expert pool pattern. This
        facilitates a dynamic client services realized within an architecture which encourages
        ingenuitivity, provides flexibility and enforces internal quality control the proposed
        solutions.
      </para>
      <para>
        An organization may see accountability and responsibility localization key for the micro kernel
        which manages the internal servers realizing the core backbone services. In such a case it
        is may make sense to use the hierarchical pattern for the micro kernel.
      </para>
      <para>
        The internal servers realize the core backbone work flows. These work flows should be scalable
        and it may be necessary to modify these work flows now and then. This may prompt the
        organization to base some of the internal servers on the pipes and filters architectural
        pattern.
      </para>
    </section>
    
  </section>
  
  <section>
    <title>Human resources within the micro kernel pattern</title>
    <para>
      The human resources approach would vary very much across internal servers, external servers,
      micro kernel and adapter and would be largely determined by the respective lower level pattern
      used for these components.
    </para>
    <para>
      For example, if an external server is based on the expert pool pattern, then it is likely that
      person centric human resources will be used. On the other hand, an internal server based on
      the pipes and filters architectural pattern will usually use role based human resources.
    </para>
  </section>
  
  <section>
    <title>Strengths of the micro kernel pattern</title>
    <para>
      The micro kernel is often used as the core/highest level architectural pattern, putting the
      organization on a stable, solid core, yet supporting innovation and flexibility at the client
      services level.
    </para>
  </section>
  
  <section>
    <title>Weaknesses of the micro kernel pattern</title>
    <para>
      The micro kernel architectural pattern does introduce some structural complexity which may not
      be justified for very small organizations. 
    </para>
  </section>
</section>