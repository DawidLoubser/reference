<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.concepts.architecture.organizational.capabilityDrivenArchitecture.methodology.domainStrategies.domainStrategies"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Selecting architectural strategies for the capability domains</title>
  <para>
    We have defined an infrastructure within which the organization can realize its mission and
    vision. This was done by combining architectural patterns in such a way as to support the envisaged
    capabilities of the organization. 
  </para>
  <para>
    Next we define the goals through which the organization aims to achieve these capabilities. 
    Once the goals have been defined, the organization will select a collection of concrete
    strategies through which it aims to realize the goals. The strategies are thus used to realize
    the goals which in turn realize the capabilities which ultimately enables the organization to
    realize its mission and vision.
  </para>
  <para>
    Doing this from first principles can be a daunting task. To make this process simpler and less
    error prone, we are guided by best practices, <abbrev>i.e.</abbrev> by goals which are known to
    realize the desired capabilities and by proven strategies which are commonly employed to realize
    these goals.
  </para>
  
  <section>
    <title>Example: Solms TCD</title>
    <para>
       To illustrate the process we shall look at one of the capability domains of our model
      organization. We select for this the client services experts pool which, in many ways,
      represents the core of the organization.
    </para>
    
    <para>
      The core capability drivers within client services are ingenuity, quality and flexibility.
      The organization aims to be able to provide novel solution which gives its clients a
      competitive edge, offer high quality solutions and be able to customize its service
      offerings to the clients particular needs.
    </para>
    <para>
      The goals for ingenuity are
      <itemizedlist>
        <listitem><para>
          to have ingenuitive resources available,
        </para></listitem>
        <listitem><para>
          to provide a suitable environment for ingenuity,
        </para></listitem>
        <listitem><para>
          to put in place standard work flows for ingenuity, and
        </para></listitem>
        <listitem><para>
          to reward ingenuity.
        </para></listitem>
      </itemizedlist>
    </para>
    
    <section>
      <title>Resources for ingenuity</title>
      <para>
        The natural first step to drive innovation is to ensure that the organization has the
        resources for ingenuity.
      </para>
      
      <section>
        <title>Hiring innovative people</title>
        <para>
          The model company hires <emphasis>ingenuitive individuals</emphasis> for its client
          services experts pool. The selection
          process favours individuals who have a history of coming up with novel solutions.
          Furthermore, the organization uses a number of tests to assess job candidates for
          their ability to think laterally and come up with original and alternative solutions.
        </para>
      </section>
      
      <section>
        <title>Grow people by giving them wide exposure</title>
        <para>
          A strategy used by our model organization to ensure that experts grow continuously is
          that of giving them very varied exposure. To this end, the company does not hire
          trainers, consultants and developers. Instead it hires experts who are actively involved in
          all these aspects. The exposure to all three types of services provides a fruitful
          environment for continuous growth:
          <itemizedlist>
            <listitem><para>
              Experts deepen their understanding in a structured way by preparing and extending course
              material and by trying to find solutions to questions which arise in the training
              context. Often courses are customized to address a client's specific needs. This
              requires the relevant experts to deepen their understanding of their clients needs
              and of solutions which can address these needs. 
            </para></listitem>
            <listitem><para>
              The consulting work provides a lot of exposure to real life problems and various
              solutions to these problems.
            </para></listitem>
            <listitem><para>
              Finally involving experts in the implementation domain provides them hands on
              experience in actual business process design and implementation, potentially using a
              wide range of technologies.
            </para></listitem>
          </itemizedlist>
        </para>
      </section>
      
      <section>
        <title>Driving ingenuity through polymorphic teams</title>
        <para>
          The client services expert pool of organization uses <emphasis>polymorphic
            teams</emphasis> of experts for each project, 
          changing the team members from project to project. In this way the combination of the
          different background encourages the search for novel solutions.
          <note><para>
            Often solutions which look amazingly original on first sight, can be found, on closer
            inspection, to have arisen from ideas from other fields which are incrementally
            evolved to form a novel solution for a problem in a different domain. 
          </para></note>
          Furthermore, changing the team composition across projects encourages knowledge dispersal
          across all experts.
        </para>
      </section>
      
      <section>
        <title>Manage and retain knowledge using a knowledge repository</title>
        <para>
           The strategies selected so far promote ingenuity and expert growth. A knowledge driven
          organization must also put mechanisms in place to
          <itemizedlist>
            <listitem><para>
              make knowledge gained by certain experts accessible to the expert pool as a whole,
              and to
            </para></listitem>
            <listitem><para>
              retain knowledge within the organization, particularly in the context of experts
              leaving the organization. 
            </para></listitem>
          </itemizedlist>
        </para>
        <para>
          To this end our model organization has built and maintained a domain knowledge repository.
          Experts who gain new domain knowledge or have deepened their understanding in a particular
          domain feed this newly gained knowledge into the knowledge repository. This is
          irrespective of whether the domain knowledge was obtained in the context of training,
          providing consulting services or in the context of designing or implementing solutions
          to certain problems. 
          <note><para>
            The difference between knowledge and information is that knowledge contextualizes
            information and typically enables one to extract value from the information.
          </para></note>
        </para>
        
        <section>
          <title>Obtaining further business value from the knowledge repository</title>
          <para>
            In order to obtain further value from the knowledge repository, our model organization
            links knowledge components by adding relationships between them. In
            particular, adding two relationships enables the organization to automatically
            generate customized course material for their clients and to ensure that the courses
            are pedagogically sound.
          </para>
          <para>
            Two relationships added are a <quote><emphasis>part of</emphasis></quote>relationship
            and a <quote><emphasis>requires prior understanding of</emphasis></quote> relationship. A 
            knowledge component may thus be part of one higher level, more coarse grained knowledge
            component and understanding one knowledge component may require the prior
            understanding of zero or more other knowledge components.
          </para>
          <figure>
            <title>Relationships between knowledge components</title>
            <graphic fileref="knowledgeComponent.jpg"/>
          </figure>
          
          <para>
            For example, the knowledge components on how to define the mission, and vision of an
            organization are part of the more general understanding of defining the purpose of an
            organization. Similarly, the expert pool pattern is part of architectural patterns
            which, in turn, is part of organizational architecture.
            The aggregation relationships result in a containment hierarchy.
          </para>
          <para>
            The dependency relationships, on the other hand, are used to specify that the
            understanding of a particular knowledge component requires the prior understanding of
            certain other knowledge components. This dependency may be at various levels of the
            containment hierarchy.
          </para>
          <para>
            For example, understanding architecture requires the prior understanding of the
            purpose of an organization, including the understanding of its mission and vision as
            well as the understanding of the concept of capabilities as a whole including the
            various capabilities an organization may strive for.
          </para>
          <para>
            Now courses can be defined within a pedagogically sound framework by selecting for each
            course the desired outcomes and the prerequisites. Solms TCD auto-generates the course
            contents from this information by
            <orderedlist>
              <listitem><para>
                selecting the set of knowledge components for the outcomes of the course,  
              </para></listitem>
              <listitem><para>
                recursively collecting all knowledge components which are prerequisites of the
                outcomes as well as of any inserted knowledge components omitting any knowledge
                components which are prerequisites for the course, and
              </para></listitem>
              <listitem><para>
                ordering these knowledge components in a pedagogically sound way,
                <abbrev>i.e.</abbrev> in order of their dependencies.
              </para></listitem>
            </orderedlist>
          </para>
          <para>
            This same infrastructure supports automatic generation of custom courses addressing a
            clients specific training needs. Solms TCD identifies the background knowledge of the
            client's team as well as the knowledge they need to acquire in order to solve the
            problems the organization is currently facing. This is enough information to generate a
            pedagogically sound training path, taking the client team from where they are to where
            they need to be.
          </para>
          <para>
            This simple knowledge repository does not only facilitate sound course definition and
            customized course content generation. It has also proven to be invaluable as an enabler
            for the experts within Solms TCD itself. If any member of the organization is faced with
            a problem which requires them to acquire new knowledge, they can generate their own
            pedagogically sound training path by specifying their background and the knowledge they
            need to acquire. 
            Should the required information not be available within the knowledge repository, then the
            information has to be obtained from other sources. Having found the required information
            sources, the expert inserts them into the knowledge repository by defining the part of and
            dependency relationships to other knowledge components, thereby marking the information
            up as knowledge. The information itself need not necessarily be captured within the
            organization's knowledge repository. 
          </para>
          <note><para>
            The part of and dependency relationships, between the knowledge components are just
            two relationships which enable the organization to extract value around training from the information.
            Other relationships are added to enable further extraction and potentially deductive
            reasoning based on the knowledge repository.
          </para></note>
        </section>
      </section>
    </section>
  
    <section>
      <title>Providing an environment which encourages and supports ingenuity</title>
      <para>
        Our model organization uses all the standard strategies discussed in <xref
          linkend="resources.information.concepts.architecture.organizational.strategies.ingenuity.environmentForIngenuity.environmentForIngenuity"/>
        for creating an environment which encourages ingenuity within the client services experts pool.
      </para>
      <para>
        In particular, the experts are not given well defined roles within the organization and
        are involved across the core client services, <abbrev>i.e</abbrev> contribute to training,
        consulting and realization. Furthermore, the experts are given the opportunity to select
        themselves when and where they can best contribute to the current client operations (with
        some control exerted by the expert pool as a whole and ultimately by the controller).
      </para>
      <para>
        In the context of continuous growth, the experts evolve their own role within the
        organization, being able to sensibly contribute to increasingly complex problems and to
        different domains.
      </para>
    </section>
    
    <section>
      <title>Work flows supporting ingenuity</title>
      <para>
        Once again, client services makes extensive use of the standard work flows supporting
        ingenuity. In particular, brainstorming sessions are used to gain an understanding of the
        core complexities and risks of the problem and to explore possible solutions to
        new problems the organization is facing. 
      </para>  
      <para>
        As a standard procedure, risk is explicitly tracked throughout all projects. Before any
        project is started and before any significant investment is made the organization
        introduces a standard risk-reward analysis step.
      </para>
      <para>
        A further standard strategy used by Solms TCD is test driven development. Tests are
        defined before the solution domain is explored. Besides the obvious quality assurance
        benefits, test driven approaches ensure a better understanding and
        improved focus on client requirements. 
      </para>
    </section>
    
    <section>
      <title>Rewarding ingenuity</title>
      <para>
         The organization makes use of all the standard strategies for rewarding ingenuity
        including material reward, offering dedicated, valuable resources a stake in the
        organization, recognition within the organization and public recognition through
        oral and printed communications.
      </para>
    </section>
  </section>
</section>  