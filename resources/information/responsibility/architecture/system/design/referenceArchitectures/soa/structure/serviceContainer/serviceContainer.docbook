<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Service containers</title>
    <para>
        Service containers host the physical services and provide an environment within which the
        services are executed. They can be, for example, 
        <itemizedlist>
            <listitem><para>
                simple, light-weights service containers,
            </para></listitem>
            <listitem><para>
                EJB containers,
            </para></listitem>
            <listitem><para>
                Spring containers,
            </para></listitem>
            <listitem><para>
                Servlet containers,
            </para></listitem>
            <listitem><para>
                .Net containers, 
            </para></listitem>
            <listitem><para>
                or a web-services wrapped mainframe.
            </para></listitem>
        </itemizedlist>
    </para>
    
    <section>
        <title>Responsibilities of the service container</title>
        <para>
            The service container is responsible for providing
            <itemizedlist>
                <listitem><para>
                    a run-time environment for services,
                </para></listitem>
                <listitem><para>
                    end-points (access points) for services,
                </para></listitem>
                <listitem><para>
                    resource management including thread management, memory management,
                    connection management, ..., and
                </para></listitem>
                <listitem><para>
                    general invocation management including authorization.
                </para></listitem>
            </itemizedlist>
        </para>
    </section>
    
    <section>
        <title>Distributed service containers</title>
        <para>
            A service container is often distributed across a grid of nodes, thereby providing
            scalability and reliability across the services it hosts.
        </para>
    </section>
    
    <section>
        <title>Federated service containers</title>
        <para>
            A federated service container is one which conceptually groups a set of service
            containers into a single conceptual service container, providing a single access
            point across different service containers.
        </para>
    </section>
    
    <section>
        <title>Heterogenous service containers</title>
        <para>
            A heterogenous service container can host services realized in a range of technologies, like
            Java, .Net, Ruby, .... Normally a heterogenous service container is also a federated service
            container.
        </para>
    </section>
</section>    