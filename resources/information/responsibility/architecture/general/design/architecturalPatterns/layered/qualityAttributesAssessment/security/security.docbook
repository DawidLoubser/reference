<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Security</title>
    <para>
        <indexterm><primary>security</primary><secondary>in layered pattern</secondary></indexterm>
        In cases where security is important when using a layered architecture, one typically dedicates one layer
        as user interface layer. All authentication is done at that layer.
        <indexterm><primary>authentication</primary></indexterm>
    </para>
    <para>
        For authorization one usually uses a role based model where users are assigned roles and authorization
        around the services is done against roles. This is also usually confined to a single layer - the processes
        or services layer. <indexterm><primary>authorization</primary></indexterm>
    </para>
    <para>
        Secure communication (confidentiality) is usually addressed also in a separate layer - the integration layer.
        <indexterm><primary>confidentiality</primary></indexterm>
        <indexterm>
            <primary>secure communication</primary>
            <see><indexterm><primary>confidentiality</primary></indexterm></see>
        </indexterm>
    </para>
    <para>
        In this sense layered architectures are quite suited to realizing security. Authentication, authorization
        and confidentiality are each localized to within separate layer.
    </para>
</section>    