<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>The master-slave pattern</title>
    <para>
        
    </para>
</section>    

<!-- 
    Intent
    
    "The Master-Slave design pattern supports fault tolerance, parallel computation and computational accuracy. A master component distributes work to identical slave components and computes a final result from the results these slaves return." (Buschmann, F., R. Meunier, H. Rohnert, P. Sommerlad, and M. Stal, Pattern-Oriented Software Architecture: A System Of Patterns. West Sussex, England: John Wiley & Sons Ltd., 1996)
    
    Motivation
    
    The idea of the Master-Slave pattern is to introduce a coordination instance between clients of the service and the processing of individual sub-tasks. The master component divides work into equal sub-tasks, delegates these sub-tasks to several independent but semantically-identical slave components, and computes a final result from the partial results the slaves return. This general principle is found in three application areas: · Fault tolerance. The execution of a service is delegated to several replicated implementations. Failure of service executions can be detected and handled. · Parallel computing. A complex task is divided into a fixed number of identical sub-tasks that are executed in parallel. The final result is built with the help of the results obtained from processing these sub-tasks. · Computational accuracy. The execution of a service is delegated to several different implementations. Inaccurate results can be detected and handled. Provide all slaves with a common interface. Let clients of the overall service communicate only with the master. For a more detailed Motivation description for this pattern see: Buschmann, F., R. Meunier, H. Rohnert, P. Sommerlad, and M. Stal. Pattern-Oriented Software Architecture: A System Of Patterns. West Sussex, England: John Wiley & Sons Ltd., 1996.
    
    Known Uses
    
    Matrix multiplication --In a product matrix, each row can be computed by a separate slave. Transform-coding --Each pixel block in an image can be computed by a separate slave. Computing the cross-correlation of two signals. (Kleiman, S., D. Shah, and B. Smaalders, Programming with Threads, SunSoft Press, Prentice Hall, 1996.)
    
    Also used to keep all machines synchronized with a single master (simple updates across machines)
    
    Monte-Carlo calculations
-->
