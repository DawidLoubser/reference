<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>
        Structure
        <indexterm><primary>microkernel</primary><secondary>structure</secondary></indexterm>
    </title>
    <para>
        The components of the microkernel pattern incude
        <itemizedlist>
            <listitem><para>
                the microkernel,
            </para></listitem>
            <listitem><para>
                internal servers compiled into the microkernel,
            </para></listitem>
            <listitem><para>
                external servers, and
            </para></listitem>
            <listitem><para>
                an adapter.
            </para></listitem>
        </itemizedlist>
        The core structure of the microkernel pattern is shown in <xref linkend="microkernel.structure.structure_fig"/>.
    </para>
    
    <figure xml:id="microkernel.structure.structure_fig">
        <title>The structure of the microkernel pattern</title>
        <mediaobject><imageobject><imagedata fileref="structure.jpg"/></imageobject></mediaobject>
    </figure>
    
    <para>
        The responsibilities of these components is shown in <xref linkend="microkernel.structure.responsibilityAllocation_fig"/>.
    </para>
    
    <figure xml:id="microkernel.structure.responsibilityAllocation_fig">
        <title>Responsibilities of the components of the microkernel pattern</title>
        <mediaobject><imageobject><imagedata fileref="responsibilityAllocation.jpg"/></imageobject></mediaobject>
    </figure>
    
    <section>
        <title>The microkernel and internal servers</title>
        <para>
            The microkernel hosts the core of reliable, slowly evolving back-end/base services. The base services themselves are
            actually realized by internal servers deployed within the microkernel. The microkernel
            <itemizedlist>
                <listitem><para>
                    publishes core back-end functionality provided by internal servers through a standard access channel,
                </para></listitem>
                <listitem><para>
                    manages and provides access to the core resources of the work product,
                </para></listitem>
                <listitem><para>
                    provides a communication infrastructure for processes to communicate with one another,
                </para></listitem>
            </itemizedlist>
        </para>
    </section>
    
    <section>
        <title>External servers</title>
        <para>
            The external servers provide the user/client services. The aim of the microkernel pattern provide an infrastructure
            where these user/client services can be very flexible. New services addressing new user/client needs are continuously
            added and the business processes for existing services are regularly modified. These dynamic user services make use
            of the solid core of base services offered by the microkernel.
        </para>
        <para>
            The external servers themselves are independent service providers. These service providers are pluggable and independent
            on one another.
        </para>
    </section>
    
    <section>
        <title>The adapter</title>
        <para>
            The user/client services, need to be requested by the appropriate high level external servers. To this end the user/client needs
            to come into contact with the appropriate external server. But for this the client/user would require intimate knowledge of the
            service provider (the organization or system). In order to avoid this problem, the microkernel pattern introduces an adapter
            which publishes the services available across the external servers within an integrated user/client interface.
        </para>
        <para>
            The adapter determines the appropriate external server from the microkernel and forwards the client request to it.
        </para>
    </section>
</section>    