<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Consequences of the blackboard architectural pattern</title>
    <para>
        
        <itemizedlist>
            <listitem><formalpara>
                <title>Facilitated collaboration across experts</title>
                <para>
                    The blackboard pattern provides an infrastructure within which experts or processing
                    elements may collaborate to realize a service or solve a problem. 
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Experts decoupled</title>
                <para>
                    Even though the experts collaborate to solve problems/realize services, they never communicate 
                    directly and do not have to know of one another.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Can easily add/remove experts</title>
                <para>
                    One can easily add experts which are able to perform different type of processing
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Experts can evolve their responsibilities</title>
                <para>
                    The blackboard architecture does not require that experts continue doing the same
                    type across time. Instead the architecture enables experts to grow or change,
                    contributing over time in different ways to business or problem solving processes.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Experts may vary considerably</title>
                <para>
                    The individual experts may vary considerably in the way they operate, and in what they do.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Experts may be distributed</title>
                <para>
                    The experts need not be deployed at the same location. They can be used as long as they have 
                    access to the blackboard and as long as the controller can access the experts.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Typically requires notification mechanism on blackboard</title>
                <para>
                    In its most basic implementation, the blackboard pattern requires
                    experts to continuously inspect the blackboard for
                    information and requests which they intend to process.
                    In order to avoid such very significant overheads one requires that the infrastructure provides
                    a mechanism through which experts register with the blackboard to be notified of such events.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Blackboard and controllers may be single points of failure</title>
                <para>
                    In the simplest form the blackboard has single points of failure in both, the blackboard and 
                    the controller. This is often removed by using a distributed blackboard with redundancy
                    on the blackboard and on the controllers.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Facilitates solution to open-ended problems</title>
                <para>
                    The blackboard pattern provides an architecture within which one can solve open-ended problems
                    for which there is no algorithmic solution, <abbrev>i.e.</abbrev> for which one cannot specify
                    a step-for step process or algorithm which will lead to the solution. Furthermore, should a 
                    dead-end path have been followed, the blackboard infrastructure provides a framework within
                    which one can backtrack and explore alternative solutions.
                    <note><para>
                        The blackboard architectural pattern can provide an infrastructure wihtin which one can find suitable processes
                        realizing novel service requests. Once such a process has been found within a blackboard architecture, the
                        process could be formalized within a pipes and filters infrastructure.
                    </para></note>
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>No centralized process definition</title>
                <para>
                    In the blackboard pattern there is no centralized process definition. On the one side this has the 
                    benefits of not having excessive centralization and increased flexibility and also facilitates the 
                    ability to solve open-ended problems. On the other side this in
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Requires paradigm shift</title>
                <para>
                    Efficient work within a blackboard architecture requires a paradigm shift from a control centric
                    process driven approach to an event driven approach of incremental processing steps.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Difficult to test</title>
                <para>
                    Since there is no algorithmic process definition, testing may in some ways be more difficult. On the
                    other hand, testing should still be driven by user contracts around the services realized within the
                    blackboard based architecture.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Collaborative quest to solution may fail</title>
                <para>
                    There is not necessarily a guarantee that the collaborative quest to solve a problem will actually
                    yield a solution. But then there may, of course, not be a solution. Furthermore, blackboard
                    provides an infrastructure within which difficult problems which are otherwise not solvable can be solved.
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>
</section>    