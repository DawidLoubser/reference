<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>
        Realizing maintainabiity
        <indexterm><primary>maintainability</primary><secondary>strategies</secondary></indexterm>
    </title>
    <para>
        
    </para>
</section>
<!-- 
    #  Responsibility localization benefits as per Google:
    Synergy isn't always crap. By making all parts of a system work together an improvement in one helps them all. 
    Improve the file system and everyone benefits immediately and transparently. 
    If every project uses a different file system then there's no continual incremental improvement across the entire stack.

    # Monitorability
    Originally they had no monitoring, no graphs, no statistics, which makes it hard to pinpoint and solve problems. 
    Added Munin and Nagios. There were difficulties using tools on Solaris. Had Google analytics but the pages weren't loading so it wasn't that helpful :-)
    
    Amazon:
    ======
    - minimize sharing of resources. They introduce bottlenecks and hamper maintainability
    
    - Create a single unified service-access mechanism. This allows for the easy aggregation of services, decentralized request routing, 
    distributed request tracking, and other advanced infrastructure techniques.
    
    use SLAs
    
    Flickr
    ===
    Statelessness means they can bounce people around servers and it's easier to make their APIs.
-->
