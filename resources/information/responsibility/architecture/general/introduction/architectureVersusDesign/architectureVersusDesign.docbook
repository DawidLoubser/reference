<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-06-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>Architecture versus design
        <indexterm>
            <primary>architecture</primary>
            <secondary>versus design</secondary>
        </indexterm>
    </title>
    <para>
        At times architecture is seen simply as high level design.
        <indexterm>
            <primary>architecture</primary>
            <secondary>seen as high level design</secondary>
        </indexterm>
        Such a differentiation would,
        however, be quite arbitrary and would also have the consequence that the skills requirements
        and tasks for architecture would not differ significantly from those of design.
    </para>
    <para>
        Amnon Eden and Rick Kazman
        <citation>EK_2003_ADI</citation>
        formalized the distinction using the
        <emphasis>locality criterion</emphasis>
        <indexterm>
            <primary>locality criterion</primary>
        </indexterm>
        stating that
        architectural statements describe properties of the entire system (non-local) whereas design
        specifications pertain only to a limited part thereof.
    </para>
    <para>
        In particular, architecture provides the infrastructure
        <indexterm>
            <primary>infrastructure</primary>
        </indexterm>
        within which the components
        realizing the functionality are deployed. It provides a framework within which the work
        product realizes its
        <indexterm>
            <primary>quality requirements</primary>
        </indexterm>
        quality requirements,
        ensuring that these are addressed across the
        various usage scenarios
        <indexterm>
            <primary>usage scenarios</primary>
            <see>
                <package>use case</package>
            </see>
        </indexterm>
        <indexterm>
            <primary>use case</primary>
        </indexterm>
        <indexterm>
            <primary>service</primary>
        </indexterm>
        (services or use cases) of the work product.
    </para>
    <para>
        Design, on the other hand, is driven by the functional requirements
        <indexterm>
            <primary>requirements</primary>
            <see>functional</see>
        </indexterm>
        for the work product,
        generating a solution realizing its various usage requirements. This includes
        <itemizedlist>
            <listitem>
                <para>
                    functional responsibility distribution
                    <indexterm>
                        <primary>responsibility</primary>
                        <secondary>distribution</secondary>
                    </indexterm>
                    across functional components (lower
                    level service providers),
                </para>
            </listitem>
            <listitem>
                <para>interface specifications,
                    <indexterm>
                        <primary>interface</primary>
                        <secondary>specification</secondary>
                    </indexterm>
                    and
                </para>
            </listitem>
            <listitem>
                <para>
                    the specification of work flows and algorithms.
                    <indexterm>
                        <primary>work flow</primary>
                    </indexterm>
                    <indexterm>
                        <primary>algorithm</primary>
                    </indexterm>
                </para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        A further difference between architecture and design elements is that the latter
        typically change at a much higher frequency than the former.
        <indexterm>
            <primary>architecture</primary>
            <secondary>frequency of change</secondary>
        </indexterm>
        The architecture or
        infrastructure of a work product typically only changes when
        <itemizedlist>
            <listitem>
                <para>
                    <indexterm>
                        <primary>vision</primary>
                    </indexterm>
                    the vision for the work product changes due to changes in either
                    <itemizedlist>
                        <listitem>
                            <para>
                                <indexterm>
                                    <primary>scope</primary>
                                    <secondary>of services</secondary>
                                </indexterm>
                                the scope of services to be deployed in the architecture changes,
                                or
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <indexterm>
                                    <primary>quality requirements</primary>
                                </indexterm>
                                the quality requirements for the work product,
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
            </listitem>
            <listitem>
                <para>
                    or when stake holders feel that the architecture has not succeeded to address
                    their requirements.
                </para>
            </listitem>
        </itemizedlist>
        Both of these happen much less frequently than changes to functional or
        usage requirements of the work product. Users will continuously change the functional
        demands made on a work product.
    </para>
    <para>
        For example, one family may use a house for a holiday home, while another may use the
        <indexterm>
            <primary>house</primary>
        </indexterm>
        <indexterm>
            <primary>holiday home</primary>
        </indexterm>
        same house as their prime residence. The functional requirements
        <indexterm>
            <primary>requirements</primary>
            <secondary>functional</secondary>
        </indexterm>
        may be quite different (one
        family may use a room as a study while the next may use it as another bedroom). Furthermore,
        the design of the kitchen or bathroom may change quite regularly without touching the
        architecture of the house.
    </para>

    <bibliography>
        <xi:include href="../../../../../bibliography/EK_2003_ADI.docbook"/>
    </bibliography>


</section>
