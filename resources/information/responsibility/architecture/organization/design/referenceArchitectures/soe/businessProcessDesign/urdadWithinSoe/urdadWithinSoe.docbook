<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Using URDAD for the technology neutral business process design of a SOE</title>
    <para>
        Although URDAD, the <emphasis>Use-Case, Responsibility Driven Analysis and Design</emphasis>
        methodology is not exclusively meant for services oriented enterprises and systems, its
        services oriented approach is aligned with what is required for the technology neutral
        business process design of a SOE. In particular, it provides a technology neutral business
        process design methodology which adheres to the requirements for the business process
        deisng of a SOE. In particular, URDAD
        <itemizedlist>
            <listitem><para>
                generates full services contracts,
            </para></listitem>
            <listitem><para>
                links the stakeholder's functional requirements to the services
                through which these are realized,
            </para></listitem>
            <listitem><para>
                assigns responsibilities to services contracts and not to specific service
                providers (e.g. specific systems or specific external service providers),
            </para></listitem>
            <listitem><para>
                localizes the services business process within a controller for the service,
                decoupling the service providers used within a business process, and
            </para></listitem>
            <listitem><para>
                specifies the data structures of exchanged value objects in a technology neutral 
                way which can be mapped onto different implementation technologies
                like web or paper based forms, technology specific objects like XML, Java
                or C# objects, a representation of these data structures in persistent storage
                (e.g. relational databases or knowledge repositories, ...).
            </para></listitem>
        </itemizedlist>
    </para>
</section>    
    