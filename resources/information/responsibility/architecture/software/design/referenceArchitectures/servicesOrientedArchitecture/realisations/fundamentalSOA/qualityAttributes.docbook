<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Quality attributes assessment of fundamental SOA</title>
  
  <indexterm>
    <primary>SOA</primary>
    <secondary>fundamental</secondary>
    <tertiary>quality attributes</tertiary>
  </indexterm>
  
  <para>
    An implementation based on SOA is likely to have some inherent
    architectural qualities. Because SOA does not host the actual
    somponents realising services, however, many other qualities are directly
    dependent on the type of container in which services are hosted.
  </para>
  
  <section>
    <title>Integrability</title>
    <para>
      SOA applies virtually all the common strategies that make a system
      more suitable to integrate with others (a common messaging protocol,
      contracts-based design, naming service, ...). This is probably the
      strongest quality of any SOA-bases system.
    </para>
  </section>
  
  <section>
    <title>Flexibility</title>
    <para>
      Though the ultimately chosen container and programming language may
      limit the flexibility of individual services, SOA greatly increases 
      the flexibility of the overall system by hiding implementation
      changes in the individual service realisations from each other.
      If a naming service and broker(s) are used, this would include
      location changes.
    </para>
    <para>
      Because SOA promotes the publishing of small, independent services
      that are re-usable throughout te organisation, and across
      organisations, overall flexibility (ability to introduce new use
      cases) is also improved.
    </para>
  </section>
  
  <section>
    <title>Scalability</title>
    <para>
      Though ultimately dependent on individual SOA frameworks, SOA
      fosters a very scalable system by hiding implementation
      details. Load balancing / clustering could easily be employed,
      and SOA frameworks can perform object pooling (such as with
      EJB) for individual services.
    </para>
  </section>
  
  <section>
    <title>Reliability</title>
    <para>
      Reliability is a two-edged sword for fundamental SOA. At an
      infrastructure level, services could be very reliable. On the
      other hand, any form of reliability required in the business
      processes (such as transactions support) is not explicitly catered
      for, and would have to be manually implemented by developers.
    </para>
  </section>
    
</section>    