<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Messages</title>
  
  <indexterm>
    <primary>SOA</primary>
    <secondary>fundamental</secondary>
    <tertiary>messages</tertiary>
  </indexterm>
  
  <para>
    In fundamental SOA, messages (request or response) are simply XML instances (representing
    objects of arbitrary design, specified through XML schema) wrapped
    within a SOAP envelope.
  </para>
  
  <section>
    <title>Message exchange patterns</title>
    <para>
      For each operation in the WSDL (service contract), the pattern
      through which messages are to be exchanged to make use of the
      service are listed. Eight message exchange patterns (which indicate
      the <emphasis>calling semantics</emphasis> of the service) are
      officially supported, and the ones which correspond to the
      first-generation web services have also been re-named.
    </para>
    <para>
      Until WSDL 2 becomes widely used, it remains to be seen how
      important the additional message exchange patterns will be to SOA,
      but it does create a richer platform for communication.
    </para>
    
    <section>
      <title>in-out</title>
      <para>
        A standard synchronous message exchange in which the requestor
        sends a request, and awaits a response (or a fault).
      </para>
    </section>
    
    <section>
      <title>out-in</title>
      <para>
        The service provider initiates the exchange by sending the
        request to the client, and then awaits a response (or a fault).
      </para>
    </section>
    
    <section>
      <title>in-only</title>
      <para>
        An asynchronous exchange, where the requester sends a message to
        the service, and does not expect a response or fault message
        reply.
      </para>
    </section>
    
    <section>
      <title>out-only</title>
      <para>
        The reverse of the <emphasis>in-only</emphasis> pattern, used
        primarily for event notification.
      </para>
    </section>
    
    <section>
      <title>robust in-only</title>
      <para>
        A one-way message to the service, but with the option of
        the service raising a fault message.
      </para>
    </section>
    
    <section>
      <title>robust out-only</title>
      <para>
        Similar to <emphasis>out-only</emphasis>, used for
        event notification, but with the option of the event
        receiver (the client) raising a fault.
      </para>
    </section>
    
    <section>
      <title>in-optional-out</title>
      <para>
        Similar to <emphasis>in-out</emphasis> (synchronous message
        exchange) but the delivery of the response message (or fault) 
        being optional, and should therefor not be expected by clients.
      </para>
    </section>
    
    <section>
      <title>out-optional-in</title>
      <para>
        The reverse of the <emphasis>in-optional-out</emphasis>
        exchange, where the incoming message or fault (from the client)
        is optional.
      </para>
    </section>
    
  </section>
    
</section>    