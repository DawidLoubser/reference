<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.concepts.architecture.referenceArchitectures.servicesOriented.esb.architecture">

  <title>ESB Architecture</title>
  <para>
    An ESB provides a light-weight architecture for deploying and integrating services
    across an organization.
  </para>
  
  <section>
      <title>The services bus</title>
      <para>
      An ESB architecture revolves around a services bus, to which services are published (via their contracts).
      These services may either be local to the infrastructure, or remote (such as hosted by a business partner) -
      both cases are treated identically by the ESB. The services bus is responsible for routing messages between these
      services.
    </para>
    
      <figure xml:id="resources.information.concepts.architecture.referenceArchitectures.servicesOriented.esb.servicesBus_fig">
         <title>An ESB architecture revolves around a services bus</title>
         <mediaobject>
            <imageobject>
               <imagedata fileref="esbArchitecture.png"/>
            </imageobject>
         </mediaobject>
      </figure>
  </section>
  
  
  <section>
      <title>Distributed services architecture</title>
      <para>
      The ESB as single entity is purely virtual: it could span the organization, with services deployed across a potentially
      large number of co-operating hosts. 
    </para>
    
      <section>
         <title>Service containers</title>
         <para>
        Nodes on the services bus host service containers (or service hosts), and services are deployed to these.
        As soon as a service is deployed in a container, it is immediately <emphasis>available across the services 
        bus</emphasis>. Service containers may either host the services themselves, or merely proxies to external
        services.
      </para>
      
         <section>
            <title>Managing service containers</title>
            <para>
          Service containers are usually managed through JMX (the Java Management Extension API)
          and/or other management tools which may be specific to the ESB provider.
        </para>
         </section>
      </section>
    
      <section>
         <title>Service replication</title>
         <para>
        A service can be deployed across a number of services containers, <abbrev>i.e.</abbrev>
        across a number of physical nodes. This architecture aims to facilitate saleability and reliability
         (fail-over safety).      
      </para>
      </section>
  </section>
  
</section>