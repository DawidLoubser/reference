<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Integration between layers</title>
    <para>
        <indexterm><primary>integration</primary><secondary>between layers</secondary></indexterm>
        The integration choices will be largely driven by the 
        <itemizedlist>
            <listitem><para>
                level of decoupling required between the layers,        
                <indexterm><primary>decoupling</primary><secondary>between layers</secondary></indexterm>
            </para></listitem>
            <listitem><para>
                the scalability and performance requirements,
                <indexterm><primary>scalability</primary></indexterm>
                <indexterm><primary>performance</primary></indexterm>
            </para></listitem>
            <listitem><para>
                security, and
                <indexterm><primary>security</primary></indexterm>
            </para></listitem>
            <listitem><para>
                development costs.
                <indexterm><primary>cost</primary><secondary>development</secondary></indexterm>
            </para></listitem>
        </itemizedlist>
    </para>
    
    <section>
        <title>Using web services to integrate between the presentation and services layers</title>
        <para>
            <indexterm><primary>web services</primary></indexterm>
            One can use web services for the integration between the presentation and services layers, irrespective of
            whether one uses a thick or thin client. The advantages include
            <itemizedlist>
                <listitem><para>
                    low development costs as the integration layer can be virtually autogenerated,
                </para></listitem>
                <listitem><para>
                    the web services layer can not only be used by various presentation layers, but automatically also
                    facilitates system-to-system. security can still be effectively handled,
                </para></listitem>
                <listitem><para>
                    web services is a well supported public standard,
                </para></listitem>
                <listitem><para>
                    automatic object-XML marshalling and de-marshalling,
                </para></listitem>
                <listitem><para>
                    security, transactions, ..., are all supported by this framework,
                    <indexterm><primary>security</primary></indexterm>
                    <indexterm><primary>transactions</primary></indexterm>
                </para></listitem>
            </itemizedlist>
        </para>
        <para>
            The disadvantages of web services lie mainly in message sizes and potentially in marshalling and demarshalling overheads.
            The former can be partially addressed by message compression, but may remain and issue. The marshalling/demarshalling
            in XML can be done reasonably efficiently due to the XML structure and the availability of efficient XML parses.
        </para>
    </section>
    
    <section>
        <title>Co-hosting the services and domain objects layers</title>
        <para>
            <indexterm><primary>layers</primary><secondary>co-hosting</secondary></indexterm>
            The services/business processes and doain objects layers are commonly co-hosted. In such cases
            one usually uses object references or pointers for the integration between these layers.
        </para>
    </section>    
</section>
    