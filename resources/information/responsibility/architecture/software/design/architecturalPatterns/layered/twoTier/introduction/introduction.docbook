<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Introduction</title>
    <para>
        <indexterm><primary>two-tier</primary></indexterm>
        <indexterm><primary>client-server</primary></indexterm>
        <indexterm><primary>monolithic system</primary></indexterm>
        <indexterm><primary>mainframe</primary></indexterm>
        Prior to two-tier or client-server based architectures, enterprise systems were largely monolithic
        mainframe based systems which supported a limited number of concurrent users. Furthermore
        these systems were complex and difficult to maintain. 
    </para>
    <para>
        Client-server systems emerged in the second half of the 1980's after the widespread introduction of personal computers and
        the advances made in networking and relational database technologies. The initial aims were to
        <itemizedlist>
            <listitem><para>
                improve scalability (from 10-20 concurrent users supported by monolithic systems to around 100
                <indexterm><primary>monolithic system</primary></indexterm>
                concurrent users with an associated increase in rate of transaction throughput),
                <indexterm><primary>scalability</primary><secondary>in client-server</secondary></indexterm>
                <indexterm><primary>throughput</primary><secondary>in client-server</secondary></indexterm>
            </para></listitem>
            <listitem><para>
                increase usability by <indexterm><primary>usability</primary></indexterm>
                providing user-friendly forms-based interfaces hosted on the client side (on the personal computers),
            </para></listitem>
            <listitem><para>
                increase security by encapsulating all sensitive information on the server, 
                <indexterm><primary>security</primary><secondary>in client-server</secondary></indexterm>
            </para></listitem>
            <listitem><para>
                and to increase flexibility by allowing data to be reliably shared across clients.
                <indexterm><primary>flexibility</primary><secondary>in client-server</secondary></indexterm>
            </para></listitem>
        </itemizedlist>        
    </para>
    <para>
        <indexterm><primary>scalability</primary><secondary>in client-server</secondary></indexterm>
        <indexterm><primary>database</primary><secondary>server</secondary></indexterm>
        The replacement of file servers by database servers resulted in a significant increase in scalability.
        This was due to query results instead of entire files being transferred over the network.
        <indexterm><primary>file</primary><secondary>server</secondary></indexterm>
    </para>
    
</section>    