<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-4-4 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>
        Skills requirements for software architects
        <indexterm>
            <primary>software architecture</primary>
            <secondary>skills requirements for</secondary>
        </indexterm>
    </title>

    <para>
        Software architects need to have a very wide skills set as well as quite extensive experience in
        software trechnologies. Furthermore, the domain of software technologies evolves quite rapidly
        and softeware architects need to remain up-to-date with the benefits and risks of newer technologies.
    </para>
    <para>
        In addition to the common skills required from architects in general, 
        software architects also need to  
        <itemizedlist>
            <listitem><para>
                have an understanding of model driven development, 
                <indexterm>
                    <primary>model driven development</primary>
                    <see>MDD</see>
                </indexterm>
                commonly used development processes and
                architecture in the contect of these,
            </para></listitem>
            <listitem><para>
                understand and be able to trade off quality requirements,
                <indexterm><primary>quality requirements</primary><secondary>trade-off</secondary></indexterm>
            </para></listitem>
            <listitem><para>
                have a solid understanding of widely used architectural patterns and strategies, 
                <indexterm><primary>architectural patterns</primary></indexterm>
                <indexterm><primary>architectural strategies</primary></indexterm>
                their strengths and
                weaknesses and how they can be effectively combined to define a conceptual software architecture,
                <indexterm><primary>architecture</primary><secondary>conceptual</secondary></indexterm>
                <indexterm><primary>conceptual architecture</primary>
                    <see>
                        <indexterm><primary>architecture</primary><secondary>conceptual</secondary></indexterm>
                    </see>
                </indexterm>
            </para></listitem>
            <listitem><para>
                 have a solid understanding of commonly used reference architectures and frameworks,
                 <indexterm><primary>reference architecture</primary></indexterm>
            </para></listitem>
            <listitem><para>
                have an understanding of applicable development languages, 
                <indexterm><primary>development language</primary></indexterm>
                platforms,<indexterm><primary>platform</primary></indexterm> 
                application servers, <indexterm><primary>application server</primary></indexterm>
                integration,<indexterm><primary>integration</primary></indexterm> 
                data <indexterm><primary>data</primary><secondary>technologies</secondary></indexterm>
                and persistence technologies, <indexterm><primary>persistence</primary><secondary>technologies</secondary></indexterm>
                their benefits and risks,
            </para></listitem>
            <listitem><para>
                be able to effectively document a software architecture 
                <indexterm>
                    <primary>software architecture</primary>
                    <secondary>documenting</secondary>
                </indexterm>
                and to communicate the architecture through
                to the stake holders and the development team, and
            </para></listitem>
            <listitem><para>
                be able to validate whether an architecture 
                <indexterm>
                    <primary>architecture</primary>
                    <secondary>validation</secondary>
                </indexterm>
                will be able to fulfill the stake holder requirements over the
                life expectancy of the software system.
            </para></listitem>
        </itemizedlist>
     </para>

</section>
