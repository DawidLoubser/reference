<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-4-4 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>
        Definition of software architecture
        <indexterm>
            <primary>software architecture</primary>
            <secondary>definition of</secondary>
        </indexterm>
    </title>


    <para> 
        The architecture of a software system refers to the fundamental organization of the core
        software components, 
        <indexterm><primary>system components</primary></indexterm>
        their responsibilities
        <indexterm><primary>responsibilities</primary></indexterm>
        and the integration <indexterm><primary>integration</primary></indexterm>between them. It specifies
        strategies used to realize quality requirements 
        <indexterm><primary>quality requirements</primary></indexterm>
        like scalability, <indexterm><primary>scalability</primary></indexterm>
        performance,<indexterm><primary>performance</primary></indexterm> 
        reliability <indexterm><primary>reliability</primary></indexterm>
        or security. <indexterm><primary>security</primary></indexterm>
        Any use case deployed within the architecture should be realized with the
        qualities as provided by the architecture. 
    </para>
    <para> 
        The responsibilities of the architectural components are not use case or service
        specific. These are higher level responsibilities which are required across use cases
        deployed within the software architecture. 
    </para>

</section>
