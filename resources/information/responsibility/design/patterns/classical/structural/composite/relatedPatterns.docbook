<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.concepts.design.patterns.classical.structural.composite.relatedPatterns">

  <title>Related patterns</title>
  <para>
      <itemizedlist>
         <listitem>
            <formalpara>
               <title>The decorator pattern</title>
               <para>
        The decorator pattern is often used instead of the associative composite pattern.  It
        facilitates the step-for-step decoration of a service with further responsibilities.
      </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>Chain of responsibilities</title>
               <para>
        This is another pattern often used when further responsibilities need to be added
        on the fly.
      </para>   
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>The Visitor pattern</title>
               <para>
        The visitor pattern is used if further polymorphic services are to be added externally 
        to a class hierarchy.
      </para>
            </formalpara>
         </listitem>
         <listitem>
            <formalpara>
               <title>Iterator</title>
               <para>
        Iterators are commonly used by containers to traverse the component collection.
      </para>
            </formalpara>
         </listitem>
      </itemizedlist>
  </para>
</section>