<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.concepts.design.patterns.classical.structural.bridge.solution">

  <title>Solution</title>
  <para>
    Encapsulate the abstraction layer in a class which provides the generic client-oriented
    services and maps these onto an implementation domain whose services is defined in
    an interface realized by concrete classes from the implementation domain.
  </para>

  <section>
      <title>Responsibility allocation</title>
      <para>
      The abstract collaboration shown in
      the following diagram illustrates the responsibilities of the role players of the bridge pattern.
    </para>  
    
      <figure xml:id="resources.information.concepts.design.patterns.classical.structural.bridge.responsibilityAllocation_fig">
         <title>The responsibilities of the role players of the bridge pattern</title>
         <mediaobject>
            <imageobject>
               <imagedata fileref="responsibilityAllocation.jpg"/>
            </imageobject>
         </mediaobject>
      </figure>
    
  </section>
  
  <section>
      <title>Structure</title>
      <para>
      The bridge pattern decouples clients from an implementation domain via an abstraction
      layer. The abstraction and implementation layers may be refined independently through 
      specialization (<abbrev>e.g.</abbrev> sub classing).
    </para>
  
      <figure xml:id="resources.information.concepts.design.patterns.classical.structural.bridge.structure_fig">
         <title>
         Structure of the bridge pattern. 
      </title>
         <mediaobject>
            <imageobject>
               <imagedata fileref="structure.jpg"/>
            </imageobject>
         </mediaobject>
      </figure>
  </section>
  
</section>