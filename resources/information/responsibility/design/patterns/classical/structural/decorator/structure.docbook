<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.concepts.design.patterns.classical.structural.decorator.structure">

  <title>Structure</title>
  <para>
    The decorator
    <itemizedlist>
        <listitem>
            <para>
               <emphasis>is a</emphasis> specialisation of the decorated component facilitating
          substitutability.
        </para>
         </listitem>
        <listitem>
            <para>
               <emphasis>has the decorated component</emphasis>, <abbrev>i.e.</abbrev> the
          decorated component is contained facilitating run-time plug-ins.
        </para>
         </listitem>
      </itemizedlist>
    The structure is shown
    in the following picture:

    <note>
         <para>
        The <quote>is a</quote> (specialisation) relationship is used solely for facilitating
        <emphasis>substitutability</emphasis> and not for either
        <itemizedlist>
               <listitem>
                  <para>inheritance or to</para>
               </listitem>
               <listitem>
                  <para>
            delegate the service request up the specialisation hierarchy as is commonly done.
          </para>
               </listitem>
            </itemizedlist>
        Instead, the service request is passed up the containment hierarchy.
      </para>
      </note>
  </para>
  
  <figure xml:id="resources.information.concepts.design.patterns.classical.structural.decorator.decoratorStructure_fig">
      <title>
      Structure of the decorator pattern. 
    </title>
      <mediaobject>
         <imageobject>
            <imagedata fileref="decoratorStructure.jpg"/>
         </imageobject>
      </mediaobject>
  </figure>
  
  <para>
    The abstract collaboration shown in
    the following picture shows the responsibilities of the role players of the decorator pattern.
  </para>  

  <figure xml:id="resources.information.concepts.design.patterns.classical.structural.decorator.abstractCollaboration_fig">
      <title>The responsibilities of the role players of the decorator pattern</title>
      <mediaobject>
         <imageobject>
            <imagedata fileref="abstractCollaboration.jpg"/>
         </imageobject>
      </mediaobject>
  </figure>
  
  <para>
    The structure of the decorator pattern is very similar to that of the composite pattern except
    that
    <itemizedlist>
         <listitem>
            <para>
        the decorator has only one component it decorates and  
      </para>
         </listitem>
         <listitem>
            <para>
        the decorator provides the same service as the component it decorates and
        in its implementation it
        <orderedlist>
                  <listitem>
                     <para>
            Calls the corresponding service of the object it decorates using the aggregation
            relationship as service request path.
          </para>
                  </listitem>
                  <listitem>
                     <para>
            After the decorated component has realised the service up to its level of 
            responsibility the decorator adds further responsibilities.
          </para>
                  </listitem>
               </orderedlist>
            </para>
         </listitem>
      </itemizedlist>
  </para>
</section>