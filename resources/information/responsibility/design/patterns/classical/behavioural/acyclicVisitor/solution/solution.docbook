<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Solution</title>
    <para> 
    </para>
    
    <section>
        <title>Responsibility allocation</title>
        <para>
            The abstract collaboration
            shows the responsibilities of the role players of the acyclic visitor pattern.
        </para>  
        
        <figure>
            <title>The responsibilities of the role players of the acyclic visitor pattern</title>
            <mediaobject><imageobject>
                <imagedata fileref="responsibilityAllocation.jpg"/>
            </imageobject></mediaobject>
        </figure>        
        
    </section>
    
    <section>
        <title>Structure</title>
        <para>
            In the acyclic visitor pattern the visitor is no longer  dependent on the entire element hierarchy.
            It is simply an empty interface which introduces the concept of a visitor. Note that dropping
            the dependency between <literal>Visitor</literal> and 
            <literal>Element</literal> removes the cyclic dependency we had in the
            classical visitor pattern.
        </para>
        <para>
            One then introduces specialized visitor interfaces for each element being visited.
            Concrete visitors implement those visitor interfaces which correspond to the elements they
            intend to visit.
        </para>
        
        
        <figure>
            <title>Structure of the acyclic visitor pattern. </title>
            <mediaobject><imageobject>
                <imagedata fileref="structure.jpg"/>
            </imageobject></mediaobject>
        </figure>        
        
    </section>
    
</section>
