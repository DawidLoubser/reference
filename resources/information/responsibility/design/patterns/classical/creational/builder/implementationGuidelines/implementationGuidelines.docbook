<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Implementation guidelines</title>
    <para>
        The implementation of the builder pattern is for object-oriented languages a straight-forward 
        mapping of the UML diagrams onto code. 
        <itemizedlist>
            <listitem><formalpara>
                <title>Should Builder be an interface or an abstract class?</title>
                <para>
                    We would recommend to always have the contract for the builder represented by an interface.
                    You could use, in addition to this, an abstract class to encapsulate certain commonalities 
                    across some of the concrete builders.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>The builder interface is determined by the source domain</title>
                <para>
                    It is important that the <literal>Builder</literal> interface design is not
                    driven by the requirements of a particular builder constructing a specific realization of
                    a product. Instead the <literal>Builder</literal> should specify services as
                    required by the source domain, <abbrev>i.e.</abbrev> as required by the 
                    <literal>Director</literal>.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Products may have little in common</title>
                <para>
                    The different products produced by different builders may, from a user perspective, have
                    have at times only very little in common and as such the product interface may specify very 
                    few functionalities, perhaps even only the ability to obtain a streamable byte representation
                    of the product.
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>
</section>
