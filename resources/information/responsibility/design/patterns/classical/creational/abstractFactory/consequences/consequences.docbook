<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Consequences</title>
    <para>
        <itemizedlist>
            <listitem><para>
                The Abstract Factory pattern provides a simple mechanism to <emphasis>exchange one
                    family</emphasis> of classes with another.
            </para></listitem>
            <listitem><para>
                Clients are <emphasis>decoupled from the concrete classes</emphasis> they are using.
            </para></listitem>
            <listitem><para>
                <emphasis>Consistency among different products</emphasis> supporting a particular 
                application domain is enforced.
            </para></listitem>
            <listitem><para>
                Changes to the way in which products are created (<abbrev>i.e.</abbrev> changes 
                to constructor arguments) have to be rippled through the abstract factory as well as 
                all concrete factory implementations.
            </para></listitem>
            <listitem><para>
                <emphasis>Extending the product range is cumbersome</emphasis> because the 
                product must be added to the abstract factory as well as to each concrete factory.
            </para></listitem>
            <listitem><para>
                The <emphasis>factories may become very complex</emphasis>.
            </para></listitem>
        </itemizedlist>
    </para>
</section>
