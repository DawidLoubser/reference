<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Example applications</title>
    <para>
        The abstract factory has very wide applicability and is used particularly when one wants to
        abstract from a concrete realization of a framework in order to be able to plug in
        different realizations of that framework.
    </para>
    
    <section>  
        <title>Switching between presentation layers</title>
        <para>
            One can use the abstract factory pattern to abstract from any concrete realization
            of a presentation layer. For example between Java Swing, AWT, or J2ME-based
            presentation layers or between presentation layers for X-Windows, Windows and 
            Apple-Mac platforms. 
        </para>
        <para>
            For example, the factory could contain a service for creating a presentation of 
            an order. In the case of Swing or AWT realizations, the presentation may
            potentially be a single screen. In the case of a J2ME presentation running on a
            mobile phone the presentation may span multiple screens with navigation
            functionality across them. Client applications are abstracted from these, leaving
            the presentation layer functionality (like navigation) to the realization of the
            presentation layer component.
        </para>
    </section>  
    
    <section>
        <title>Switching between persistence mappers</title>
        <para>
            In a similar way the abstract factory pattern enables one to abstract from the
            concrete representation of a persistence mapper. One could switch between
            an XML-based persistence layer hosted, say, in a flat file to a object-relational
            mapping layer persisting the object structure onto a relational database to a
            record-store based persistence layer available on some PDAs without changing
            the business logic layer or any other aspects of the application.
        </para>
    </section>
    
    <section>
        <title>XML parsers</title>
        <para>
            The <emphasis>Java API for XML-based Processing</emphasis>, JAXP, uses an
            abstract factory to abstract from different realizations of an XML parser.
        </para>
    </section>
    
</section>
