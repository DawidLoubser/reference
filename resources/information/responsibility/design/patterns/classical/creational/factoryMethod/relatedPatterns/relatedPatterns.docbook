<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Related patterns</title>
    <para>
        <itemizedlist>
            <listitem><formalpara>
                <title>Singleton</title>
                <para>
                    The factory method may return a singleton.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Abstract factory</title>
                <para>
                    Abstract factories are often implemented with factory methods. Here each family of
                    classes provides its own concrete realization of a concept and the responsibility for
                    returning a concept is delegated to a factory method for that concept. For example, 
                    each concrete presentation layer framework (<abbrev>e.g.</abbrev> 
                    <emphasis>Swing</emphasis>, <emphasis>AWT</emphasis> or 
                    <emphasis>MIDP</emphasis>) provides its own presentation of an order obtained
                    from a factory hosted by the factory of that framework.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Template method</title>
                <para>
                    Template methods define high-level work flows whose concrete steps may be realized
                    in different ways. The components to whom the realization of these concrete steps is
                    delegated are often created via template methods.
                </para>
            </formalpara></listitem>  
        </itemizedlist>
    </para>
</section>
