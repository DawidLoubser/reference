<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Solution</title>
    <para>
        The solution proposed by the singleton pattern is that the meta-class defines:
        <orderedlist>
            <listitem><para>
                one or more constructors, all with access restricted to private access, and
            </para></listitem>
            <listitem><para>
                a service (for example, <literal>getInstance()</literal>) which
                <itemizedlist>
                    <listitem><para>
                        provides users with a handle to the one and only instance of the class, and
                    </para></listitem>
                    <listitem><para>
                        upon receiving the first request for an instance, creates that instance.
                    </para></listitem>
                </itemizedlist>
            </para></listitem>
        </orderedlist>
    </para>
    
    <section>
        <title>Structure</title>
        <para>
            The structure is shown in the following UML class diagram:
        </para>
        
        
        <figure>
            <title>The structure for the singleton pattern</title>
            <mediaobject><imageobject>
                <imagedata fileref="structure.jpg"/>
            </imageobject></mediaobject>
        </figure>
        
        <para>
            Note that 
            <itemizedlist>
                <listitem><para>
                    the constructor has been declared private,  
                </para></listitem>
                <listitem><para>
                    the meta-class maintains a private reference variable to the instance,  and that
                </para></listitem>
                <listitem><para>
                    the mata-class provides a <literal>getInstance()</literal> service
                    which returns a handle to the one and only instance of the class.
                </para></listitem>
            </itemizedlist>
        </para>
    </section>
    
    <section>
        <title>Dynamics</title>
        <para>
            The dynamics of the singleton pattern is shown in the following UML activity diagram:
        </para>
        
        <figure>
            <title>The synamics of the singleton pattern</title>
            <mediaobject><imageobject>
                <imagedata fileref="dynamics.jpg"/>
            </imageobject></mediaobject>
        </figure>
        
        <para>
            The meta-class service, <literal>getInstance()</literal>, creates the instance
            upon receiving the first request for a handle to the instance. It maintains a handle to the
            instance and on subsequent requests simply returns a handle to that instance.
        </para>
        
    </section>
    
    
</section>
