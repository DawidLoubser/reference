<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Pattern identification</title>
    <para>
        
    </para>
    <table>
        <title>Common uses of creational patterns</title>
        <tgroup cols="3">
            <thead>
                <row>
                    <entry><para>Requirement</para></entry>
                    <entry><para>Pattern candidate(s)</para></entry>
                    <entry><para>Examples</para></entry>
                </row>
            </thead>
            
            <tbody>
                <row>
                    <entry><para>Require single instance of class</para></entry>
                    <entry><para>Singleton, Double-checked locking pattern</para></entry>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>
                                Single entry resources:
                                <itemizedlist>
                                    <listitem><para>Thread schedulers</para></listitem>
                                    <listitem><para>database connection pools</para></listitem>
                                </itemizedlist>
                            </para></listitem>
                            <listitem><para>Stateless objects.</para></listitem>
                            <listitem><para>Object factories.</para></listitem>
                        </itemizedlist>
                    </para></entry>
                </row>
                
                <row>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>
                                Specialized classes need to deliver their own realization of a product or service provider.
                            </para></listitem>
                            <listitem><para>
                                You want to hide the concrete low-level service providers from clients, enabling 
                                higher-level service providers to change the lower level service provider they provide
                                to clients.
                            </para></listitem>
                        </itemizedlist>
                    </para></entry>
                    <entry><para>Factory method</para></entry>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>Iterators for collection frameworks.</para></listitem>
                            <listitem><para>Used in abstract factory implementations.</para></listitem>
                            <listitem><para>Used in implementations part constructions for builders.</para></listitem>
                        </itemizedlist>
                    </para></entry>
                </row>
                
                <row>
                    <entry><para>
                        Need to be able to switch between class libraries (<abbrev>e.g.</abbrev>
                        between frameworks).
                    </para></entry>
                    <entry><para>Abstract Factory</para></entry>
                    <entry><para>
                        Switching between
                        <itemizedlist>
                            <listitem><para>presentation layers,</para></listitem>
                            <listitem><para>persistence layers,</para></listitem>
                            <listitem><para>communication protocols,</para></listitem>
                            <listitem><para>parser implementation, ...</para></listitem>
                        </itemizedlist>
                    </para></entry>
                </row>
                
                <row>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>
                                You need to constuct different realizations of an object from a source domain.
                            </para></listitem>
                            <listitem><para>
                                You want to manage the construction procecss at a higher, more abstract level.
                            </para></listitem>
                        </itemizedlist>
                    </para></entry>
                    <entry><para>Builder</para></entry>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>
                                Parsers.
                            </para></listitem>
                            <listitem><para>
                                Information renderers.
                            </para></listitem>
                            <listitem><para>
                                Code generators.  
                            </para></listitem>
                        </itemizedlist>
                    </para></entry>
                </row>
                
                <row>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>
                                Clients should be able to select the object they want to create.
                            </para></listitem>
                            <listitem><para>
                                You want to enable clients to register and unregister new objects at run-time.
                            </para></listitem>
                            <listitem><para>
                                The default state of objects should be managed at run-time.  
                            </para></listitem>
                        </itemizedlist>
                    </para></entry>
                    <entry><para>Prototype</para></entry>
                    <entry><para>
                        <itemizedlist>
                            <listitem><para>Graphical design applications.</para></listitem>
                            <listitem><para>Prototype based programming languages.</para></listitem>
                            <listitem><para>Selection of pricing or risk analysis algorithms.</para></listitem>
                        </itemizedlist>
                    </para></entry>
                </row>
            </tbody>
        </tgroup>
        
    </table>
      
</section>
    