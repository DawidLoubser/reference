<?xml version="1.0" encoding="UTF-8"?>
<!-- author fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>The factory method pattern</title>
    <para>
        The factory method pattern
        <itemizedlist>
            <listitem><para>
                provides a polymorphic constructor, and
            </para></listitem>
            <listitem><para>
                delegates the responsibility of deciding which object to create to an object which is in a better position
                to make that decision than the object which requires the object to be created.
            </para></listitem>
        </itemizedlist>
    </para>
    <para>
        The factory method pattern has been, for example, used to 
        <itemizedlist>
            <listitem><para>
                decouple from concrete implementations of interfaces and concrete
                sub-classes (e.g. from concrete iterators), and        
            </para></listitem>
            <listitem><para>
                generally when decoupling from frameworks via
                abstract factories.       
            </para></listitem>
        </itemizedlist>
         
    </para>
</section>    
