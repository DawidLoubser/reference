<?xml version="1.0" encoding="UTF-8"?>
<!-- author fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Design Patterns</title>
    <para>
        Design patterns generally aim to improve design quality through the use of generic, re-usable design 
        elements. Many design elements focus on reducing complexity and increasing the flexibility of a design.
        Most design patterns take particular care in separating concerns and improving the responsibility localization
        of a design. This generally also results in increased reusability and improved testability of design elements 
        as well as improved understandability and maintainability.
    </para>
    <para>
        Erich Gamma et al. have grouped design patterns into the following groups:
        <itemizedlist>
            <listitem><formalpara>
                <title>Creational patterns</title>
                <para>
                    Creational patterns aim to reduce the complexity and improve the flexibility of object
                    creation processes. They generally factor out the object creation from the class itself,
                    moving away from using constructors directly to using some form of a factory. Examples
                    include the factory method, builder, abstract factory and prototype patterns.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Structural patterns</title>
                <para>
                    Structural patterns generally simplify and improve the flexibility of a design through their
                    structure. This typically involves interesting use of object-oriented (UML)
                    relationships and relationship groups. Well known examples of structural patterns include
                    the composite, decorator, adapter, flyweight patterns.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Behavioural patterns</title>
                <para>
                    Behavioural patterns reduce complexity and improve flexibility through certain activities or
                    activity flows. These patterns generally put particular strong emphasis on separation of 
                    concerns. Well known examples of behavioural patterns include the
                    state, chain of responsibililty, command, strategy, observer and mediator patterns.
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>
</section>    