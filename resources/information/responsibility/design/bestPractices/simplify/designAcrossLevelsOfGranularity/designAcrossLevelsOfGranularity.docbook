<?xml version="1.0" encoding="UTF-8"?>
<!-- author fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Manage levels of granularity</title>
    <para>
        This best practice for design has been advocated since the very early days through aproaches
        like "work breakdown structures" and recursive decomposition of services or functions.
    </para>
  
      <section>
          <title>Analysis and design across levels of granularity</title>
          <para>
              It is important that one also does not follow a waterfall approach even within the develoment of a particular use
              case. Instead one should perform requirements analysis and design across levels of granularity.
          </para>
          <para>
              Often the requirements analysis across different levels of granularity need to be done by domain
              specialists from different fields of specialization.
          </para>
          <para>
              For example, the complete process of processing a claim
              would have to consider the details around assessing the claims coverage, claim valuation, fraud detection,
              payments, and so on. It is unlikely that a single analyst would have sufficient knowledge across these disparate
              domains. The analyst from claims would most probably be able to provide the high level requirements around the
              claims process whilst analysts from policies, legal services, finance and valuations could potentially fill in
              a lot of the details. around lower level granularity services from which the higher level claims processing
              service is assembled. 
          </para>
          <para>
              Without decomposing the requirements and the resulting process across levels of granularity, it is 
              difficult for analysts across the organization to collaborate in providing complete requirements and
              in ultimately designing the complete business process.
          </para>
      </section>
  
      <section>
          <title>Structure and processes across levels of granularity</title>
          <para>
              It is important to manage both, structure and services/processes across levels of granularity.
              Either will become excessively complex and difficult to understand if not recursively decomposed.
          </para>
      </section>
    
    <section>
        <title>URDAD provides framework for fixing levels of granularity in a repeatable way</title>
        <para>
            One of the challanges of design is to have a repeatable engineering process which can
            produce consistent quality in a repeatable way. This includes fixing the levels of granularity
            in a repeatable way. 
        </para>
        <para>
            URDAD aims to  achieve this through the combinations of two mechanisms:
            <itemizedlist>
                <listitem><para>
                    In the functional requirements for a use case, the first level of granularity may only contain the direct
                    functional requirements, not the functional requirements of functional requiremens.
                </para></listitem>
                <listitem><para>
                    The analyst/designer is requested to check whether any of the functional requirements can be combined
                   into a single requirement for a cohesive service, and if they can be, then to do so.
                </para></listitem>
            </itemizedlist>
        </para>
    </section>
</section>    