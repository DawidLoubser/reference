<?xml version="1.0" encoding="UTF-8"?>
<!-- author fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Don't pollute technology neutral design for technical reasons</title>
    <para>
        Technical aspects like 
        <itemizedlist>
            <listitem><para>
                whether you are using an object oriented or procedural programming language,        
            </para></listitem>
            <listitem><para>
                whether a language supports interfaces or services contracts,
            </para></listitem>
            <listitem><para>
                to what extend a language supports concepts like composition, aggregation, specialization, containment, ...
            </para></listitem>
            <listitem><para>
                whether the implementation domain supports polymorphism on message recipient and message parameter,
            </para></listitem>
            <listitem><para>
                whether you are using a hierarchical, relational, object-oriented or semantic persistence provider (database), and
            </para></listitem>
            <listitem><para>
                whether you are using an object, services, event oriented integration technology
            </para></listitem>
        </itemizedlist>
        should not affect your technology neurtral (e.g. object-oriented) design and deter you from using any of these concepts.
    </para>
    <para>
        Also at the lower level you might make some compromises around the direction of your queries, how you implement the
        command pattern and so on. None of these decisions should pollute the technology neutral design.
    </para>
</section>    