<?xml version="1.0" encoding="UTF-8"?>
<!-- author fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Structure from process</title>
    <para>
        Often people start designing a system by looking at the use cases, establishing some form of a 
        domain dictionary and then drawing class diagrams. In earlier days it was even common to design
        the data base structure first.
    </para>
    <para>
        Either of these are non ideal. The structure is only there to support the processes realizing the user
        services and stakeholder requirements around them. Things get a lot easier when focusing on
        formulating first the services contracts, then designing processes which realize those contracts
        and ultimately projecting out the static structure required to support those processes.
    </para>
    <para>
        If one designs structure first one faces a number of problems:
        <orderedlist>
            <listitem><para>
                It usually is less efficient as one needs to muse/infer/guess what structure is needed for
                the processes realizing the required services.
            </para></listitem>
            <listitem><para>
                One usually adds unnecessary complexity around what one thinks may be needed.
            </para></listitem>
            <listitem><para>
                It is extremely difficult to remain truly use case driven as different processes require different
                aspects of structure and domain objects.
            </para></listitem>
            <listitem><para>
                It is difficult to fix and manage levels of granularity.
            </para></listitem>
            <listitem><para>
                It usually makes traceability more difficult.
            </para></listitem>
        </orderedlist>
    </para>
</section>    