<?xml version="1.0" encoding="UTF-8"?>
<!-- author fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Decoupling design from architecture and technologies</title>
    <para>
        Technology neutral design decouples the design from the architecture and technolgies,
        enabling each of these to evolve independently and simplifying each of these.
    </para>
    
    <section>
        <title>Model-Driven Development perspective</title>
        <para>
            Model-Driven Development and MDA (the Model-Driven Architecture) in particular,
            requires that the modeling/design is done in the problem and not in
            the solution domain. The architecture and technologies are specified separately. MDD
            envisages that more and more of the implementation mapping of the domain centric, 
            technology neutral design will be automated over time.
        </para>
        <para>
            The problem domain in enterprise systems development is
            the business domain. Hence the modeling needs to be done
            in the business and not in the technology domain.            
        </para>
    </section>
    
    <section>
        <title>Maintainability</title>
        <para>
            Process design evolves with changing functional requirements, whilst architecture and technologies
            typically evolve at a slower and more discrete rate. By enforcing that the design remains
            architecture and technology neutral facilitates that the architecture and technology can evolve
            independently from the design.
        </para>
    </section>
    
    <section>
        <title>Reusability</title>
        <para>
            A technology neutral design can be reused across different technology implementations.
            For example, a deisgn could be mapped onto a Java EE, a .Net or an SOA implementation.
        </para>
    </section>
    
    <section>
        <title>Independent optimization for functionality and quality of service</title>
        <para>
            Architecture needs to provide a suitable infrastructure for realizing qualities like
            scalability, reliability, performance, security, auditability, accessibility/integrability
            and so on.
        </para>
        <para>
            The design, on the other hand,  addresses functional requirements like
            what needs to be done when, what information needs to be provided, ...
            Decoupling the design from the architecture by doing the design in a technology
            and architecture neutral way enables one to address the non-functional (quality
            of service) and functional concerns independently.
        </para>
    </section>

    <section>
        <title>Understandability</title>
        <para>
            A design which is technology specific can only be understood by people who
            understand the technologies. A technology neutral design, on the other hand,
            can be understood by specialist focusing on different technologies and by domain
            experts (e.g. business experts) who do not have a technology background.
        </para>
    </section>
</section>    