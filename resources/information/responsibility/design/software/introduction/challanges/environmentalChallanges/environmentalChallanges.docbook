<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Environmental challanges</title>
    <para>
        Software design operates between
        <itemizedlist>
            <listitem><para>
                <emphasis>business analysis</emphasis> providing the use case requirements,
            </para></listitem>
            <listitem><para>
                <emphasis>architecture</emphasis> which provides the core software infrastructure, specifies the technologies
                to be used and the deployment environment for the software,
            </para></listitem>
            <listitem><para>
                <emphasis>implementation</emphasis> which includes the developers which map the software design onto an
                implementation within the specifies architecture and technologies.
            </para></listitem>
        </itemizedlist>
    </para>
    <para>
        Many of the challanges faced by software development originate on these interfaces. These are often communication
        problems.
    </para>
    
    <section>
        <title>Requirements challanges</title>
        <para>
            Studies have shown that the majority of buds in software originate from incorrect, incomplete or misunderstood requirements.
            it can be expected that the skills increase in the business analysis domain and the increased use of UML for requirements 
            specification will slowly reduce these problems. Nevertheless, it can be expected that requirements risk will remain 
            for some time the core risk for software design.
        </para>
        <para>
            In addition to the static requirementsrisks, there are challanges around the  requirements changing. Clients typically need to
            operate in a continuously changing environment. Software design must be able to eggectively operate in an 
            environment where requirements change very frequently.
        </para>
    </section>
    
    <section>
        <title>Communication challanges</title>
        <para>
            Ultimately a desgin needs to be effectively communicated to the team responsible for its implementation. 
            This may be a team of programmers who map the deign onto an implementation in the chosen architecture
            and implementation technologies. As the model driven tools (MDA tools) mature, one can ecxpect that more and more of
            the mapping can be automated.
        </para>
    </section>
</section>    