<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-4-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Guidelines for unit testing</title>
    <para>
        When writing unit tests one should focus on testing just the provided functionality. The following are a set of rules unit tests
        should adhere to:
        <itemizedlist>
            <listitem><formalpara>
                <title>Test against functional contracts</title>
                <para>
                    Tests should be written against the public interface and should test the functional contracts.
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Write tests before the implementations</title>
                <para>
                    The tests themselves provide solid, testable requirements and will provide a lot of value to the
                    designers and developers who design and implement the classes realizing the contracts.
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Tests should be independent</title>
                <para>
                    The running of one test should not have to require another test to be run first and should not
                    prevent the concurrent running of other tests.
                </para>
            </formalpara></listitem>
            
            <listitem>
                <formalpara>
                    <title>Unit tests should not have to access the environment of the service provider</title>
                    <para>
                        Unit tests should not have to access the data base, file system or any other classes accessible by
                        the service provider. They should also not have to configure the environment of the service 
                        provider before being able to test the services offered.
                    </para>
                </formalpara>
            </listitem>
            
            <listitem>
                <formalpara>
                    <title>Unit tests should be independent of the access channel</title>
                    <para>
                        Unit tests should not contain any information about the access channel through which
                        the service provider is accessed.
                    </para>
                </formalpara>
            </listitem>
            
            <listitem><formalpara>
                <title>Unit tests should be fully automated and non-interactive </title>
                <para>
                    Unit tests should not require any user input and should be able to be executed within an automated
                    environment.
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Unit tests should not test non-functional requirements</title>
                <para>
                    Aspects like performance, reliability, scalability, security, accessibility, ... should not be tested
                    by unit tests. These should be confined to separate infrastructure/architecture tests
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Factor out data sets</title>
                <para>
                    Test data should be maintained independently from the test logic.
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Complex tests should trigger refactoring</title>
                <para>
                    Tests which are unnecessarily complex and difficult to develop should result in a refactoring
                    of the contract(s) which are being tested, as this guarantees that any client interaction with
                    the test subject will be equally cumbersome.
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Fix failing tests immediately</title>
                <para>
                    Any bug identified during unit testing should be handed over to be fixed as soon as the bug has been discovered.
                    <note><para>
                        One way of fixing the bug is to select an alternative service provider.
                    </para></note>
                </para>
            </formalpara></listitem>
            
            <listitem><formalpara>
                <title>Refactor tests too</title>
                <para>
                    Tests can be easily as complex and even more complex than the class being tested. In order to
                    keep tests maintainable, flexible and understandable, they should be frequently be refactored 
                    like all other logic.
                </para>
            </formalpara></listitem>
            
            <listitem>
                <formalpara>
                    <title>Use a testing framework</title>
                    <para>
                        Use a testing framework which can, at any stage, test all contracts realized by your system.
                        In the absence of such a framework, scripts should be written to simulate this behaviour.
                    </para>
                </formalpara>
            </listitem>
            
            <listitem><formalpara>
                <title>Keep track of test results</title>
                <para>
                   Maintain test results. This will provide valuable information around progress tracking, outstanding issues.
                   If your testing framework does not provide the ability to track results, standard lower-level infrastructure,
                   such as a version control repository, may be used to store test results over time.
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>
</section>    
    