<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>BPEL as the heart of the business process</title>
  <para>
    The vision for services oriented architecture is to enable the assembly of business
    processes from (possibly existing) services which are available across various 
    endpoints (<abbrev>e.g.</abbrev> systems). Using WS-BPEL, these business processes are executed in
    a business process execution engine - and are defined in a language well suited to
    service orchestration.
  </para>
  <para>
    But how does one specify the business process? When designing or communicating the
    business process, UML (the <emphasis>Unified Modeling Language</emphasis>) and/or 
    BPMN (the <emphasis>Business Process Modeling Notation</emphasis>) can, and should 
    be used for this.
    However, these models are typically not <emphasis>executable</emphasis>. When following
    the MDA (Model Driven Architecture), the initial UML model would be technology-neutral,
    and could be mapped onto a chosen architecture. UML is thus not really 
    suitable for specifying exactly how a business process is to be technically
    executed within a Service-Oriented Architecture.
  </para>
  <para>
    Following traditional good design principles, the abstract UML model would have to manually be
    mapped to an implementation architecture, such as Java EE. But implementing even this well-known
    mapping is labour-intensive, and requires a high level of developer skill.
  </para>
  <para>
    In the interest of improving productivity and flexibility, several vendors have thus implemented
    SOA and/or integration products which enable the rapid assembly and deployment of loosely-coupled
    workflows. However, not having a public standard for specifying how a business process is to be 
    executed within an environment (typically an enterprise services bus) resulted in the business 
    process execution specification being locked to the ESB vendor, and required that technical experts 
    learn a new language for each new tool.
  </para>
  <para>
    BPEL aims to address this problem by being a public standard, thus eliminating vendor lock-in by
    being deployable in several different products and/or environments.
  </para>
</section>
  