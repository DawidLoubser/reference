<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
xml:id="resources.information.technologies.xml.schemas.simpleObjectGraphs.simpleObjectGraphs"
         xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Simple implementation of Object Graphs</title>
    <figure xml:id="resources.information.technologies.xml.schemas.simpleObjectGraphs.partsCatalog_fig">
        <title>
            An Object graph with attributes and composition, association and
            specialization relationships.
        </title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="partsCatalog.jpg"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para> 
        The object graph above 
        depicts the structure
        of a parts catalog. Each part is identified by a code and has a name, possibly a
        description and possibly multiple assembly instructions. Furthermore, a part may be
        composed of further parts, its components. 
    </para>
    <para> 
      Every part is associated with one manufacturer and a manufacturer may be
      associated with multiple parts.
    </para>
    <para> 
      A product is a special type of part which has everything a part has but adds a
      price (an amount in a currency).
    </para>
    <para> 
      The XML schema for this design is shown below:
      <programlisting language="XML">
<xi:include parse="text" href="src/partsCatalog.xsd"/>
      </programlisting>
    </para>  
  <note>
    <para>
      The <literal>ID</literal> and <literal>IDREF</literal> data types can be used as a
      primitive key / key-reference mechanism to ensure that certain fields in the
      XML instance <quote>tie up</quote> with other fields. This mechanism is,
      however, very limited (for one, there is no scoping) and is better addressed
      with XML Schema key/key-refs.
    </para>
  </note>
    <para> 
      An example XML file which will be parsed by this schema is shown below:
      <programlisting language="XML">
<xi:include parse="text" href="src/partsCatalog.xml"/>
      </programlisting>
    </para>  
</section>
