<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Why XML?</title>
    <para>
        XML and web services have achieved virtual universal adoption in a relatively short time. What has made
        XML so compelling to the software industry? Some of the core reasons are
        <itemizedlist>
            <listitem><para>
                human readable text encoding of data together with the meta-data describing/explaining the data
                supporting different languages and specification of the language used,
            </para></listitem>
            <listitem><para>
                public standards certification of XML and a very wide range of support technologies including XML Schema,
                XSLT, DOM parsers, SOAP, WSDL, ODF (Open Document Format), Docbook, MathML, SVG, 
                XML encoding of semantic web standards like RDF  
                and many others (mainly by the W3C and OASIS),
            </para></listitem>
            <listitem><para>
                simple tree structure facilitating easy processing of data,
            </para></listitem>
            <listitem><para>
                the ability to specify and automatically validate and parse required data structures based on a published
                data structure specification (e.g. using XML schema),  (this includes automated XML-language mapping
                through technologies like JAXB, the Java Architecture for XML Binding),                
            </para></listitem>
            <listitem><para>
                the availability of data-structure aware editors as well as the ease with which XML can be edited manually, and
            </para></listitem>
            <listitem><para>
                the ability to treat XML as an object-oriented data encoding which supports concepts like composition,
                inheritance and association relationships as well as anonymous inner classes which should not be reused.
                This results in reduced impedance matching between the data technology commonly used for integration
                and the programming technologies which produce and consume the data.
            </para></listitem>
        </itemizedlist>
    </para>
</section>    