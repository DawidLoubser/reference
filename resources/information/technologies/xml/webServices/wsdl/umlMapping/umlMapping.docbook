<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xml:id="resources.information.technologies.xml.webServices.wsdl.umlMapping">

  <title>Mapping a UML-based contract to WSDL</title>
  
  <indexterm>
    <primary>WSDL</primary>
    <secondary>mapping from UML</secondary>
  </indexterm>

  <para>
    A services contract specified in UML can effectively be mapped to
    a WSDL <emphasis>abstract service description</emphasis> in a step-by-step manner.
  </para>
  
  <section>
    <title>Steps to be performed</title>
    <orderedlist>
      <listitem>
        <para>
          Introduce an XML name space which corresponds to the package (owner)
          of the interface, and create a WSDL document which targets that namespace.
        </para>
      </listitem>
      <listitem>
        <para>If any service has more than one <emphasis>input</emphasis>
        or <emphasis>output</emphasis> arguments, introduce a <emphasis>wrapper</emphasis>
          type which allows for the passing of the arguments as a single message.
        </para>
      </listitem>
      <listitem>
        <para>
          Map each of the input and output arguments of each service to an XML schema type,
          which is embedded or linked to from the WSDL document.
        </para>
      </listitem>
      <listitem>
        <para>
          For each precondition of each service, create an XML schema complex type
          which represents a <emphasis>Fault</emphasis>, which would be thrown
          if a service is refused because the precondition was not met.
        </para>
      </listitem>
      <listitem>
        <para>
          For each request, response and fault which can be exchanged between
          the client and the service, introduce a corresponding WSDL message,
          which refers to the appropriate XML schema data type.
        </para>
      </listitem>
      <listitem>
        <para>
          For the service provider interface, introduce a corresponding
          WSDL portType, containing WSDL operations for each service provided.
          Each service indicates the messages (referring to the messages above) 
          that can be exchanged, as well as
          the calling semantics (synchronous vs. asynchronous). For each
          precondition, a fault is declared.
        </para>
      </listitem>
    </orderedlist>
    <para>
      This covers the <emphasis>functional</emphasis> aspects of the WSDL document.
      All that remains is to decide on the <emphasis>binding</emphasis> (transport
      layer / protocol to be used), and most clients would likely want a
      SOAP (document/literal) binding, as prescribed by the WS-I basic profile. 
    </para>
  </section>
  
  <!-- FIXME / TODO: Complete this section!! -->
  <!-- section>
    <title>Example (Synchronous service)</title>
    <para>
      As an example of a simple synchronous service, consider the following
      services contract:
    </para>
    <figure>
      <title>Example services contract for a DJ</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="exampleServicesContract.png"/>
        </imageobject>
      </mediaobject>
    </figure 
  </section>
  -->

</section>