<?xml version="1.0" encoding="UTF-8"?>
<section xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      id="resources.information.technologies.xml.webServices.soap.faults.faults">
    
    <title>SOAP Faults</title>
    
    <para>
        SOAP <emphasis>fault messages</emphasis> are the mechanism by which SOAP applications report errors <quote>upstream</quote>, to nodes earlier in 
        the message path.
    </para>
    
    <para>
        SOAP faults are generated by receivers, either an intermediary or the ultimate receiver of a 
        message. The receiver is required to send a SOAP fault back to the sender only if the 
        <emphasis>Request/Response</emphasis> messaging mode is used. In <emphasis>One-Way</emphasis> mode, 
        the receiver should generate a fault and may store it somewhere, but it must not attempt to transmit 
        it to the sender. 
    </para>
    <para>
        SOAP faults are returned to the receiver's immediate sender. For example, if the third node in a message path 
        generates a fault, that fault message is sent to the second node in the message path and nowhere else. In other 
        words, you don't send the fault to the original sender unless it's also the immediate sender. When that sender 
        receives the fault message, it may take some action, such as undoing operations, and may send another fault further 
        upstream to the next sender if there is one.
    </para>
    <para>
        Most developers see error handling as a pretty dull subject, so it's often ignored or poorly implemented. The tendency 
        to ignore error handling is natural, but it's not wise. Things can, and often do, go 
        wrong; it's inevitable that errors will occur in the normal course of events. Because errors are fairly common, it's 
        logical that some time should be dedicated to error handling. The SOAP specification recognizes the importance of error 
        handling and dedicates a considerable amount of verbiage to addressing the issue. Even so, SOAP is not strict 
        enough to avoid interoperability problems, so the <emphasis>WS-I Basic Profile</emphasis> provides a lot more 
        guidance on the generation and processing of SOAP fault messages.
    </para>
    <para>
        A SOAP message that contains a <literal>Fault</literal> element in the <literal>Body</literal> is called a 
        <emphasis>fault message</emphasis>. A fault message is analogous to a Java exception; it's generated when 
        an error occurs. Nodes in the message path generate them when processing a request message. When an error occurs, the receiving 
        node sends a fault message back to the sender just upstream, instead of the anticipated reply message. Faults are 
        caused by improper message formatting, version mismatches, trouble processing a header, and application-specific 
        errors.
    </para>
    <para>
        When a fault message is generated, the Body of the SOAP message must contain only a single <literal>Fault</literal> element and 
        nothing else. The Fault element itself must contain a <literal>faultcode</literal> element, and a <literal>faultstring</literal> 
        element, and optionally <literal>faultactor</literal> and <literal>detail</literal> elements.
        The following is an example of a fault:
        <programlisting>
<xi:include href="src/basicExampleFault.xml" parse="text"/>
        </programlisting>
    </para>
    <para>
        Note that the <literal>Fault</literal> element and its children are part of the SOAP namespace, just as the 
        SOAP <literal>Envelope</literal> and <literal>Body</literal> elements are. Also, note that the children of the 
        Fault element weren't qualified with the soap prefix. The children of the Fault element <emphasis>may</emphasis> 
        be unqualified, according to the WS-I Basic Profile. In other words, they need not be prefixed with the 
        SOAP 1.1 namespace. Note as well that it's forbidden for the Fault element to contain any immediate child elements 
        other than <literal>faultcode</literal>, <literal>faultstring</literal>, <literal>faultactor</literal>, and 
        <literal>detail</literal>.
    </para>
    
    <xi:include href="faultCode.xdoc"/>
    <xi:include href="faultString.xdoc"/>
    <xi:include href="faultActor.xdoc"/>
    <xi:include href="detail.xdoc"/>
    
</section>
