<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    @author D.Loubser 
-->
<section xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      id="resources.information.technologies.xml.webServices.uddi.uddi">
    
    <title>UDDI (Web Services Discovery</title>
    
    <para>
        UDDI is an acronym for <emphasis>Universal Description, Discovery, and Integration</emphasis> – 
        A platform-independent, XML-based registry for businesses worldwide to list themselves on the Internet. 
        UDDI is an open industry initiative (sponsored by <emphasis>OASIS</emphasis>) enabling businesses to discover 
        each other and define how they interact over the Internet. A UDDI business registration consists of three components:
        
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>White Pages</title>
                    <para>address, contact, and known identifiers;</para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Yellow Pages</title>
                    <para>industrial categorizations based on standard taxonomies; and</para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Green Pages</title>
                    <para>technical information about services exposed by the business.</para>
                </formalpara>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        UDDI is one of the core Web Services standards. It is designed to be interrogated by using SOAP messages, and to provide 
        access to WSDL documents describing the protocol bindings and message formats required to interact with the web services 
        listed in its directory.
    </para>
    <para>
        UDDI was written in 1999/2000, at a time when the authors had a vision of a world in which consumers of Web Services would 
        be linked up with providers through a dynamic brokerage system. In this vision, anyone needing a service such as credit 
        card authentication, would go to their broker and select one supporting the desired SOAP service interface and meeting 
        other criteria. In such a world, the broker would be critical for everyone. For the consumer, trusted brokers would 
        only return reliable/trusted services, while for a service producer, getting a good placement in the brokerage would 
        be critical for effective placement.
    </para>
    <para>
        This vision has not come to pass. Instead, services tend to write custom service endpoints with custom WSDL descriptions. 
        Consumers then hard-code the URLs to their SOAP endpoints, working only with specific systems. Fault tolerance is only 
        achieved through DNS and router tricks, not through dynamic selection of available service endpoints through the brokerage.
    </para>
    <para>
        The most common place that UDDI is currently employed is inside a company (controlled environment) where it is used to 
        dynamically bind client systems to implementations. Much of the search metadata permitted in UDDI is not used for this 
        relatively simple role. UDDI can probably be cited as an example of over-prescriptive design, in which a naming system was 
        built around an entirely unproven business model —the service broker.
    </para>
    <note>
        <para>
            Since there is a distint overlap in the role of <emphasis>UDDI</emphasis>, and some parts of the (much larger and
            more ambitios) <literal>EbXML</literal> specification, and both are now under the management of the
            <emphasis>OASIS</emphasis> organisation, there are bound to be interesting developments as far as UDDI is concerned.
        </para>
    </note>
</section>
