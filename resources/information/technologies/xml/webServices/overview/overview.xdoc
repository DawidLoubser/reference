<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    @author D.Loubser 
-->
<section xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      id="resources.information.technologies.xml.webServices.overview.overview">
    
    <title>Conceptual Overview of Web Services</title>
    <para>
        Web services combine several of these key ideas:
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>Web 2.0</title>
                    <para>
                        A term often used to describe the state towards the world wide web is evolving, it
                        primarily describes the transition of systems (including web sites) from isolated 
                        <quote>information silos</quote> to deeply interlinked <emphasis>sources of content and functionality</emphasis>,
                        thus becoming a <emphasis>computing platform</emphasis> which serves both end users and other systems.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Service-Oriented Architecture</title>
                    <para>
                        Unlike traditional point-to-point architectures, SOAs comprise loosely coupled,
                        highly interoperable application services. These services integrate with one another based on 
                        formal interface definitions <emphasis>independent of the underlying platform / programming language.</emphasis> 
                        A SOA is independent of development technology (such as <literal>Java</literal> or <literal>.NET</literal>). 
                        The software components become very reusable throughout the enterprise, e.g. the same <literal>C#</literal> 
                        service may be used by a Java application, or any other technology.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Protocol / Transport / Network Independence</title>
                    <para>
                        The services provided by a business-logic system should be completely independent
                        of the methods used by clients to access them. Not only independence of platform /
                        programming language / display technology, but also independence of low-level
                        transport layer. The same functionality should be available via HTTP, E-Mail,
                        FTP, as well as raw sockets. In theory, even physical (paper-based) transport
                        is acceptable, though we are not aware of such an implementations yet!
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>            
    </para>
    <para>
        Web Services comprises, technically, of the following:
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>XML Messaging (SOAP)</title>
                    <para>
                        The use of <literal>XML</literal> to represent a universally understood message. Though
                        other legacy standards exist (such as <literal>XML-RPC</literal> and <literal>REST</literal>),
                        <literal>SOAP</literal> (adhering to the WS-I profile) is the preferred standard that enables <emphasis>strongly typed</emphasis>,
                        <emphasis>object-oriented</emphasis> message exchange (based on W3C <literal>XML Schema</literal>).
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Service Transport</title>
                    <para>
                        XML Messages can be <emphasis>transported</emphasis> on a variety of protocols, such as 
                        <literal>HTTP</literal>, <literal>SMTP</literal> (e-mail), <literal>FTP</literal>, etc.
                        <literal>HTTP</literal> is by far the most common.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Service Description (WSDL)</title>
                    <para>
                        A formal description of the service, which provides complete information (including 
                        messages, exchange patterns, data types (links to XML Schemas), and endpoint addresses) 
                        for a machine to invoke the service. To this end, WSDL descriptors can be used to generate 
                        all the data and user interface components to invoke a SOAP service. It is, in effect,
                        the web services <emphasis>contract</emphasis>.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Service Discovery (UDDI)</title>
                    <para>
                        A platform-independent, XML-based registry for businesses worldwide to list themselves 
                        on the Internet. <literal>UDDI</literal> is an open industry initiative (sponsored by OASIS) 
                        enabling businesses to discover each other and define how they interact over the Internet.
                        UDDI is, at this stage, the least successful of the web services standards, as it assumes
                        a business model and level of interoperability which has not yet materialised. In addition,
                        the <literal>ebXML</literal> standard (also managed by OASIS) encompasses a lot of functionality
                        which overlaps with <literal>UDDI</literal>, and even <literal>WSDL</literal>.
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        Because Web Services is an application of <literal>XML</literal>, it is completely extensible. To this end, several industry standards
        are emerging (typically as extensions or components of the <literal>SOAP</literal> messaging standard):
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>WS-Security</title>
                    <para>
                       Enables <emphasis>authentication of actors</emphasis> and <emphasis>confidentiality of the messages</emphasis> sent. 
                       This is accomplished by applying existing standards (such as <literal>X.509</literal> digital certificates) to SOAP
                       messages.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>WS-Reliability</title>
                    <para>
                        A specification that fulfills <emphasis>reliable messaging</emphasis> requirements, critical to some 
                        applications of Web Services.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>WS-Management</title>
                    <para>
                        Provides a universal language that all types of devices can use to share data about themselves so they 
                        can be managed more easily. This would enable better management and auditing of devices on, say, a
                        corporate network.
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>
        <note>
            <para>
                These standards are above and beyond the standardisation which is possible with <literal>XML Schema</literal>, which already
                provides the mechanism needed to develop standardised data vocabularies. These industry standards specifically apply to
                the <emphasis>exchange</emphasis> of the messages, which typically have behavioural implications to the <emphasis>nodes</emphasis>
                which process the messages.
            </para>
        </note>
    </para>
    <para>
        One of the most important aspects of working with web services is the awareness that it, in itself, defines no new technological
        elements. It is simply a <emphasis>standardised</emphasis> usage of existing networking and XML technology, in order to enable
        that elusive goal: <emphasis>Interoperability</emphasis>. Furthermore, it itself becomes a lower-level component of architectures
        such as <literal>ESB</literal> (Enterprise Services Bus).
    </para>
</section>
