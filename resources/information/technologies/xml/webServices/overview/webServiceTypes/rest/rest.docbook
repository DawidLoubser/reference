<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author: fritz@solms.co.za -->
<section 
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0">
    <title>Representative State Transfer (REST)</title>
    <para>
        REST provides a light-weight architectural style for web services which is based on the resources
        paradigm and which is aligned with the concepts of the web itself.
    </para>
    <para>
        Within message based (big or SOAP-based) web services, the central concept is a service.
        The infrastructure requires the composability of services is required. 
        Note that the concept of a service is
        not a concept which is intrinsically supported by the web itself. It is a concept artificially
        added by the SOAP/WSDL infrastructure.
    </para> 
    <para>
        REST, on the other hand, remains within the original conceptual domain of the web.
        The central concept of REST is a <emphasis>resource</emphasis> which is identified by a 
        <emphasis>Uniform Resource Identifier</emphasis> (URL) and the only the standard HTTP
        operations are supported.
        REST is an architectural/infrastructure style for web services. In particular, any REST-based 
        architecture needs to comply to a set of rules which constrain the types of interactions. 
        <note><para>
            The web itself is an architecture which follows the REST rules.
        </para></note>
    </para>
    
    <xi:include href="requirementsForRestService/requirementsForRestService.docbook"/>

    <xi:include href="resourceCentricApproachToServices/resourceCentricApproachToServices.docbook"/>
    
    <xi:include href="restConstraints/restConstraints.docbook"/>

    
</section>    