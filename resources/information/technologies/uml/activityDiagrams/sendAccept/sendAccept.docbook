<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-4-11 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Sending and accepting signals</title>
    <para> UML defines special activity types for sending and receiving signals. <note>
            <para> A signal is the asynchronous communication of information. </para>
        </note> This enables one to specify that at certain points in a work flow one waits for a
        signal while other activities send signals to external objects. </para>

    <figure xml:id="technology.uml.activityDiagram.sendAccept.enrollment_fig">
        <title>Sending and receiving signals within a business process</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="./enrollment.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> For example, <xref
            linkend="technology.uml.activityDiagram.sendAccept.enrollment_fig"/>
        shows a business process which waits for a enrollment request signal. Having received one,
        it spawns a work flow processing the enrollment request while waiting for the next
        enrollment signal. </para>

    <para> At some stage in the business process signals are sent to the client, providing the
        client the invoice and sending payment requests asynchronously to the client. </para>

    <section>
        <title>Interruptible activities</title>
        <para>
            <xref
                linkend="technology.uml.activityDiagram.sendAccept.enrollment_fig"
            /> uses an interrupable activity to specify that the process of sending payment requests
            in regular intervals to the client is interrupted by a payment notification. </para>
    </section>
</section>
