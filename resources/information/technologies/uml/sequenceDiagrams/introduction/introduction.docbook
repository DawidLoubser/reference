<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2006-12-14 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Introduction</title>
    <para>
        <indexterm>
            <primary>sequence diagram</primary>
        </indexterm>
        <indexterm>
            <primary>scenario diagram</primary>
        </indexterm> UML sequence diagram have evolved from scenario diagrams. Like scenario
        diagrams they can be used to show examples of how objects interact in the context of
        collaborating to realize some use case (at some level of granularity). They show the
        services requested as well as any object exchanged between the role players. </para>
    <para> UML has, however, expanded the notation for sequence diagrams considerably in order to be
        able to <itemizedlist>
            <listitem>
                <para> reference interaction patterns defined in another sequence diagram, </para>
            </listitem>
            <listitem>
                <para> show multiple alternative scenarios in a single diagram by having improves
                    support for conditional flow, </para>
            </listitem>
            <listitem>
                <para> provide a more solid notation for iterations, and </para>
            </listitem>
            <listitem>
                <para> have more robust support for concurrencies in sequence diagrams. </para>
            </listitem>
        </itemizedlist> Nevertheless, sequence diagram do not provide a very natural framework for
        displaying multiple scenarios, <abbrev>i.e.</abbrev> conditional flows, iteration and
        concurrencies. There main value still lies in being able to intuitively and simply document
        the interaction around a particular scenario. </para>
</section>
