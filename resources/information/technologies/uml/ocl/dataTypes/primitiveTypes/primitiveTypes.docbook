<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>
        Primitive OCL types and operations
    </title>
    <indexterm><primary>Object Constraint Language</primary><secondary>primitive types</secondary></indexterm>
    <para>
        OCL defines 4 primitive types and a set of basic operators for each. These are shown in
        <xref linkend="ocl.dataTypes.primitiveTypes.primitiveTypesTable"/>.
    </para>
    
        <table xml:id="ocl.dataTypes.primitiveTypes.primitiveTypesTable">
            <title>Basic OCL data types and operations</title>
            <tgroup cols="3">
                <thead>
                    <row>
                        <entry><para>Type</para></entry>
                        <entry><para>Domain of values</para></entry>
                        <entry><para>Available operators</para></entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry><para>Boolean</para></entry>
                        <entry><para><literal>true</literal> or <literal>false</literal></para></entry>
                        <entry><para><literal>and, or, xor, not, implies, if-then-else</literal></para></entry>
                    </row>
                    <row>
                        <entry><para>Integer</para></entry>
                        <entry><para>any positive or negative whole (integral) number.</para></entry>
                        <entry><para><literal>*, -, +, /, abs(), div(i), mod(i), max(i), min(i)</literal></para></entry>
                    </row>
                    <row>
                        <entry><para>Real</para></entry>
                        <entry><para>any positive or negative floating point number</para></entry>
                        <entry><para><literal>*, -, +, /, &lt;, &gt;, &lt;=, &gt;=, floor(), round(), min(r), max(r)</literal></para></entry>
                    </row>
                    <row>
                        <entry><para>String</para></entry>
                        <entry><para>Any character sequence</para></entry>
                        <entry><para><literal>concat(), size(), substring(), toInteger(), toReal()</literal></para></entry>
                    </row>
                    
                </tbody>
            </tgroup>
        </table>

</section>    
    