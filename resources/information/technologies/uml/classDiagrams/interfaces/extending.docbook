<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2006-12-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Extending interfaces</title>
    <para> UML supports the definition of extended interfaces. The extended interface requires that
        service providers implementing it must realize not only the services defined in the extended
        interface, but also those defined in the interface it extends. In UML one uses the
        specialization relationship to specify that one interface extends another. </para>

    <figure>
        <title> The function organizer extending the function venue provider interface. </title>
        <mediaobject>
            <imageobject>
                <imagedata width="400" fileref="functionOrganizer.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> Some service providers may choose to implement only the base interface, offering only the
        core services. Other service providers may choose to realize the extended interface. These
        service providers must realize all the services specified in the extended interface as well
        as those specified in the base interface. </para>

    <section>
        <title>Join interfaces</title>
        <para> We can join two multiple interfaces into a single join interface. Service providers
            implementing the join interface must provide all the services specified in any of the
            interfaces which are extended via the join interface. </para>
        <figure>
            <title> The function agent as a join interface. </title>
            <mediaobject>
                <imageobject>
                    <imagedata width="400" fileref="joinInterface.jpg"/>
                </imageobject>
            </mediaobject>
        </figure>
    </section>

</section>
