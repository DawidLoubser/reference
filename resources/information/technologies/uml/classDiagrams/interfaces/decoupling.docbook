<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2006-12-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Decoupling from service providers</title>

    <para>
        <indexterm>
            <primary>interface</primary>
            <secondary>decoupling via</secondary>
        </indexterm> One of the benefits of using interfaces is that clients are decoupled from
        actual service providers. The clients business process is hence no longer dependent on any
        particular type of service provider which uses a specific business process to realize a
        service. Instead one can plug in different service providers which may realize the required
        service(s) through different business processes. To show this in a UML diagram, the uses
        relationship is not linked to a particular class, but to the interface. </para>

    <figure xml:id="technology.uml.classDiagram.interface.homeLoans_fig">
        <title> Home loans is decoupled from any concrete realization of a property valuator. </title>
        <mediaobject>
            <imageobject>
                <imagedata width="400" fileref="homeLoans.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> In <xref linkend="technology.uml.classDiagram.interface.homeLoans_fig"
        /> home loans is not locked into any particular type of property valuator,
        <abbrev>i.e.</abbrev> the business process for processing a home loan application need not
        be modified when changing from one property valuator to another. Each property valuator
        implementation (class) can use a different business process when realizing the property
        valuation service. </para>

    <figure xml:id="technology.uml.classDiagram.interface.homeLoansCompact_fig">
        <title> The property valuator interface collapsed into its stereotype icon. </title>
        <mediaobject>
            <imageobject>
                <imagedata width="400" fileref="homeLoansCompact.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> In order to simplify the diagrams, one often one shows the dependency on an interface
        without showing the details of the services required from service providers implementing the
        interface. In such cases the interface diagram is collapsed into its stereotype icon for an
        interface as is done in <xref
            linkend="technology.uml.classDiagram.interface.homeLoansCompact_fig"
        />. <note>
            <para> Note also that the realization relationship is now shown via the so-called
                lollipop notation, <abbrev>i.e.</abbrev> as a solid line between the interface and
                the class realizing the interface. </para>
        </note>
    </para>

    <section>
        <title>Required and provided interfaces</title>
        <para>
            <indexterm>
                <primary>interface</primary>
                <secondary>required</secondary>
            </indexterm>
            <indexterm>
                <primary>interface</primary>
                <secondary>provided</secondary>
            </indexterm> UML supports a second notation highlighting an interface required by a
            client and the interface provided by a service provider. The notation uses the dish to
            show the required side of an interface and the lollipop notation to show the provided
            side of an interface. </para>

        <figure xml:id="technology.uml.classDiagram.interface.homeLoansProvided_fig">
            <title> Showing the required and provided sides of an interface. </title>
            <mediaobject>
                <imageobject>
                    <imagedata width="400" fileref="homeLoansRequiredProvided.jpg"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para>
            <indexterm>
                <primary>interface</primary>
                <secondary>required</secondary>
            </indexterm> One can show a required interface without specifying any object which
            provides it as is illustrated in <xref
                linkend="technology.uml.classDiagram.interface.homeLoansRequired_fig"
            />. This notation is particularly useful when designing system or business processes
            without being yet concerned about the implementation details. The latter would be
            addressed during the implementation phase where the design is mapped onto a concrete
            realization of the business or system process. </para>

        <figure xml:id="technology.uml.classDiagram.interface.homeLoansRequired_fig">
            <title> The property valuator as a required interface for home loans. </title>
            <mediaobject>
                <imageobject>
                    <imagedata width="400" fileref="homeLoansRequired.jpg"/>
                </imageobject>
            </mediaobject>
        </figure>
    </section>
</section>
