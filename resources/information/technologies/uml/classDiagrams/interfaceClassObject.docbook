<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2006-12-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Interfaces versus classes versus objects</title>
    <para>
        <indexterm>
            <primary>interface</primary>
            <secondary>versus class and object</secondary>
        </indexterm>
        <indexterm>
            <primary>class</primary>
            <secondary>versus interface and object</secondary>
        </indexterm>
        <indexterm>
            <primary>object</primary>
            <secondary>versus class and interface</secondary>
        </indexterm> An interface contains solely a specification of the services which need to be
        provided when the interface is implemented. The business or system process which should be
        followed when a service is requested cannot be specified for an interface. It is solely the
        core of a services contract. </para>
    <para> A class specifies the processes which are executed when the services are requested, but
        the class does not execute these processes. Nor does the class maintain the instance state. </para>
    <para> One can, however, assign a process to the service of a class. This is done in UML by
        assigning the appropriate diagrams from the dynamic model like sequence and activity
        diagrams to the service. </para>
</section>
