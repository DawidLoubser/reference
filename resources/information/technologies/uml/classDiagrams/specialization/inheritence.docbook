<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2006-12-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Inheritance</title>
    <para>
        <indexterm>
            <primary>generalization</primary>
            <secondary>inheritance</secondary>
        </indexterm>
        <indexterm>
            <primary>inheritance</primary>
            <see>generalization</see>
        </indexterm> The specialization relationship implies inheritance, <abbrev>i.e.</abbrev> any
        instance of the specialized class, the sub-class, inherits all attributes and services of
        the more generic class, the super-class. It thus enables one to encapsulate the
        commonalities across different types of objects within a common super or base class. Any
        changes to this more abstract class would then feed through to all its specializations,
            <abbrev>i.e.</abbrev> to all derived or sub-classes. </para>

    <figure xml:id="technology.uml.classDiagram.specialization.accountInheritance_fig">
        <title>CreditCardAccount inherits all attributes and services of Account.</title>
        <mediaobject>
            <imageobject>
                <imagedata width="400" fileref="accountInheritance.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> In <xref
            linkend="technology.uml.classDiagram.specialization.accountInheritance_fig"
        /> credit card accounts will inherit the account number and balance from the
            <emphasis>Account</emphasis> class as well as the credit and debit services. </para>

    <figure xml:id="technology.uml.classDiagram.specialization.paymentInheritance_fig">
        <title>For all payments we capture the payment amount and date.</title>
        <mediaobject>
            <imageobject>
                <imagedata width="400" fileref="paymentInheritance.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> Inheritance is commonly used for data or value objects. These objects are used to
        exchange or store some business information. For specialized data objects we may require
        additional information to be captured. For example, <xref
            linkend="technology.uml.classDiagram.specialization.paymentInheritance_fig"
        /> specifies that for any type of payment we need to capture the payment amount and date.
        For credit card payments we need to also capture the credit card details and for electronic
        payment we need to capture, in addition to the amount and payment date, the details of the
        source account. </para>

    <section>
        <title>Inheriting and overriding business processes</title>
        <para> The business process which should be followed when realizing a service is typically
            specified by attaching sequence, activity and potentially communication diagrams to the
            service. The sub-class inherits not only the attributes or properties of the
            super-class, but also the services with the business processes through which they are
            realized. </para>
        <para> One may, however, define a different business process for the sub-class service. This
            is done by redefining the service in the sub-class and attaching a different business
            process specification to the sub-class service. </para>
    </section>


</section>
