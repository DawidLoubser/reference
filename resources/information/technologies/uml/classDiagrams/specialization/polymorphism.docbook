<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2006-12-16 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Polymorphism</title>
    <para>
        <indexterm>
            <primary>polymorphism</primary>
        </indexterm> UML supports polymorphism on message recipient as well as polymorphism on
        message parameters, <abbrev>i.e.</abbrev> different business or system processes may be
        followed depending on <itemizedlist>
            <listitem>
                <para> the type of service provider used within a specific execution of the process,
                    and </para>
            </listitem>
            <listitem>
                <para> the type of objects received by a service provider upon service request.
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <section>
        <title>Polymorphism on message recipient</title>
        <para>
            <indexterm>
                <primary>polymorphism</primary>
                <secondary>on message recipient</secondary>
            </indexterm> Within a business process we may require a service from some type of
            service provider. When executing the business process we may select to use a specialized
            service provider which renders the service in some specialized way. The actual way the
            lower level service is rendered may thus vary from one execution of the business process
            to the next depending on the type of service provider chosen for the individual
            executions of that business process. </para>
        <para> For example, we may have a subscription manager which raises subscription fees from a
            provided account. Depending on the type of account provided, the debit service may be
            realized in a different way. In the case of some accounts there will be a service fee
            raised for the transaction while other accounts may earn the account holder voyager
            miles. </para>
        <note>
            <para> This type of polymorphism is in the spirit of Frank Sinatra's <quote>
                    <emphasis>I do it my way. </emphasis>
                </quote> Different objects may provide the same service, but each may potentially do
                it its way. </para>
        </note>
    </section>

    <section>
        <title>Polymorphism on message parameters</title>
        <para>
            <indexterm>
                <primary>polymorphism</primary>
                <secondary>on message parameters</secondary>
            </indexterm> The second type of polymorphism supported in UML is polymorphism on message
            parameters. Here a service provider may render a service differently, depending on the
            type of parameter(s) provided. </para>

        <figure>
            <title>Different business processes will be followed for different types of loan
                applications.</title>
            <mediaobject>
                <imageobject>
                    <imagedata width="400" fileref="polymorphicLoanProcessing.jpg"/>
                </imageobject>
            </mediaobject>
        </figure>

        <para> For example, business may require that home loan applications are processed in one
            way, while all other property loan applications like business property and stand loan
            applications should be processed using another business process and all other loan
            applications including personal and vehicle loan applications should be processed via
            yet another business process. Thus, if the client requests the processing of a loan
            applications, the actual business process followed depends on the type of loan
            application provided. </para>
    </section>
</section>
