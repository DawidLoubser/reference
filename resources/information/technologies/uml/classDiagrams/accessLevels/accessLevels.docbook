<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Access levels (visibility)</title>
    <para>
        <indexterm>
            <primary>access levels</primary>
        </indexterm>
        <indexterm>
            <primary>visibility</primary>
            <see>access levels</see>
        </indexterm> UML provides some rudimentary support for constraining access. This is done by
        assigning an access level to a member (<abbrev>e.g.</abbrev> attribute or a service). It
        specifies whether the member can be accessed from outside the container
        (<abbrev>e.g.</abbrev> object) which owns it, and if so, to what extend. </para>
    <para> UML defines 4 access levels: <itemizedlist>
            <listitem>
                <formalpara>
                    <title>public (+)</title>
                    <para> The member can be accessed from any object which has a handle/message
                        path to the container. For example, a client of an organization can use the
                        public services of the organization. Similarly any system object which has a
                        message path to another system object can access that objects public methods
                        and attributes. </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>package (~)</title>
                    <para> The member can be accessed from any object which is in the same package
                        as the container. </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>protected (#)</title>
                    <para> The member can be accessed from within the container itself or from
                        within instances of specializations of the container. For example, protected
                        members of a class can be accessed from within sub-class instances. </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>private (-)</title>
                    <para> The member can only be accessed from within the container itself. For
                        example, the private attributes of an instance of a class can only be
                        accessed from within any of the business or system processes of that same
                        instance. </para>
                </formalpara>
            </listitem>
        </itemizedlist>
    </para>
</section>
