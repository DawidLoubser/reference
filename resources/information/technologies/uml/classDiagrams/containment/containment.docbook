<?xml version="1.0" encoding="utf-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><!--Authored by mailto:fritz@solms.co.za on 2007-2-19 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Containment</title>
    <para> Containment is a packaging relationship. It is used in class diagrams to specify inner
        classes. An inner class is a class which <itemizedlist>
            <listitem>
                <para> can only exist within an instance of its outer class and </para>
            </listitem>
            <listitem>
                <para> has access to the private members of the outer class. </para>
            </listitem>
        </itemizedlist> When using containment, one actively discourages reuse --
        <abbrev>i.e.</abbrev> the class is not meant for re-use. </para>

    <para> The UML notation for an inner class is a circle with a cross at the outer class end with
        a solid line leading to the inner class. </para>

    <figure>
        <title>Voyager mile account as an inner class</title>
        <mediaobject>
            <imageobject>
                <imagedata width="400" fileref="voyagerMileAccount.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>

    <para> Consider, for example, a voyager mile account. Assume that a voyager mile account cannot
        exist as a stand-alone account and that every instance of a voyager mile account always
        exists within an instance of a credit card account. Furthermore, one may want that the
        voyager mile account is exclusively used for the credit card account and that it is not
        re-used for other purposes. If this is the case, then the voyager mile account is always
        packaged within a credit card account and one would use a containment relationship to
        specify this in a UML diagram. </para>
</section>
