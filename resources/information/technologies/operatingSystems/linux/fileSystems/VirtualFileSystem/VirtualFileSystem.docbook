<?xml version="1.0" encoding="UTF-8"?>    
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">


    <title>Virtual File System (VFS)</title>

    <para> The Linux kernel's Virtual File System manages all the different file systems that are
        mounted to the operation system. the Virtual Files system describes the file system in terms
        of blocks. THe VFS abstracts the actual file system on the on the hardware this allows
        different client application to access the storage location without knowing what file system
        is being used. This make the way in which any client application accesses the files system
        to be uniform. The VFS uses a common file model to represented all supported file systems,it
        is linux oriented and all file system must map their own concepts to the onto it. </para>

    <para>
        The main components of the common file model are :
        <itemizedlist>
            <listitem>
                <para> Superblock ,<emphasis> which contains information the mounted files system. </emphasis></para>
            </listitem>

            <listitem>
                <para> Inode, <emphasis>information about the specific file. </emphasis></para>
            </listitem>

            <listitem>
                <para> File, <emphasis>information about an open file. </emphasis></para>
            </listitem>

            <listitem>
                <para> Dentry, <emphasis>information about the directory entry. </emphasis></para>
            </listitem>
        </itemizedlist>
    </para>



    <para> The virtual file systems manages all mounted file systems to the operating system any
        given time. Every file and directory on the system is represented by a VFS inode. When a
        particular application is launched and is to access a particular file, the VFS search
        through the VFS inodes which represents the file system. The inodes are cached in a inode
        cache for easy access. T </para>
</section>
