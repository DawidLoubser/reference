<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- Author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>When not to use shell scripts?</title>
    <para>
        Shell scripts can be very useful. But not all problems should be tackled via shell scripts.
        In the following cases one should avoid using a shell script.
    </para>
    <orderedlist>
        <listitem><formalpara>
            <title>If performance is critical.</title>
            <para>
                Shell scripts are interpreted. 
            </para>
        </formalpara></listitem>
        
        <listitem><formalpara>
            <title>If the command should be platform independent.</title>
            <para>
                Shell scripts are specific to Unix-based platforms and even to the shell.
                They do not port to other platforms like Microsoft Windows. If portability
                is required, an implementation in a portable programming language like
                Java, C++ or C may be more appropriate.
            </para>
        </formalpara></listitem>
        
        <listitem><formalpara>
            <title>If a GUI front-end is required.</title>
            <para>
                Though shell scripts can capture information  from the user and report
                to the user, they do not support a graphical user-interface (GUI).
            </para>
        </formalpara></listitem>
        
        <listitem><formalpara>
            <title>If multi-threading is required.</title>
            <para>
                A shell script can spawn child processes but not threads running within the same
                virtual machine.
            </para>
        </formalpara></listitem>
        
        <listitem><formalpara>
            <title>If sophisticated file I/O is required.</title>
            <para>
                Bash only supports serial line-by-line file access. If this is insufficient
                or inefficient (for example, if random access is required) then a shell
                script is not suitable. Also, port and socket I/O are not supported
                in bash.
            </para>
        </formalpara></listitem>
        
        <listitem><formalpara>
            <title>If sophisticated data structures are required</title>
            <para>
                Bash shells only support simple, untyped variables.
            </para>
        </formalpara></listitem>
        
        <listitem><formalpara>
            <title>If security is required.</title>
            <para>
                Also, shell scripts are automatically open-source.
            </para>
        </formalpara></listitem>
    </orderedlist>
    
</section>
