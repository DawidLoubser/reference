<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- Author: Fritz Solms -->
<section  xmlns="http://docbook.org/ns/docbook" 
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Overview</title>
    <para>
        A shell is a command interface to the operating system kernel. Commands entered 
        by the user are interpreted by the shell. Generally shells provide the the following features 
    </para>
    <itemizedlist>
        <listitem>
            <formalpara>
                <title>Command line user interface</title>
                <para>
                    A shell provides channels for a user to interact with the application running within the shell.   
                </para>
            </formalpara>
        </listitem>
        
        <listitem>
            <formalpara>
                <title>Environment configuration</title>
                <para>
                    Many applications rely on environment variables which allow for the system wide or user 
                    specific configuration of parameters. Your <quote>favourite</quote> editor is set in 
                    the <quote>EDITOR</quote> environment variable. These environment settings can be 
                    configured system wide in the configuration directory (/etc/) or user specific in the users 
                    home directory. Various shells use different files to set the default environment variables. 
                    The commands used to access the environment configuration also vary between the 
                    different shells, although the concepts as well as the variables are often the same.
                </para>
            </formalpara>
        </listitem>
        
        <listitem>
            <formalpara>
                <title>Programming</title>
                <para>
                    Most shells provide the functionality to group a sequence of commands together 
                    into a script. These scripts can be used to perform all sorts of tasks and can make 
                    life so much easier for ourselves. Together with a rich set of utilities, scripts are 
                    capable of performing complex tasks. Scripts can also be nested, which means 
                    that scripts can make use of other scripts. Again the basic principle of providing 
                    tools focusing on a single purpose applies. 
                </para>
            </formalpara>
        </listitem>
        
        <listitem>
            <formalpara>
                <title>I/O redirection</title>
                <para>
                    The channeling of input and output is also controlled by the shell. Input to a program can 
                    be obtained from a number of sources such as the keyboard, a file or the output of another 
                    application. Similarly	output may be redirected to standard out (user), a file or another 
                    program. This is achieved by using standard in (stdin), standard out (stdout), redirection 
                    and pipes.
                </para>	
            </formalpara>
        </listitem>
        
    </itemizedlist>
    
    <para>
        The implementation of these features might differ slightly between 
        the various shells but the concepts are the same. 
    </para>
    <note>
        <title>Jargon Dictionary definition of a shell</title>
        <para>
            shell n. [orig. Multics techspeak, widely propagated via Unix] 
            <orderedlist>
                <listitem><para>
                    [techspeak] The command interpreter used to pass commands to an
                    operating system; so called because it is the part of the operating
                    system that interfaces with the outside world.
                </para></listitem>
                <listitem><para>
                    More generally, any
                    interface program that mediates access to a special resource or server
                    for convenience, efficiency, or security reasons; for this meaning, the
                    usage is usually `a shell around' whatever. This sort of program is also
                    called a `wrapper'.
                </para></listitem>
                <listitem><para>
                    A skeleton program, created by hand or by another
                    program (like, say, a parser generator), which provides the necessary
                    incantations to set up some task and the control flow to drive it (the
                    term driver is sometimes used synonymously). The user is meant to fill
                    in whatever code is needed to get real work done. This usage is common
                    in the AI and Microsoft Windows worlds, and confuses Unix hackers.
                </para></listitem>
            </orderedlist>
        </para>
    </note>
</section>    
