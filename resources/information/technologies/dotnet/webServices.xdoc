<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.dotnet.webServices"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Web Services</title>
    <para>According to the W3C a Web Service is a software system designed to support
        interoperability between machines interacting over a network.The service provider would
        publish the services in a Web Services Definition Language (WSDL).This is basically the
        interface which the Service Requester would adhere to inorder to make requests to the
        Service Provider. </para>
    <para>The WSDL is a public interface to the web services provided and is an XML based service
        description on how to communicate using the web service.</para>
    <para>The web service information is published using the UDDI protocol. It should enable
        applications to look up web services information in order to determine whether to use
        them.UDDI is an acronym for Universal Description, Discovery, and Integration </para>
    <para>The Service Requester interacts with the Service Provider by sending messages which which
        is wrapped in a SOAP envelope.These messages are typically conveyed using HTTP and normally
        comprise XML.</para>
    <para>An example of using a web service is, using component services that might use to build
        bigger services. Microsoft's Passport, for instance, offers an authentication function
        exported on the Web. So hypothetically, an electronic newspaper can avoid creating its own
        user authentication service, delegating it to Passport. </para>
    <para>
        <emphasis>ADVANTAGES OF WEB SERVICES</emphasis>
        <itemizedlist>
            <listitem>
                <para>Web services provide interoperability between various software applications
                    running on disparate platforms.</para>
            </listitem>
            <listitem>
                <para>Web services use open standards and protocols. Protocols and data formats are
                    text-based where possible, making it easy for developers to comprehend.</para>
            </listitem>
            <listitem>
                <para>By utilizing HTTP, web services can work through many common firewall security
                    measures without requiring changes to the firewall filtering rules.</para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        <emphasis>DISADVANTAGES OF WEB SERVICES</emphasis>
        <itemizedlist>
            <listitem>
                <para>Web services may suffer from poor performance compared to other distributed
                    computing approaches such as RMI, CORBA, or DCOM. This is a common trade-off
                    when choosing text-based formats. XML explicitly does not count among its design
                    goals either conciseness of encoding or efficiency of parsing.</para>
            </listitem>
            <listitem>
                <para>Web services is a stateless programming model.Which means that each incoming
                    request is handled independently.</para>
            </listitem>
            <listitem>
                <para>Web services standards for features such as transactions are currently
                    nonexistent or still in their infancy compared to more mature distributed
                    computing open standards such as CORBA.</para>
            </listitem>
            <listitem>
                <para>By utilizing HTTP, web services can evade existing firewall security measures
                    whose rules are intended to block or audit communication between programs on
                    either side of the firewall.</para>
            </listitem>
        </itemizedlist>
    </para>
</section>
