<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xml:id="components.technologies.www.http.request.methods">
    <title>HTTP Request Methods</title>
  <indexterm>
    <primary>HTTP</primary>
    <secondary>request</secondary>
    <tertiary>methods</tertiary>
  </indexterm>
  <para>
    When designed, HTTP was intended to be much more than a simple
    browsing protocol, but rather to be a full content management system.
    In this regard, it specified a number of actions, which indicate
    use-cases, such as publishing a resource, removing a resource, or
    requesting the web server's capabilities. All of these relied on a
    degree of trust in an open, world-wide web.
  </para>
  <note>
        <para>
            Most production web servers are configured to accept only <literal>GET</literal>, 
            <literal>POST</literal> and <literal>HEAD</literal> requests for security reasons.
            If you are unable to use any of the other methods, check your server configuration.
        </para>
    </note>
    <section>
        <title>GET</title>
        <para> The <emphasis>GET</emphasis> method is used to retrieve content specified by the URI
            in the request. It it the default method used by web browser when only a URI is provided.
            HTTP GET is a simple request for a resource, and does not include a request body.
            GET should never be used if such a request may result in business logic that changes the state
            of the server, the business, or the client (for example, repeated automatic invocation by a search
            engine crawler must always be acceptable).
        </para>
    </section>
    <section>
        <title>POST</title>
        <para> The <emphasis>POST</emphasis> method allows data (e.g. from an html form) to be included as an entity in the
            request body, rather then appended to the URI - and hence not subject to size limitations. POST is
        often used if the request will result in a business process or change the state of the server.</para>
    </section>
    <section>
        <title>PUT</title>
        <para> Using the <emphasis>PUT</emphasis>method is a request to store the entity included in
            the request under the specified URI. <emphasis>(rarely publicly supported)</emphasis> </para>
    </section>
    <section>
        <title>DELETE</title>
        <para> Specifying a <emphasis>DELETE</emphasis> method is used to request the removal of the
            content specified by a specific URI. <emphasis>(rarely publicly supported)</emphasis></para>
    </section>
    <section>
        <title>TRACE</title>
        <para> The <emphasis>TRACE</emphasis> method specified in a request is used to obtain a
            loop-back of the request. The web server will include the request in the response as well
            as specifing a content type of <quote>message/http</quote>. It is typically used for
            tracing and debugging. </para>
    </section>
    <section>
        <title>OPTIONS</title>
        <para> The <emphasis>OPTIONS</emphasis> method is typically used to obtain available
            capabilities of either a resource specified by the URI, or the web server. <emphasis>(rarely publicly supported)</emphasis></para>
    </section>
    <section>
        <title>HEAD</title>
        <para> The <emphasis>HEAD</emphasis> method is interpreted the same way a
            <emphasis>GET</emphasis> method would be, except that the response does not contain the
            requested resource, but only the header information. This is useful for obtaining
            meta information for a resource. This is the fundamental mechanism that enables browsers
            to cache unchanged information locally.</para>
    </section>
    
</section>
