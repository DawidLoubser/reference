<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"--><ns433:section xmlns:ns433="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2ee.ejb.client.servletClients.servletClients">

  <ns434:title xmlns:ns434="http://docbook.org/ns/docbook">Servlet clients</ns434:title>
  <ns435:para xmlns:ns435="http://docbook.org/ns/docbook">
    The J2EE architecture aims to enforce a clean separation of the business logic,
    presentation and back-end layers. Business logic components (the enterprise
    beans) should thus be accessible through a variety of presentation layer
    components. 
  </ns435:para>
  <ns436:para xmlns:ns436="http://docbook.org/ns/docbook">
    A heavy-weight client like a Java Swing application could thus use
    an enterprise bean via RMI. Web-based clients could be served by servlets which
    could access the enterprise bean either
    <ns437:itemizedlist xmlns:ns437="http://docbook.org/ns/docbook">
      <ns438:listitem xmlns:ns438="http://docbook.org/ns/docbook"><ns439:para xmlns:ns439="http://docbook.org/ns/docbook">
        by using the remote interface, or  
      </ns439:para></ns438:listitem>
      <ns440:listitem xmlns:ns440="http://docbook.org/ns/docbook"><ns441:para xmlns:ns441="http://docbook.org/ns/docbook">
        by using a local interface for the bean.  
      </ns441:para></ns440:listitem>
    </ns437:itemizedlist>
  </ns436:para>
  
  <ns442:section xmlns:ns442="http://docbook.org/ns/docbook">
    <ns443:title xmlns:ns443="http://docbook.org/ns/docbook">Servlets using the remote interface</ns443:title>
    <ns444:para xmlns:ns444="http://docbook.org/ns/docbook">
      When the servlet container runs in a different Java virtual machine (which may reside on a
      different physical machine) than the EJB container, then the servlets are forced to use the 
      remote interface. The service requests are thus marshaled onto RMI/IIOP.
    </ns444:para>
    <ns445:para xmlns:ns445="http://docbook.org/ns/docbook">
      In this case the servlet uses the enterprise bean in exactly the same way as any other
      RMI client following the steps discussed in 
      <ns446:xref xmlns:ns446="http://docbook.org/ns/docbook" linkend="resources.information.technologies.java.j2ee.ejb.client.rmiClients.steps"/>.
    </ns445:para>
  </ns442:section>
  
  <ns447:section xmlns:ns447="http://docbook.org/ns/docbook">
    <ns448:title xmlns:ns448="http://docbook.org/ns/docbook">Servlets using the local interface</ns448:title>
    <ns449:para xmlns:ns449="http://docbook.org/ns/docbook">
      Another common architecture is to run the servlet and EJB containers in the same
      virtual machine. In this case a significant performance benefit can be achieved by
      by integrating the servlet and EJBs via local interfaces, avoiding the overheads of
      RMI/IIOP marshaling and demarshaling.
    </ns449:para>
  </ns447:section>
  
</ns433:section>