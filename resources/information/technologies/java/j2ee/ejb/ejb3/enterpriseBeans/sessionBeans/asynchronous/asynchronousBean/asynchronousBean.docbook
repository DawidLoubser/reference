<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Asynchronous beans</title>
    <para>
        Asynchronous beans are beans for which all services are processed either asynchronously or in a deferred synchronous
        way, i.e. byt annotating a session bean as <literal>@asynchronous</literal> one specifies that all its services are
        asynchronous (the ones which return a future are deferred synchronous).
    </para>
    <para>
        For example, we could annotate the <literal>BookingServicesBean</literal> as <literal>@asynchronous</literal>, thereby
        specifying that both, the <literal>provideQuote</literal> and <literal>bookItinery</literal> services be asynchronous (or, in
        this case, deferred synchronous services):
        <programlisting><![CDATA[
@asynchronous
@Stateless            
public class BookingServicesBean
{
    
    public Future<QuoteResult> provideQuote(QuoteRequest quoteRequest)
    {
        ...
    }
    
    public BookItenaryResult bookItenary(BookItineryRequest request)
    {
    
        ...
        Future<QuoteResult> futureQuoteResult = provideQuote(quoteRequest);
        ...
        // do some other things (eg request further quotes)
        ...
        // Now block process until result is available
        QuoteResult result = futureQuoteResult.get();
        ...
    }
}    
        ]]></programlisting>
        
    </para>
</section>