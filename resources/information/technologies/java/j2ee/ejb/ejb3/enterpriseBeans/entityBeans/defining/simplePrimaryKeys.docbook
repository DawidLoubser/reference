<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.entityBeans.defining.simplePrimaryKeys">
  <title>Primary keys</title>
  <para>
    For every entity bean one must specify a primary key which may be either
    <itemizedlist>
         <listitem>
            <para>a simple primary key, or</para>
         </listitem>
         <listitem>
            <para>a composite primary key.</para>
         </listitem>
      </itemizedlist>
    .
    In this section we only discuss simple primary keys.
  </para>
  
  <section>
      <title>Valid types for simple primary keys</title>
      <para>
      The following are valid data types for primary key fields:
      <itemizedlist>
            <listitem>
               <para>
          Java primitives and primitives wrappers, and
        </para>
            </listitem>
            <listitem>
               <para>
                  <literal>java.lang.String</literal>
               </para>
            </listitem>
         </itemizedlist>
      Although approximate numeric types like <literal>float</literal> or
      <literal>double</literal> are permitted, they should generally not be
      used due to their inability to represent absolute values.
    </para>
  </section>
  
  <section>
      <title>Annotating a simple primary key field</title>
      <para>
      A primary field is specified for an entity bean by annotating either
      <itemizedlist>
            <listitem>
               <para>
          an accessor method, or    
        </para>
            </listitem>
            <listitem>
               <para>
          an instance field   
        </para>
            </listitem>
         </itemizedlist>
      with <literal>@javax.persistence.Id</literal>.
      </para>
  </section>
   
   <section>
      <title>Automatically generating primary keys</title>
      <para>
         If required, one can request the entity manager to automatically generate
         the value of a primary key (which will always be a unique value) by annotation
         the key with the <literal>@GeneratedValue</literal> annotation:
         <programlisting language="Java"><![CDATA[

import java.io.Serializable;
import javax.persistence.*;

@Entity
public class Account implements Serializable
{
  
  ...

  @Id 
  @GeneratedValue(strategy=GenerationType.AUTO)
  private long accountNumber;
}

            ]]></programlisting>
      </para>
      <para>
         The annotation takes parameters, which allows the developer to indicate the generator
         (such as a particular database table), and/or to indicate the strategy to be used (typically realised by the
         underlying database). When one <quote>doesn't care, as long as it is unique</quote>
         the <literal>AUTO</literal> strategy usually works well.
      </para>
   </section>
  
</section>
