<section
  id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.sessionBeans.dependencyInjection.fieldInitialization"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd"
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Field initialization</title>
  <para>
    The EJB specification supports initialization of fields through injection.
    For example
<programlisting><![CDATA[
@EJB
private TaxCalculator taxCalculator;
  ]]></programlisting>
  </para>
  <section>
    <title>Injecting context singletons</title>
    <para>
      Dependency injection is also commonly used to provide a bean access to the
      context objects maintained by the application server for that bean. This
      is done by injecting variables into the class:
<programlisting><![CDATA[
@Resource javax.ejb.SessionContext sessionContext;
@Resource javax.ejb.UserTransaction userTransaction;
@Resource javax.ejb.TimeService timer;
@Resource javax.persistence.EntityManager entityManager;  
]]></programlisting>      
    </para>
  </section>
</section>  
  