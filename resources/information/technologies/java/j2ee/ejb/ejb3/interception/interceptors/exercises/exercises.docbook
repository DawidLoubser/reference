<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.sessionBeans.interception.interceptors.exercises.exercises">
  <title>Exercises</title>
  
    <para>
      The intelligence agency of the western world's foremost economical power is very paranoid
      about news agencies publishing bad publicity regarding their president.
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Discuss three potential uses of EJB filters which have not been mentioned in the
          course notes thus far.
        </para>
      </listitem>
      <listitem>
        <para>
          Write a stateless session bean which offers a service of accepting news articles
          from journalists working remotely in the field. A news article should at least
          have a headline, a body of text, and a date. The bean does not have to do anything
          with the article for now, but a real implementation may store it persistently
          (using JPA) or place it on a message queue for approval.
        </para>
      </listitem>
      <listitem>
        <para>
          Write an interceptor which is applied as a method-level interceptor to the
          news submission service: If a submitted news article contains any mention of
          the country's president, it should not prevent the article form being submitted,
          but it should indicate that it has logged this incident (and probably that the
          journalist in question will receive a visit from an unmarked, black government vehicle
          and be taken away for questioning).
        </para>
      </listitem>
      <listitem>
        <para>
          Write a default interceptor (applied to all beans in the module) which, for any news
          article being sent as a parameter (or return value) to/from any service, will perform bad language filtering:
          Any occurrence of a bad word (from a list of bad words) should silently be replaced
          by <quote>***</quote> once it reaches its destination.
        </para>
      </listitem>
    </itemizedlist>
</section>