<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.sessionBeans.interception.interceptors.classLevel.classLevel"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Class level interceptors</title>
  <para>
    If an interceptor is assigned to a bean class, it will intercept all business services of the
    bean.
  </para>
  <section>
    <title>Applying class level interceptors via annotations</title>
    <para>
      To assign a single interceptor class to a bean, one can use the
      <literal>@javax.interceptor.Interceptor</literal>:
      <programlisting><![CDATA[
@Interceptor ("za.co.solms.comms.email.EMailInterceptor")
public class ShoppingBean implements Shopping
{
  ...
}  
]]></programlisting>        
    </para>
    <para>
      Multiple interceptors are assigned via the
      <literal>@Interceptors</literal> annotation:
      <programlisting><![CDATA[
@Interceptors ({"za.co.solms.ejb3.comms.email.EMailInterceptor", 
                "za.co.solms.ejb3.logging.LoggingInterceptor"})
public class ShoppingBean implements Shopping
{
  ...
}  
]]></programlisting>        
    </para>
    <para>
      If multiple interceptors have been specified for a bean, they will
      intercept in the order in which they are declared.
    </para>
  </section>
  
  <section>
    <title>Applying class level interceptors in the deployment descriptor of a bean</title>
    <para>
      Instead of applying a class-level interceptor in the source code of a bean via an annotation, we can
      also apply the interceptor in a separate deployment descriptor. This is done in a
      <literal>interceptor-bindings</literal> section of the <literal>assembly-descriptor</literal>
      of the <literal>ejb-jar.xml</literal> deployment descriptor.
    </para>
    <para>
      For example, below we specify that the <literal>RequestLogger</literal>
      is applied as an interceptor
      to all business services of the <literal>ProcessOrder</literal> session bean:
      <programlisting><![CDATA[
<assembly-descriptor>
  ...
  <interceptor-binding>
     <ejb-name>za.co.solms.retail.ProcessOrder</ejb-name>
     <interceptor-class>
        za.co.solms.logging.RequestLogger
     </interceptor-class>
  </interceptor-binding>
</assembly-descriptor>

        ]]></programlisting>
      <note><para>
        In such a case the request logger would typically be declared an interceptor class in 
        a separate interceptors section.         
      </para></note>
    </para>
  </section>
  
</section>
    