<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.sessionBeans.interception.introductiuon.introduction"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Introduction</title>
  <para>
    Interception is a powerful feature that, for any managed component in a Java EE container, 
    provides an extension point for future pluggable extensions around the services these
    components provide. This results in improved maintainability, as the classes themselves 
    can be kept simple (the extra logic is not absorbed within the class itself).
  </para>
  <para>
    The EJB specification caters for three features through interception
    <itemizedlist>
      <listitem><para>
        <emphasis>dependency injection</emphasis> where the container injects dependencies on
        resources it manages prior to the first call to a
        beans business method,
      </para></listitem>
      <listitem><para>
        <emphasis>interceptor methods and classes</emphasis> used to intercept a bean's business
        services, and
      </para></listitem>
      <listitem><para>
        <emphasis>callback listeners</emphasis> which can be used to intercept the container provided
        life-cycle methods like bean creation, destruction, passivation, and
        activation.
      </para></listitem>
    </itemizedlist>
  </para>
</section>  