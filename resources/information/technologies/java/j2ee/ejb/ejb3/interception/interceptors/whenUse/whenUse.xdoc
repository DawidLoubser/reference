<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.sessionBeans.interception.interceptors.whenUse.whenUse"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>When should one use interceptors</title>
  <para>
    Interceptor classes are useful when one wants to add additional responsibilities
    to a service,  which you do not want to include in the responsibility domain
    of the class(es) whose services you are intercepting.
  </para>
  <para>
    Interceptors thus add additional optional work flow steps around some core service or across
    a range of services. Interception provides a mechanism to weave these additional work flow
    steps into your code, applying it across the application domain of the interceptor.
    In that context they are similar to simple aspects and can often be used instead
    of aspects.
  </para>
</section>
  
  