<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.j2ee.ejb.ejb3.enterpriseBeans.sessionBeans.interception.interceptors.applying.injection.injection">
  <title>Injecting dependencies into interceptors</title>
  <para>
    Interceptors themselves may use dependency injection to obtain references
    to any other components: EJBs, resources, etc. For example:
    <programlisting>
public class MyInterceptor
{

   @AroundInvoke
   public Object intercept( InvocationContext ctx )
   {
     ...
   }

   @Resource(mappedName="java:ConnectionFactory")
   QueueConnectionFactory cf;
   
   @Resource(mappedName="queue/forecastNotification")
   Queue queue;
}
      </programlisting>
  </para>
   <note>
      <para>
         Interceptors should be written in such a way as to minimally disrupt the
         request flow (unless that was the intention of the interceptor). To that end, optimal
         use should be made of messaging services etc, to not block the calling thread
         with interception work. Messages should rather be dispatched to other beans which
         will asynchronously take action upon intercepted messages.
      </para>
   </note>
   
</section>