<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    <title>Architecture of the timer service</title>
    <para>
        The timer service is a  container service which enables one to register session bean services to be called on timer events, i.e.
        one
        <orderedlist>
            <listitem><para>
                either automatically (via annotations) or programmatically registers a stateless session bean service with a timer
            </para></listitem>
            <listitem><para>
                after which the container will call the registered services on the corresponding timer events.
            </para></listitem>
        </orderedlist>
    </para>
    
    <section>
        <title>Timer services are persistent</title>
        <para>
            Timer services need to support scheduling over extended periods as tasks ar often recurring over extended periods or
            scheduled for soem distant future. The EJB container automatically provides persistence for timer services.            
        </para>
    </section>

    <section>
        <title>Automatic versus programmatic timer registration</title>
        <para>
            If a stateless session bean which is annotated with scheduling requests is deployed in an EJB container, the appropriate timer
            services are automatically created by the container.
        </para>
        <para>
            Alternatively a bean can programatically (e.g. in the context of realizing a user service) register some task with a timer service.
        </para>
    </section>
</section>    
    
