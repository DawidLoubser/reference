<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    version="5.0">
    
    <title>Introduction</title>
    
    <para>
        Most session beans offer services that are either invoked by clients (in the case of stateless and
        stateful session beans), or by the delivery of JMS messages (for message-driven beans). However,
        certain workflow steps may need to be performed based on scheduled, timed events (i.e. without
        direct user interaction).
    </para>
    <para>
        Historically, this was accomplished by using an external timer service (such as <literal>cron</literal>)
        to invoke a program that connects to and invokes a service from an EJB. This mechanism, however, 
        is laborious, and difficult to integrate with a Java EE solution.
    </para>
    <para>
        As of EJB 2.1, JavaEE supported a timer service. However, the timer service was not very mature compared 
        to scheduling frameworks like Unix cron, Quartz, ... As of EJB 3.1 the EJB timer service is a lot more 
        feature rich and flexible. It is largely inspired by cron.
    </para>
    
</section>
