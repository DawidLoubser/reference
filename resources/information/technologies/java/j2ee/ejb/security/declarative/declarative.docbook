<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"--><ns2779:section xmlns:ns2779="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2ee.ejb.security.declarative.declarative">

  <ns2780:title xmlns:ns2780="http://docbook.org/ns/docbook">Declarative Authorization</ns2780:title>
  <ns2781:para xmlns:ns2781="http://docbook.org/ns/docbook">
    Security roles should, where possible, be defined declaratively -- <ns2782:abbrev xmlns:ns2782="http://docbook.org/ns/docbook">i.e.</ns2782:abbrev> 
    within the XML deployment descriptor and not within the code. There are several 
    advantages to using declarative security model: 
    <ns2783:itemizedlist xmlns:ns2783="http://docbook.org/ns/docbook">
      <ns2784:listitem xmlns:ns2784="http://docbook.org/ns/docbook">
        <ns2785:para xmlns:ns2785="http://docbook.org/ns/docbook">Usually bean developers would not have sufficient information about the security
          requirements of the deployment environment. </ns2785:para>
      </ns2784:listitem>
      <ns2786:listitem xmlns:ns2786="http://docbook.org/ns/docbook">
        <ns2787:para xmlns:ns2787="http://docbook.org/ns/docbook">If security is coded into the bean, the re-use opportunities may be limited. </ns2787:para>
      </ns2786:listitem>
      <ns2788:listitem xmlns:ns2788="http://docbook.org/ns/docbook">
        <ns2789:para xmlns:ns2789="http://docbook.org/ns/docbook">Declarative security enables security administrators without coding experience to
          specify and modify the security aspects of the system.</ns2789:para>
      </ns2788:listitem>
    </ns2783:itemizedlist>
    The responsibility of assigning and controlling authorizations is thus not with the
    bean developer, but with the deployer.
  </ns2781:para>
  
  <ns2790:section xmlns:ns2790="http://docbook.org/ns/docbook">
    <ns2791:title xmlns:ns2791="http://docbook.org/ns/docbook">The Assembly Descriptor</ns2791:title>
    <ns2792:para xmlns:ns2792="http://docbook.org/ns/docbook">
      The assembly descriptor is an optional element of the deployment descriptor.
      Enterprise bean developers typically omit this part of the deployment descriptor. It is
      usually added at a later stage when the beans are being deployed.
    </ns2792:para>
    <ns2793:para xmlns:ns2793="http://docbook.org/ns/docbook">
      The assembly descriptor defines security roles and method permissions. In addition to
      these security elements the assembly descriptor can also be used to specify which
      transactional attributes apply to which methods. 
    </ns2793:para>
    <ns2794:para xmlns:ns2794="http://docbook.org/ns/docbook">
      Have a look at the following XML deployment descriptor:
<ns2795:programlisting xmlns:ns2795="http://docbook.org/ns/docbook">
&lt;ejb-jar&gt;
 &lt;enterprise-beans&gt;
   &lt;session&gt;
     &lt;ejb-name&gt;Purchase&lt;/ejb-name&gt;
     ...
   &lt;/session&gt;

   &lt;entity&gt;
     &lt;ejbname&gt;Product&lt;/ejbname&gt;
     ...
   &lt;/entity&gt;
 &lt;/enterprise-beans&gt;

 &lt;assembly-descriptor&gt;

   &lt;security-role&gt;
     &lt;description&gt;Administrators may modify product details.&lt;/description&gt;
     &lt;role-name&gt;administrator&lt;/role-name&gt;
   &lt;/security-role&gt;

   &lt;security-role&gt;
     &lt;description&gt;customers can query product details.&lt;/description&gt;
     &lt;role-name&gt;customer&lt;/role-name&gt;
   &lt;/security-role&gt;

   &lt;method-permission&gt;
     &lt;role-name&gt;administrator&lt;/role-name&gt;
     &lt;method&gt;
       &lt;ejb-name&gt;Product&lt;/ejb-name&gt;
       &lt;method-name&gt;*&lt;/method-name&gt;
     &lt;/method&gt;
   &lt;/method-permission&gt;

   &lt;method-permission&gt;
     &lt;role-name&gt;customer&lt;/role-name&gt;
     &lt;method&gt;
       &lt;ejb-name&gt;Product&lt;/ejb-name&gt;
       &lt;method-name&gt;getName&lt;/method-name&gt;
     &lt;/method&gt;
     &lt;method&gt;
       &lt;ejb-name&gt;Product&lt;/ejb-name&gt;
       &lt;method-name&gt;getPrice&lt;/method-name&gt;
       &lt;method-params&gt;Currency&lt;/method-params&gt;
     &lt;/method&gt;
   &lt;/method-permission&gt;
 &lt;/assembly-descriptor&gt;
&lt;/ejb-jar&gt;
</ns2795:programlisting>
    </ns2794:para>
    <ns2796:para xmlns:ns2796="http://docbook.org/ns/docbook">
        Here we defined to enterprise beans, one <ns2797:literal xmlns:ns2797="http://docbook.org/ns/docbook">Purchase</ns2797:literal>
        session bean and one <ns2798:literal xmlns:ns2798="http://docbook.org/ns/docbook">Product</ns2798:literal> entity bean. The bean
        developer would only include the  
        <ns2799:literal xmlns:ns2799="http://docbook.org/ns/docbook">&lt;enterprise-beans&gt;</ns2799:literal> section.
      <ns2800:note xmlns:ns2800="http://docbook.org/ns/docbook"><ns2801:para xmlns:ns2801="http://docbook.org/ns/docbook">
        Note that managers have access to all product services, while customers may only
        query the product name and use that <ns2802:literal xmlns:ns2802="http://docbook.org/ns/docbook">getPrice</ns2802:literal> ethos
        which receives the currency as argument -- i.e. may query the price of the product in a
        supplied currency.
      </ns2801:para></ns2800:note>
    </ns2796:para>
    <ns2803:para xmlns:ns2803="http://docbook.org/ns/docbook">
      The deployer would add the assembly descriptor in which the security roles are
      defined and in which the security permissions are set.
    </ns2803:para>
  </ns2790:section>
  
  <ns2804:section xmlns:ns2804="http://docbook.org/ns/docbook">
    <ns2805:title xmlns:ns2805="http://docbook.org/ns/docbook">Mapping Principals onto Roles</ns2805:title>
    <ns2806:para xmlns:ns2806="http://docbook.org/ns/docbook">
      Finally the principals have to be mapped onto the security roles. In other words,
      users or user groups (or identifications like smart cards) have to be mapped onto the
      security roles. The way this is done depends on the application server which would
      typically supply tools for mapping user information obtained from directory services or
      user databases onto the security roles.
    </ns2806:para>
  </ns2804:section>
</ns2779:section>