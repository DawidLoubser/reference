<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" -->

<section id="resources.information.technologies.java.j2ee.ejb.clustering.introduction.introduction"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Introduction</title>
  <para>
    Clustering is one of the core strategies of J2EE through which the scalability, availability
    and reliability quality attributes are realised.
  </para>

  <section>
    <title>What is a Cluster?</title>
    <para>
      A cluster is a collection of nodes which perform a common task. A node is a processing
      unit like a machine or a server instance like an application or web server.
    </para>
  </section>
  
  <section>
    <title>What is Clustering?</title>
    <para>
      <emphasis>Clustering</emphasis> refers to the construction of a cluster of nodes which together aim
      to provide a fault-tolerant service which is realised across the nodes of the cluster.
    </para>
  </section>

  <section>
    <title>Why Clustering?</title>
    <para>
       Clustering is usually done for two reasons:

        <orderedlist>
          <listitem><para>
             To achieve fault tolerance, i.e. that a service remains available even
              if a node (a machine) fails.
          </para></listitem>
          <listitem><para>
              To achieve better performance and to be able to handle higher loads through
              distributing the work load across multiple machines.
          </para></listitem>
        </orderedlist>
    </para>
  </section>
  
  <section>
    <title>EJB Application Servers and Clustering</title>
    <para>
      Application servers are meant to host enterprise applications which typically require
      fault tolerance and scaleability. Hence, though it is not required by EJB application  
      servers, it is generally expected that they support clustering of
      <itemizedlist>
        <listitem><para>
           enterprise beans including
           <itemizedlist>
             <listitem><para>
               stateless and stateful session beans and
             </para></listitem>
             <listitem><para>
               entity beans,
             </para></listitem>
           </itemizedlist>
        </para></listitem>
        <listitem><para>
           JNDI naming services with replication of the JNDI tree accross the JNDI
          servers in the cluster.
        </para></listitem>
      </itemizedlist>
    </para>
  </section>
  
  <section>
    <title>Clustering and Web Containers</title>
    <para>
      Web containers host servlets and Java Server Pages which process HTTP requests. These
      are used to process HTTP requests coming from browser or machine clients (the latter
      particularly in the context of web services requested via SOAP/HTTP).      
    </para>
    <para>
      These services also require the scalability and fault tolerance typically achieved 
      through clustering. To this end one implements HTTP session replication across
      web containers in a cluster.
    </para>
  </section>
  
  <section>
    <title>JBoss and Clustering</title>
    <para>
      The JBoss Application Server supports clustering (from version 3.0 onwards). 
      It supports the following features:
      <itemizedlist>
        <listitem><formalpara>
          <title>Fail-over and load balancing for session and enterprise beans</title>
          <para>
            This includes in-memory state replication for stateful session beans.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>Fail-over and load balancing for JNDI naming services</title>
          <para>
            JBoss achieves this by replicating the JNDI tree accross the JNDI servers in the cluster.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>Automatic node discovery</title>
          <para>
            This enables one node assigned to a cluster to
            automatically discovers any other nodes available for that cluster on the network.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>HTTP session replication</title>
          <para>
            with the Tomcat and Jetty servlet/JSP containers.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>Farming</title>
          <para>
            Farming refers to cluster wide hot deployment of enterprise beans, <abbrev>i.e.</abbrev>
            deploying a bean on one of the nodes replicates the bean across all the nodes.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>Pluggable RMI load balancing policies</title>
          <para>
            JBoss enables one to specify your own load balancing policies in a pluggable way.
          </para>
        </formalpara></listitem>
      </itemizedlist>
    </para>
  </section>
</section>