<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns2420:section xmlns:ns2420="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.sessionBeans.stateless.introduction.whatIsStatelessSessionBean">

  <ns2421:title xmlns:ns2421="http://docbook.org/ns/docbook">What is a Stateless Session Bean</ns2421:title>
  <ns2422:para xmlns:ns2422="http://docbook.org/ns/docbook">
    A stateless session bean is a bean which provides services to clients for the duration of 
    a session without maintaining state across service requests.
    Hence they <ns2423:emphasis xmlns:ns2423="http://docbook.org/ns/docbook"> do not require object identity</ns2423:emphasis>, <ns2424:abbrev xmlns:ns2424="http://docbook.org/ns/docbook">i.e.</ns2424:abbrev>
    all instances created through the same home object have the same object identity --
    the <ns2425:literal xmlns:ns2425="http://docbook.org/ns/docbook">isIdentical()</ns2425:literal> query between two session beans created through
    the same home interface will always return <ns2426:literal xmlns:ns2426="http://docbook.org/ns/docbook">true</ns2426:literal>.
    <ns2427:note xmlns:ns2427="http://docbook.org/ns/docbook"><ns2428:para xmlns:ns2428="http://docbook.org/ns/docbook">
      Should you deploy the same stateless session bean twice, there will be two home objects
      and the session beans created through these two home interfaces would have different
      object identity.
    </ns2428:para></ns2427:note>  
  </ns2422:para>
  <ns2429:para xmlns:ns2429="http://docbook.org/ns/docbook">
    These session bean instances are typically pooled to avoid the overheads of excessive
    instance creation and destruction. The fact that no state is maintained makes pooling 
    particularly simple and this is the sole reason why stateless session beans exist (conceptually
    it would suffice to have only stateful session beans).
  </ns2429:para>
</ns2420:section>