<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.homeInterface.services"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title role="Home interface services">Services specified in the home interface</title>
 <para>
    A session bean exists only for a particular client session. Stateless session beans are
    always created via a default <literal>create()</literal> method (one without arguments) which is
    ultimately mapped onto a corresponding <literal>ejbCreate()</literal> method of the bean
    implementation class. Stateful session beans may contain further <literal>create</literal>
    methods with other arguments containing information about their state.
 </para>
  <para>
    Note that the <literal>create</literal> methods return a reference to a potentially remote
    object which implements the remote interface. The method may throw 2 exceptions,
    <literal>java.rmi.RemoteException</literal> and <literal>javax.ejb.CreateException</literal>.
  </para>  
  <para>
    The remove methods inherited from
    <literal>javax.ejb.EJBHome</literal> suffice and we do not have to add any further methods to
    the home interface of our stateless session bean.
  </para>
  <note><para>
    Note that clients are completely decoupled from the actual bean implementations, 
    <abbrev>i.e.</abbrev> they interface solely with the home and remote interfaces.
  </para></note>
</section>  
 
