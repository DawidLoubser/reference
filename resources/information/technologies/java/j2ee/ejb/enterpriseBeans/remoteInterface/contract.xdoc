<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.remoteInterface.contract"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title role="Remote interface as contract">The remote interface as contract</title>
  <para>
     Like Java interfaces, remote interfaces represent part of 
     the client contract containing
     <itemizedlist>
        <listitem><para>
          the service name,
        </para></listitem>
        <listitem><para>
          the preconditions of the service
          <note><para>
            These are the exceptions. A service will check if the preconditions of a service are
            met. If not, the service provider will inform the client who requested the service
            that the requested service is not provided by throwing an exception. For example,
            a precondition for debiting an account may be that there are sufficient funds. The
            account will check this condition before providing the service. If the check
            fails, the account will notify the client that the debit service is not provided because
            of insufficient funds by throwing an <literal>InsufficientFundsException</literal>.
          </para></note>  
        </para></listitem>  
        <listitem><para>
          the information clients must provide when requesting the service,
        </para></listitem>
        <listitem><para>
          the object/information returned by the service.
        </para></listitem>  
      </itemizedlist>
   </para>
 </section>
