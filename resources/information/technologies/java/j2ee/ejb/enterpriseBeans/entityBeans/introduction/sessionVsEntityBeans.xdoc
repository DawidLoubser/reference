<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.entityBeans.introduction.sessionVsEntityBeans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Session Versus Entity Beans</title>
  <para>
    Session beans represent actions or user tasks (use cases). Entity Beans, on the other
    hand, represent information stored in persistent storage, typically a database. When the
    bean is created its data store representation (e.g. a row in a relational database) is
    created and if the been is removed, the relevant database record/struture is removed too.
  </para>
  <para>
    While a session bean is dedicated to a single client, entity beans are potentially
    accessed by multiple clients and hence they require support for concurrency. This support
    is automatically provided by the bean container.
  </para>
  <para>
    Recall that session beans were identified by focusing on the verbs of the
    requirements specification. A simple, but effective method to identify the entity beans is
    to look at a textual description of your system and to underline all the nouns. The nouns
    will refer to objects and those objects which have a persistent state would typically be
    entity objects. Generally entity beans model business data while session beans model
    business processes.
  </para>
</section>
