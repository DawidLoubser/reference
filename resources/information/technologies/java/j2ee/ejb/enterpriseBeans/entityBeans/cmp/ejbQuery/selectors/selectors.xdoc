<?xml version="1.0" encoding="UTF-8"?>
  <section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.entityBeans.cmp.ejbQuery.selectors.selectors"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Defining Selectors</title>
    <para>
      Similarly, we define selectors in EJB-QL. The selector methods are meant for internal
      usage and are hence not defined in either the home or the local-home interface. Instead
      their signature is specified via an abstract <literal>ejbSelect</literal>
      method in the bean implementation class itself (they are solely an implementation detail).
      The implementation of these selector methods is, once again, left to the container.
    </para>
    <para>
      For example, the <literal>TaskBean</literal> implementation class
      specifies an abstract method for a selector retrieving all time stretches which fall (at
      least partially) within a specified period:
<programlisting>
  <xi:include parse="text" href="../../../../../source/TaskManager/src/businessLogic/TaskBean.java" />
</programlisting>  
    </para>
    <para>
      The query for the selector is, as with finder methods, defined in EJB-QL within the
      ejb-jar deployment descriptor:
<programlisting>
  <xi:include parse="text" href="../../../../../source/TaskManager/META-INF/ejb-jar.xml" />
</programlisting>  
    </para>
  </section>
