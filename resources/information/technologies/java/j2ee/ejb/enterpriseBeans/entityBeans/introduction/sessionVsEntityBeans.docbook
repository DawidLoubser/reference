<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns1518:section xmlns:ns1518="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.entityBeans.introduction.sessionVsEntityBeans">

  <ns1519:title xmlns:ns1519="http://docbook.org/ns/docbook">Session Versus Entity Beans</ns1519:title>
  <ns1520:para xmlns:ns1520="http://docbook.org/ns/docbook">
    Session beans represent actions or user tasks (use cases). Entity Beans, on the other
    hand, represent information stored in persistent storage, typically a database. When the
    bean is created its data store representation (e.g. a row in a relational database) is
    created and if the been is removed, the relevant database record/struture is removed too.
  </ns1520:para>
  <ns1521:para xmlns:ns1521="http://docbook.org/ns/docbook">
    While a session bean is dedicated to a single client, entity beans are potentially
    accessed by multiple clients and hence they require support for concurrency. This support
    is automatically provided by the bean container.
  </ns1521:para>
  <ns1522:para xmlns:ns1522="http://docbook.org/ns/docbook">
    Recall that session beans were identified by focusing on the verbs of the
    requirements specification. A simple, but effective method to identify the entity beans is
    to look at a textual description of your system and to underline all the nouns. The nouns
    will refer to objects and those objects which have a persistent state would typically be
    entity objects. Generally entity beans model business data while session beans model
    business processes.
  </ns1522:para>
</ns1518:section>