<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns1169:section xmlns:ns1169="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.entityBeans.cmp.ejbQuery.querySource.querySource">

  <ns1170:title xmlns:ns1170="http://docbook.org/ns/docbook">Specifying the Source for a Query</ns1170:title>
  <ns1171:para xmlns:ns1171="http://docbook.org/ns/docbook">
    The FROM clause specifies and constrains the domain of the query. 
  </ns1171:para>
  
  <ns1172:section xmlns:ns1172="http://docbook.org/ns/docbook">
    <ns1173:title xmlns:ns1173="http://docbook.org/ns/docbook">Joins With An Empty Domain</ns1173:title>
    <ns1174:para xmlns:ns1174="http://docbook.org/ns/docbook">
      If we create a join with an empty domain, the result set will be empty. For example,
      consider a query across 2 unrelated entity beans,  
      <ns1175:literal xmlns:ns1175="http://docbook.org/ns/docbook">Course</ns1175:literal> and <ns1176:literal xmlns:ns1176="http://docbook.org/ns/docbook">Employee</ns1176:literal>
<ns1177:programlisting xmlns:ns1177="http://docbook.org/ns/docbook">
SELECT Object(c) FROM Course c, Employee e
</ns1177:programlisting> 
   </ns1174:para> 
   <ns1178:para xmlns:ns1178="http://docbook.org/ns/docbook">
     This query returns all the <ns1179:literal xmlns:ns1179="http://docbook.org/ns/docbook">Course</ns1179:literal> entity beans provided that there exist
     <ns1180:literal xmlns:ns1180="http://docbook.org/ns/docbook">Employee</ns1180:literal> entity beans. Notice that as soon as there
      are any employees, no matter how many or what their information is, the query will return
      a collection of all courses.
    </ns1178:para>
  </ns1172:section>
  
</ns1169:section>