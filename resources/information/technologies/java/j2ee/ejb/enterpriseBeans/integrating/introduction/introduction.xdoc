<?xml version="1.0" encoding="UTF-8"?>
    
<section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.integrating.introduction.introduction"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Introduction</title>
  <para>
    In most realistic EJB-based applications the high-level client workflow is typically
    managed by a session bean (stateless or stateful) which calls other enterprise beans
    (session and entity beans) for lower level business logic and business data. It is thus
    quite common that enterprise beans will call other enterprise beans.
  </para>
  <para>
    Consider, for example, our loan calculator session bean. This bean may be called from
    within a session bean which controls the workflow for a home-loan application.
  </para>
  <para>
    There are basically two ways in which this can be done. 
    <orderedlist>
      <listitem>
        <para>
          The bean obtains the reference to home interface of the enterprise bean whose
          services it would like to make use of from a naming service (via the JNDI). Via the home
          interface a handle to the remote interface is obtained and service requests are issued
          as if the bean is a remote client. 
        </para>
      </listitem>
      <listitem>
        <para>
          The bean obtains the reference to local home interface of the enterprise bean whose
          services it would like to make use of from a naming service. Via the local home
          interface a handle to the local interface is obtained and service requests are issued as
          local nethod calls.
        </para>
      </listitem>
    </orderedlist>
  </para>
</section>
