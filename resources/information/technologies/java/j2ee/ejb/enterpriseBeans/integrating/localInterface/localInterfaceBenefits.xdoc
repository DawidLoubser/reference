<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.integrating.localInterface.localInterfaceBenefits"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Benefits of using local interfaces</title> 
  <para>
    To address this problem, the EJB 2.0 specification introduced both local interfacing to
    enterprise beans. If the bean implements the remote interface (as we have done thus far), the
    bean is resolved via a remote call irrespective of whether it is called from a remote client or
    bean or from a local bean hosted within the same application server.
  </para>
  <para>
    An enterprise bean may thus implement a remote interface, a local interface or both. In the
    latter case remote clients access the bean via RMI while local beans use local calls. Local
    interface are often used when beans to request services from other beans hosted by the same EJB
    container via local method calls. The steps performed during a local service request reduce to:
  </para>
  <para/>
  <orderedlist>
    <listitem>
      <para>A client calls a local object (instead of the EJBObject). </para>
    </listitem>
    <listitem>
      <para>The local object applies the middleware support services. </para>
    </listitem>
    <listitem>
      <para>The local object calls the bean implementation via a standard Java call. </para>
    </listitem>
    <listitem>
      <para>The return values are passed via the local object back to the local enterprise bean.</para>
    </listitem>
  </orderedlist>
  <para/>
</section>
