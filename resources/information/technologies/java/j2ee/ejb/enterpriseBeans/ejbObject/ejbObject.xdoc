<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2ee.ejb.enterpriseBeans.ejbObject.ejbObject"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title role="The EJBObject">The EJBObject</title>
  <para> 
    The remote interface is implemented by the EJB object. It acts as interception layer for the
    enterprise bean. To this end the EJB objects generated by
    the container implement the beans remote interface which has to extend
    <literal>javax.ejb.EJBObject</literal> which in turn extends <literal>java.rmi.Remote</literal>.
    The interface <literal>EJBObject</literal> is defined by the EJB standard as follows:<programlisting><![CDATA[
package javax.ejb;

public interface EJBObject extends java.rmi.Remote
{
 public Handle  getHandle()     throws java.rmi.RemoteException;

 public void    remove()        throws java.rmi.RemoteException;

 public boolean isIdentical(EJBObject o) throws java.rmi.RemoteException;

 public EJBHome getEJBHome()    throws java.rmi.RemoteException;

 public Object  getPrimaryKey() throws java.rmi.RemoteException;
}
]]></programlisting>
  </para>
  <para> Lets have a closer look at the purpose of these methods: <itemizedlist>
      <listitem>
        <formalpara>
          <title>getHandle()</title>
          <para> returns a persistent reference to this EJB object. It is similar to persistent
            CORBA references enabling clients to reconnect to the same EJB object, in the vase of
            entity beans even across server crashes. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>remove()</title>
          <para> destroys the EJB object enabling the container to reclaim resources held by that
            EJB object. This method should be called by the client when the session bean is no
            longer required. <note>
              <para> in the case of entity beans this method will remove the entity object from
                persistent storage. </para>
            </note>
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>isIdentical()</title>
          <para> returns <literal>true</literal> if this EJB object is identical to the object
            supplied as argument. <note>
              <para> All instances of a stateless session bean are identical, <abbrev>i.e.</abbrev>
                stateless session beans have no identity </para>
            </note>
          </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>getEJBHome()</title>
          <para> returns a reference to the home object which implements the home interface and has
            services which support the life cycle of the enterprise bean. </para>
        </formalpara>
      </listitem>
      <listitem>
        <formalpara>
          <title>getPrimaryKey()</title>
          <para> is used only for entity beans. It returns the primary key identifying the
            persistent entity object. </para>
        </formalpara>
      </listitem>
    </itemizedlist>
  </para>
  <para>
    The <literal>EJBObject</literal> acts as interception layer. The EJB container adds the code
    for the enterprise services like transactions, security and so on.
  </para>  
</section>
