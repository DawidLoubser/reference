<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0b5/rng/docbookxi.rng" type="xml"?>
<section
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>The Servlets Runtime Environment</title>
    <para>
        The component implementations that you write live in a <emphasis>web container</emphasis> - a runtime
        environment which has several low-level responsibilities such as
        <itemizedlist>
            <listitem>
                <para>receiving network connections from clients,</para>
            </listitem>
            <listitem>
                <para>creating objects that represent the channels to, and from, the user,</para>
            </listitem>
            <listitem>
                <para>handing these objects to the correct components,</para>
            </listitem>
            <listitem>
                <para>making sure that your components follow their predefined lifecycle, i.e. that they are created and
                destroyed at the correct times.</para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        Furthermore, the web container is also responsible for the following:
        <itemizedlist>
            <listitem>
                <para>Handling multiple concurrent workflows, i.e. several users accessing your Servlet at the same time.
                The container is multi-threaded, and will create thread pools (re-usable connection handler
                threads) for high concurrency.</para>
            </listitem>
            <listitem>
                <para>Automatically create and maintain a user's <emphasis>session</emphasis> - an common object 
                available across the requests from a particular user which is used to store temporary, user-specific
                information (such as a shopping cart, or profile information).</para>
            </listitem>
            <listitem>
                <para>Enforce any configured security constraints. In J2EE, security is seldom coded, as the built-in
                    declarative security mechanism makes it easy to rather <emphasis>configure</emphasis> role-based 
                    access to resources.</para>
            </listitem>
        </itemizedlist>
    </para>
    
    <!-- Common objects: request / response etc -->
    <xi:include href="commonObjects/commonObjects.xdoc"/>
    
    <!-- Directing flow -->
    <xi:include href="workflowControl/workflowControl.xdoc"/>
    
</section>
