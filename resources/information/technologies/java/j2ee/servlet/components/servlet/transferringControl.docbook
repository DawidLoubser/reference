<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Transferring control to other web components</title>
    <para>
        After invoking business logic, servlets typically transfer control
        to view components such as JSP in order to generate the response.
    </para>
    <para>
        To transfer control to another web component, you invoke the <literal>forward(...)</literal> method 
        of a <literal>RequestDispatcher</literal>. When a request is forwarded, the request URI  
        is changed (it is set to the path requested from the dispatcher.) The original URI (as requested by the client) 
        and its constituent parts are stored as String request attributes (for possible later inspection) with the following names: 
        <programlisting><![CDATA[
javax.servlet.forward.request_uri
javax.servlet.forward.context_path
javax.servlet.forward.servlet_path
javax.servlet.forward.path_info
javax.servlet.forward.query_string
        ]]></programlisting> 
        For example:
        <programlisting language="java"><![CDATA[
public class MyServlet extends HttpServlet 
{ 
    public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException 
    { 
        // 'Forward' the request to a JSP component
        RequestDispatcher dispatcher = 
            request.getRequestDispatcher("/display-page.jspx");
            
        dispatcher.forward(request, response); 
    }
}
        ]]></programlisting>
         
        The <literal>forward</literal> method should be used to give another resource responsibility for 
        replying to the user. If you have already accessed a <literal>ServletOutputStream</literal> or 
        <literal>PrintWriter</literal> object within the servlet, you cannot use this method; doing so 
        throws an <literal>IllegalStateException</literal>.
    </para>
    
    <section>
        <title>Including content</title>
        <para>
            A special case of transferring control is to <emphasis>temporarily transfer control
            to a another resource, and include the output of that resource</emphasis> in the
            current output.
        </para>
        <para>
            This is done by invoking the <literal>include(...)</literal> service of a <literal>RequestDispatcher</literal>,
            instead of the forward() service. After the inclusion is performed, control is transferred back to the
            current component, which may continue servicing the request (e.g. sending further output to the client).
          <programlisting language="java"><![CDATA[
public class MyServlet extends HttpServlet 
{ 
    public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException 
    { 
        // Generate some content
        //...
        
        // 'Include' the contents (output) generated by another
        // servlet (based on its URI)
        RequestDispatcher dispatcher = 
            request.getRequestDispatcher("/some/servlet");
            
        dispatcher.include(request, response);
        
         
        // Generate some more content
        //... 
    }
}
        ]]></programlisting>
        </para>
    </section>

</section>