<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>The Life Cycle of JSP</title>
    <para>
        A JSP follows basically the same lifecycle as a Java Servlet, as all JSPs
        are, in fact, transformed and compiled to Servlets. Since JSP is used to
        render information only, the JSP developer does however not typically
        care about the implementation of servlet lifecycle methods such as
        <literal>init()</literal> and <literal>destroy()</literal>. The typical
        deployment lifecycle is as follows:
        <itemizedlist>
            <listitem>
                <para>The JSP is created using the tool of your choice. In the case of JSP2.x
                    Documents, a generic XML editor suffices.</para>
            </listitem>
            <listitem>
                <para>The JSP is packaged within the web application (by being included anywhere in the 
                    directory structure of your application), and deployed to the server.
                </para>
            </listitem>
            <listitem>
                <para>The first time the JSP is invoked (either directly by the user, or more typically, indirectly
                as the view for a Servlet) it is compiled to an automatically-generated Servlet, which is instantiated, 
                    initialised, and executed. (This may initially cause a short delay.)</para>
            </listitem>
            <listitem>
                <para>Upon subsequent requests, the in-memory servlet is invoked, providing very
                high performance compared to <emphasis>interpreted</emphasis> scripting languages
                such as PHP</para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        All text in a JSP, whether it is static or dynamically generated, are eventually
        converted to <literal>out.println(...)</literal> statements (which print text out onto the Servlet output stream). 
    </para>
</section>