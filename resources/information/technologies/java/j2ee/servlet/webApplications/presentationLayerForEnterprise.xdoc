<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0b5/rng/docbookxi.rng" type="xml"?>
<section
        xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>Presentation Layer for the Enterprise</title>
    <para>
        Web modules (as a whole) often act as the
        <emphasis>view</emphasis>
        for an enterprise application. However,
        internally, they are again segregated according to model, view and controller components. This is an example
        of MVC at multiple levels of granularity.
    </para>
    <figure>
        <!-- Original: The diagram 'IterativeMVC' in MD9 model '../architecture/models/servletsAPIModel.xml.zip' -->
        <title>Web Applications both contain, and are, views</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="./iterativeMVC.jpg"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>
        Before implementing a web module, it needs to be clear which component(s) will perform the role of workflow
        controller for the use-cases. In other words,<emphasis>where exactly does the business process lie</emphasis>?
        If the workflow controller is implemented as an EJB (typically a stateful or stateless session bean) then the
        use-case is available to clients through access channels other than the web.
    </para>
    <note>
        <para>
            For simpler or very specific systems, the entire application is often contained within the Web Module.
            Such a design would mean that the web module is effectively the heart of the system, which, for complex
            systems with many quality requirements (scalability, transactions, security, integrability), is often best
            left to an EJB module, or even a Business Process implemented within a Services-Oriented Architecture
            (e.g. a BPEL process on an Enterprise Services Bus).
        </para>
    </note>
</section>
