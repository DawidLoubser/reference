<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns3286:section xmlns:ns3286="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2ee.introduction.j2eeDotnet.j2eeDotnet">

  <ns3287:title xmlns:ns3287="http://docbook.org/ns/docbook">J2EE vs Microsoft.Net </ns3287:title>
  <ns3288:para xmlns:ns3288="http://docbook.org/ns/docbook">
    J2EE and Microsoft.Net are currently the two dominant reference architectures used for 
    enterprise systems. They have many commonalities, but there are also a number of 
    distinct differences between them.
  </ns3288:para>  
  <ns3289:section xmlns:ns3289="http://docbook.org/ns/docbook">
    <ns3290:title xmlns:ns3290="http://docbook.org/ns/docbook">Commonalities between J2EE and Microsoft.Net</ns3290:title>
    <ns3291:para xmlns:ns3291="http://docbook.org/ns/docbook">
      <ns3292:itemizedlist xmlns:ns3292="http://docbook.org/ns/docbook">
        <ns3293:listitem xmlns:ns3293="http://docbook.org/ns/docbook"><ns3294:para xmlns:ns3294="http://docbook.org/ns/docbook">
          Both provide a natural 3-tierd architecture with the presentation layer being
          cleanly seperated from the business logic layer and the back-end layer. 
        </ns3294:para></ns3293:listitem>
        <ns3295:listitem xmlns:ns3295="http://docbook.org/ns/docbook"><ns3296:para xmlns:ns3296="http://docbook.org/ns/docbook">
          Both provide convenient mechanisms for processing HTTP service requests, the former
          through Java Server Pages and Servlets, the latter via ASP.Net. 
        </ns3296:para></ns3295:listitem>
        <ns3297:listitem xmlns:ns3297="http://docbook.org/ns/docbook">
          <ns3298:para xmlns:ns3298="http://docbook.org/ns/docbook">Both provide a container for business logic components. </ns3298:para>
        </ns3297:listitem>
        <ns3299:listitem xmlns:ns3299="http://docbook.org/ns/docbook"><ns3300:para xmlns:ns3300="http://docbook.org/ns/docbook">
          Service requests are intercepted in order to apply enterprise services like
          concurrency, transactions and security. 
        </ns3300:para></ns3299:listitem>
        <ns3301:listitem xmlns:ns3301="http://docbook.org/ns/docbook"><ns3302:para xmlns:ns3302="http://docbook.org/ns/docbook">
          Both, J2EE and .Net, support processing of asynchronous service requests
          from message queues. J2EE also supports topics.
        </ns3302:para></ns3301:listitem>
        <ns3303:listitem xmlns:ns3303="http://docbook.org/ns/docbook"><ns3304:para xmlns:ns3304="http://docbook.org/ns/docbook">
          Both, J2EE and .Net support session management and security context propagation.
        </ns3304:para></ns3303:listitem>
        <ns3305:listitem xmlns:ns3305="http://docbook.org/ns/docbook"><ns3306:para xmlns:ns3306="http://docbook.org/ns/docbook">
          Both provide integration technologies for integrating with the backend, though J2EE
          is a lot more capable in integrating with non-Microsoft and non-Java technologies.
        </ns3306:para></ns3305:listitem>
      </ns3292:itemizedlist>
    </ns3291:para>
  </ns3289:section>
  
  <ns3307:section xmlns:ns3307="http://docbook.org/ns/docbook">
    <ns3308:title xmlns:ns3308="http://docbook.org/ns/docbook">Differences between J2EE and Microsoft.Net</ns3308:title>
    <ns3309:para xmlns:ns3309="http://docbook.org/ns/docbook">
      There are, however, some significant differences between these two reference
      architectures including
      <ns3310:itemizedlist xmlns:ns3310="http://docbook.org/ns/docbook">
        <ns3311:listitem xmlns:ns3311="http://docbook.org/ns/docbook"><ns3312:para xmlns:ns3312="http://docbook.org/ns/docbook">
            J2EE is primarily a specification, while .Net is a vendor-specific implementation
            packaging together a range of vendor tools.
            There are well over 50 J2EE application server vendors including BEA, IBM, Sun,
            Netscape, Macromedia, Oracle, SAP, Sybase, and many others. There are even
            production-standard open-source implementations like JBoss. 
        </ns3312:para></ns3311:listitem>
        <ns3313:listitem xmlns:ns3313="http://docbook.org/ns/docbook"><ns3314:para xmlns:ns3314="http://docbook.org/ns/docbook">
            .Net locks users into the Microsoft platform though .Net clients can make use of
            J2EE servers and vice versa (typically via SOAP). 
        </ns3314:para></ns3313:listitem>
        <ns3315:listitem xmlns:ns3315="http://docbook.org/ns/docbook"><ns3316:para xmlns:ns3316="http://docbook.org/ns/docbook">
          Both, .Net and J2EE have good support for XML and Web services though many recent 
          studies point to the J2EE support being more standards oriented, more efficient and
          more stable.
        </ns3316:para></ns3315:listitem>
        <ns3317:listitem xmlns:ns3317="http://docbook.org/ns/docbook"><ns3318:para xmlns:ns3318="http://docbook.org/ns/docbook">
          .Net supplies language independence. Business logic components can be implemented in
          any of the Microsoft programming languages with a preference towards C# which is in its
          core a Java clone. In J2EE clients can be developed in any language, but business logic
          components hosted by an EJB application server must be developed in Java. 
        </ns3318:para></ns3317:listitem>
        <ns3319:listitem xmlns:ns3319="http://docbook.org/ns/docbook"><ns3320:para xmlns:ns3320="http://docbook.org/ns/docbook">
          .Net uses DCOM/COM+ for its low-level integration while J2EE uses RMI/IIOP and hence
          effecively CORBA as its low-level integration technology. The former provides excellent
          integration with Microsoft products while the latter is a non-proprietary and platform
          neutral integration technology. Bridging tools are available but they increase system
          complexity and decrease performance. 
        </ns3320:para></ns3319:listitem>
        <ns3321:listitem xmlns:ns3321="http://docbook.org/ns/docbook"><ns3322:para xmlns:ns3322="http://docbook.org/ns/docbook">
          .Net does not support automatic persistence management, <ns3323:abbrev xmlns:ns3323="http://docbook.org/ns/docbook">i.e.</ns3323:abbrev>
          and equivalent of stateful session beans and entity beans.
          This is probably due to the lack of persistent object references (and persitent state)
          in the quasi-object-oriented middleware protocol DCOM/COM+. 
          CORBA and RMI, on the other hand, do support persitent references and state. 
        </ns3322:para></ns3321:listitem>
        <ns3324:listitem xmlns:ns3324="http://docbook.org/ns/docbook"><ns3325:para xmlns:ns3325="http://docbook.org/ns/docbook">
          J2EE is a proven and mature architecture with many solid enterprise implementations
          running. .Net still has to prove itself. 
        </ns3325:para></ns3324:listitem>
        <ns3326:listitem xmlns:ns3326="http://docbook.org/ns/docbook"><ns3327:para xmlns:ns3327="http://docbook.org/ns/docbook">
          .Net, being a product, provides a standard range of client side development
          tools. This is typically outside the scope of J2EE, though different J2EE vendors
          provide a wide range of different tools for this purpose.
        </ns3327:para></ns3326:listitem>
      </ns3310:itemizedlist>
    </ns3309:para>
  </ns3307:section>  
</ns3286:section>