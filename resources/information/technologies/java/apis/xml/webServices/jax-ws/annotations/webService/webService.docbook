<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author: fritz@solms.co.za -->
<section 
    xmlns="http://docbook.org/ns/docbook" 
    xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0">
    <title>@WebService</title>
    <para>
        The <literal>@WebService</literal> annotation is used to specify that
        a class implements a web service. It defines a set of parameters 
        which enable one to customize a generated WSDL or to specify an
        existing WSDL which the web service implements. All the parameters
        are optional (in the case of the WSDL being generated).
        <itemizedlist>
            <listitem><formalpara>
                <title>name</title>
                <para>
                    The service name which will be mapped onto
                    <literal>wsdl:portType</literal>. By default
                    the simple name of the Java class or interface
                    is used.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>wsdlLocation</title>
                <para>
                    A URL specifying where the WSDL is hosted. This is used
                    if the WSDL is not generated, i.e. in a 
                    <emphasis>contract-first</emphasis> approach.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>serviceName</title>
                <para>
                    The name that should be given to the web service. This
                    maps onto <literal>wsdl:service</literal>. By default
                    the method name is used.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>targetNamespace</title>
                <para>
                    The XML namespace to be used for the WSDL and the 
                    generated XML elements.
                    The default target namespace is derived from the
                    Java package name.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>endpointInterface</title>
                <para>
                    The complete name of the service endpoint
                    interface defining the serviceâ€™s abstract Web
                    Service contract. This annotation allows the
                    developer to separate the interface contract
                    from the implementation. If this annotation is
                    present, the service endpoint interface is used
                    to determine the abstract WSDL contract
                    (portType and bindings).
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>
    <para>
        For example:
        <programlisting language="java"><![CDATA[
@Stateless
@WebService(
    name = "SalesService",
    targetNamespace = "http://www.vendorX.com/2010/10/SalesService")
public class SalesBean 
{
    @WebMethod
    public Invoice processOrder(Order order) 
    {
        ...
    }
}            
]]></programlisting>
    </para>
    <para>
        Alternatively we may specify an interface separately:
        <programlisting language="java"><![CDATA[
@Local(Sales.class)
@Remote(Sales.class)
@Stateless
@WebService(
    name = "SalesService",
    endPointInterface = "com.vendorX.sales.Sales",
    targetNamespace = "http://www.vendorX.com/2010/10/SalesService")
public class SalesBean 
{

    public Invoice processOrder(Order order) 
    {
        ...
    }
}            
]]></programlisting>
            with the corresponding interface
            <programlisting language="java"><![CDATA[
@Remote
@Local
@WebService
public interface Sales
{
    public Invoice processOrder(Order order)
}
]]></programlisting>
            
    </para>
</section>
