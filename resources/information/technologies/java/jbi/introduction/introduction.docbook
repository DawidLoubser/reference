<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0">
  
  <title>Introduction</title>
  <para>
    JBI is the result of an industry-wide effort to standardise business integration technologies
    and deliver them on the Java platform.
  </para>  
  
  <section>
      <title>What is JBI?</title>
    <indexterm>
      <primary>JBI</primary>
      <secondary>definition</secondary>
    </indexterm>
      <para>
       JBI (package <literal>javax.jbi</literal>) is a public standard specification for an Enterprise Services Bus.
      It specifies a standard framework for hosting plug in components in a managed environment, and 
      allows them to interact using a WSDL 2.0-based messaging system and the WSDL's services model. 
      The goal is to allow users to obtain plug-in components that provide all the functions needed
      to provide an integration solution, without getting locked into a particular vendor. Components are portable across JBI implementations.
      Instead of the developer having to write all the integration functionality, one simply deploys configurations
      to the plug-in components.
      </para>
    <para>
      JBI is often referred to as a <quote>container of containers</quote>, as many other containers
      (service engines, binding components) are plugged in, and to some extent managed by, a JBI
      environment.
    </para>
    
      <para>
      JBI aims to be the standard for Java-based services oriented enterprise architectures in a
      similar way as Java EE has become the Java standard for object-oriented enterprise architectures.
    </para>    
  </section>
  
  <section>
      <title>Who supports / does not support JBI?</title>
      <para>
      At this stage most of the role players within the Java-based SOA community are behind JBI with
      the notable exceptions of IBM and BEA, who are promoting their own <acronym>SCA</acronym> (Service
        Component Architecture) standard, which is quite different to JBI's more typical mediated message exchange
        ESB-based model.
    </para>
  </section>

</section>