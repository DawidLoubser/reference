<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title>Building a simple server (WSDL-first)</title>
    
    <indexterm>
        <primary>JAX-WS</primary>
        <secondary>server</secondary>
        <tertiary>WSDL-first</tertiary>
    </indexterm>
    
    <para>
        A <quote>WSDL-first</quote> server is one where we wish to implement the logic (i.e. provide
        the services to clients) as described by a WSDL contract. JAX-WS supports the binding of
        a service provider to a lightweight, on-the-fly HTTP server, even in Java SE. Of course, this
        method of hosting a service is not recommended for enterprise applications, where the qualities
        provided by hosting the service in a web- or EJB container are preferable. In both cases, however,
        the service implementation logic looks the same.
    </para>
    <para>
        Using our previously-discussed unit converter contract, let's build a simple Java SE-based implementation.
        The steps involved are:
        <itemizedlist>
            <listitem>
                <para>Setting up our ant-based project</para>
            </listitem>
            <listitem>
                <para>Obtaining or writing our WSDL contract</para>
            </listitem>
            <listitem>
                <para>Generating the portable Java artifacts from the WSDL</para>
            </listitem>
            <listitem>
                <para>Writing a service implementation class which <emphasis>implements the generated service interface</emphasis>,
                fulfilling the contract.</para>
            </listitem>
            <listitem>
                <para>Writing a launcher program which starts our service (binds it to an address). This  step is not
                necessary when deploying the service in a container (such as an EJB container).</para>
            </listitem>
        </itemizedlist>
    </para>
    
    <xi:include href="project.docbook"/>
    <xi:include href="serviceContract.docbook"/>
    <xi:include href="generatingCode.docbook"/>
    <xi:include href="serviceImplementation.docbook"/>
    <xi:include href="serviceDeployment.docbook"/>
</section>