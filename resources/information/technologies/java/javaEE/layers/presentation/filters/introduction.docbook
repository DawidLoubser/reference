<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>

<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Introduction</title>
    
    <para>
        A <emphasis>filter</emphasis> is an object that can transform the headers and/or contents of a 
        request or response. Filters differ from typical web components (Servlets, JSP documents) 
        in that filters usually do not themselves create a response. Instead, a filter provides functionality that can 
        be “attached” to any kind of web resource. Consequently, a filter should not have 
        any dependencies on a web resource for which it is acting as a filter; this way it 
        can be composed with more than one type of web resource. The main tasks that a 
        filter can perform are as follows:
        <itemizedlist>
            <listitem>
                <para>Query the request and act accordingly.</para>
            </listitem>
            <listitem>
                <para>Block the request-and-response pair from passing any further.</para>
            </listitem>
            <listitem>
                <para>Modify the request headers and data. You do this by providing a customised 
                    version of the request.</para>
            </listitem>
            <listitem>
                <para>Modify the response headers and data. You do this by providing a customised 
                    version of the response. 
                </para>
            </listitem>
            <listitem>
                <para>
                    Interact with external or environmental resources.
                </para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        Applications of filters include custom authentication, logging, image conversion, data 
        compression, encryption, tokenising streams, XML transformations, and so on.
    </para>
    <para>
        You can configure a web resource to be filtered by a chain of zero, one, or more 
        filters in a specific order. This chain is specified when the web application 
        containing the component is deployed (via the deployment descriptor) and is instantiated 
        when a web container loads the component.
    </para>
    <note>
        <indexterm><primary>pipes and filters</primary></indexterm>
        <para>
            This is a typical example of the <emphasis>pipes and filters</emphasis>
            architectural pattern.
        </para>
    </note>
    
    
</section>