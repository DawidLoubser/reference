<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>The history of Java Server Pages</title>
  <indexterm>
    <primary>JSP</primary>
    <secondary>history</secondary>
  </indexterm>
  
  <para>
    JSP was originally introduced to simplify the creation of dynamic web pages,
    as compared to Servlets. Servlets are (often complex) Java classes, editing 
    of which is beyond the ability of many web designers.
  </para>
  <para>
    The first versions (1.x) of JSP thus allowed most of the contents of a
    dynamic web page to be specified as pure HTML, interspersed with
    special tags (scriptlets) written in Java. Unfortunately, such as JSP
    page, at authoring time, is neither a Java class, nor a valid HTML page,
    and - in consequence - such pages can be very complex to maintain. The 
    ability to write arbitrary Java code in such pages also meant that complex
    systems were often implemented entirely as snippets of Java code in JSP
    pages, resulting in a non-layered system which can become very complex 
    indeed. This had a detrimental effect on the standards-compliance, and,
    in general, the <emphasis>quality</emphasis> of web page markup rendered
    and sent to browsers.
  </para>
  <para>
    With the second iteration of JSP (2.x) an entirely different approach is
    available: JSP documents, now forced to be well-formed XML, simply become
    <emphasis>views</emphasis> (renderers or capturers of information) in a layered, model-view-controller
    system which makes as much use as possible of the Java EE framework to host
    components with appropriate responsibilities. The great simplification
    of development bestowed on developers with the release of Java EE version 5
    makes this an alluring prospect.
  </para>
  <para>
    JSP 2.x, with the unified expression language (EL) means that Java code is
    completely eliminated from the markup, making pages simpler and more accessible
    to web developers. Custom logic is available as custom XML tags (using the
    XML name spaces mechanism), ensuring that the page remains manageable and
    validatable at all times, and that standard XML editing tools can be used.
  </para>
  
</section>