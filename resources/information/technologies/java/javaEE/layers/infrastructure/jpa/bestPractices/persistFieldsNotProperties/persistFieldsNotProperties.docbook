<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    
    <title>Persist fields, not properties</title>
    <para>
        Your are persisting the internal data structure, the data, not the user properties which could be derived attributes
        which are calculated from the normalised persisted data structure. 
        It is conceptually cleaner to specify the persistence
        on the data and not on <literal>get</literal> and <literal>set</literal> methods.
    </para>
    <para>
        Furthermore, it is more intuitive to mark a data field as <literal>transient</literal>
        than to specify this on the <literal>get()</literal> method.
    </para>
    <para>
        Also, developers may decide to include certain logic within the <literal>get</literal> or <literal>set</literal>
        methods. The order of executing the logic and persistence is not guaranteed by JPA. If you annotate the fields
        for persistence, you will not run into problems if some logic is added to the getters or setters.
    </para>
    <para>
        Finally, you may want to add services which provide multiple fields at a time in the form of value objects to users.
        Doing the persistence on fields instead of properties avoids the complexity of having to decalare such getters as
        transient.
    </para>
</section>    
    