<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>Use simple abstract keys instead of domain keys</title>
    <para>
        At times one may be tempted to use domain specific keys like, for example, the identity number of a person.
        However, you will then be exposed to
        <itemizedlist>
            <listitem><para>
                errors in capturing the domain-specific key,
            </para></listitem>
            <listitem><para>
                some objects may not have that domain specific identifier (a South African ID) and their id number issued by
                a different issuer may clash with that of a South African citizen,
            </para></listitem>
            <listitem><para>
                the issues may erroneously issue the same idNo to multiple people,
            </para></listitem>
            <listitem><para>
                a person's ID number may change (for example when a person adopts South African Citizenship) and tracking
                that person may become problematic.
            </para></listitem>
        </itemizedlist>
    </para>
    <para>
        In light of these, it is advisable to rather use abstract, generated keys which define a unique identifier within 
        the persistence domain. This would typically be an integer, which will also increase the querying efficiency
        compared to, for example, a longer string.
    </para>
</section>