<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2009-07-28 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>JPA Best Practises</title>
    
    <indexterm>
        <primary>JPA</primary>
        <secondary>best practises</secondary>
    </indexterm>

    <para>
        The aim of the best practises is largely to provide some guidelines which will improve the maintainability,
        portability and performance of the persistence mapping. In particular, the JPA logic should be portable across
        <itemizedlist>
            <listitem><para>
                JPA compliant ORM frameworks like Hibernate and TopLink,
            </para></listitem>
            <listitem><para>
                persistence providers like different types of databases,
            </para></listitem>
            <listitem><para>
                implementation infrastructure like whether the component is executed within Java SE or Java EE.
            </para></listitem>
        </itemizedlist>
    </para>
    
    <xi:include href="accessDataViaServicesLayer/accessDataViaServicesLayer.docbook"/>
    
    <xi:include href="persistFieldsNotProperties/persistFieldsNotProperties.docbook"/>
    
    <xi:include href="keys/keys.docbook"/>

    <xi:include href="relationships/relationships.docbook"/>
<!--    
    <xi:include href="transactions/transactions.docbook"/>
    Use optimistic locking and check
    
    
    <xi:include href="queries/queries.docbook"/>
    leave query optimization largely to entity managers
    Use batch queries
    guidelines for joins in queries
    
    Reduce persistence logic via generics: Generics enable JPA developers to specify one-to-many and 
    many-to-many relationships between entities without the need to express the targetEntity attribute.
    
    Environmental best practices:
    - configure caching
    
-->    
    
</section>