<?xml version="1.0" encoding="utf-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!--Authored by mailto:fritz@solms.co.za on 2007-07-01 -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">

    <title>The Local Interface</title>
    <para>
        If another component in the same (local) application server - such as
        another bean or a web component - uses a session bean through its remote
        interface, it is very slow compared to local Java calls because the service
        request is marshaled onto RMI/IIOP/TCP/IP as if it is was remote call (i.e.
        communication occurs through local networking). Furthermore, exchanged objects
        are passed by value (and not be reference, as per local Java method calls).
    </para>
    <para>
        The bean developer may choose to, however, expose either the same (or
        a different set of) services though another interface, the
        <emphasis>local</emphasis>
        interface. Services requested through this interface are realised as local
        Java method calls, with greatly improved performance and pass-by-reference
        semantics.
    </para>

    <!-- section>
        <title>The EJBLocalObject</title>
        <para>
            Even though the marshalling and demarshalling steps are skipped when using
            local interfaces, there still needs to be an interception layer at which the enterprise
            services (security, transactions, persistence) are applied. This interception layer
            is provided by the <literal>EJBHomeObject</literal> which is also generated by
            the EJB container.
        </para>
    </section -->
</section>
