<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">


    <title>Jini</title>

    <indexterm>
        <primary>Jini</primary>
    </indexterm>

   <!-- TODO: From the jini.org wiki (in a hurry) - re-write with more clarity --> 

    <para>
        A Jini system is a distributed system based on the idea of federating groups of users and the 
        resources required by those users. The overall goal is to turn the network into a flexible, easily 
        administered tool with which resources can be found by human and computational clients. Resources can be 
        implemented as either hardware devices, software programs, or a combination of the two. The focus of the system is 
        to make the network a more dynamic entity that better reflects the dynamic nature of the workgroup by enabling the 
        ability to add and delete services flexibly. 
    </para>
    <para>
        A Jini system consists of the following parts: 
        <itemizedlist>
            <listitem>
                <para>A set of components that provides an infrastructure for federating services in a distributed system</para>
            </listitem>
            <listitem>
                <para>A programming model that supports and encourages the production of reliable, distributed services </para>
            </listitem>
            <listitem>
                <para>Services that can be made part of a federated Jini system and that offer functionality to any other member of the federation </para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        Although these pieces are separable and distinct, they are interrelated, which can blur the distinction in practice. 
        The components that make up the Jini technology infrastructure make use of the Jini technology programming model; services
        that reside within the infrastructure also use that model; and the programming model is well supported by components in the 
        infrastructure. 
    </para>
    <para>
        The end goals of the system span a number of different audiences; these goals include the following:
        <itemizedlist>
            <listitem>
                <para>Enabling users to share services and resources over a network </para>
            </listitem>
            <listitem>
                <para>Providing users easy access to resources anywhere on the network while allowing the network location of the user to change </para>
            </listitem>
            <listitem>
                <para>Simplifying the task of building, maintaining, and altering a network of devices, software, and users </para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        The Jini technology infrastructure provides mechanisms for devices, services, and users to join and detach from a network of services. 
        Joining and leaving a Jini system are easy and natural, often automatic, occurrences. Jini systems are far more dynamic than is currently 
        possible in networked groups where configuring a network is a centralized function done by hand, or where central infrastructure is
        relied upon. Jini is highly de-centralised.
    </para>
    
    <section>
        <title>Primary Jini concepts</title>
        
        <section>
            <title>Services</title>
            <para>
                The most important concept within the Jini architecture is that of a <emphasis>service</emphasis>. A service is an entity that can be used by a 
                person, a program, or another service. A service may be a computation, storage, a communication channel to another user, a software filter, a 
                hardware device, or another user.
            </para>
            <para>
                Members of a Jini system federate to share access to services. A Jini system should not be thought of as sets of clients and servers, 
                users and programs, or even programs and files. Instead, a Jini system consists of services that can be collected together for the performance 
                of a particular task. Services may make use of other services, and a client of one service may itself be a service with clients of its own. 
                The dynamic nature of a Jini system enables services to be added or withdrawn from a federation at any time according to demand, need, or 
                the changing requirements of the workgroup using the system. 
            </para>
            <para>
                Jini systems provide mechanisms for service construction, lookup, communication, and use in a distributed system. Examples of services include: 
                devices such as printers, displays, or disks; software such as applications or utilities; information such as databases and files; and users of 
                the system. 
            </para>
            <para>
                Services in a Jini system communicate with each other according to Services contracts (called the Service protocol), which is a set of 
                interfaces written in the Java programming language. The set of such protocols is open ended. The base Jini system defines a small 
                number of such contracts that define critical service interactions. 
            </para>
        </section>
        
        <section>
            <title>Lookup Service</title>
            <para>
                Services are found (dynamically, by other services, instead of being statically wired together) and resolved by a lookup service. 
                The lookup service is the central bootstrapping mechanism for the system and provides the major point of contact between the system 
                and users of the system. In precise terms, a lookup service maps interfaces indicating the functionality provided by a service to sets of 
                objects that implement (from the clien'ts perspective) the service. In addition, descriptive entries associated with a service allow more 
                fine-grained selection of services based on properties understandable to people. 
            </para>
            <para>
                The lookup service is completely de-centralised, discovered via multicast networking, and may be federated / duplicated across 
                the network.
            </para>
        </section>
        
        <section>
            <title>Infrastructure services</title>
            <indexterm>
                <primary>space-based architecture</primary>
                <seealso>
                    <indexterm>
                        <primary>SBA</primary>
                    </indexterm>
                </seealso>
            </indexterm>
            <indexterm>
                <primary>transactions</primary>
                <secondary>distributed</secondary>
            </indexterm>
            <indexterm>
                <primary>events</primary>
                <secondary>distributed</secondary>
            </indexterm>
            <para>
                Jini standardises certain infrastructure services, such as
                <itemizedlist>
                    <listitem>
                        <para>A distributed events model (for event-driven architecture, or observable processes)</para>
                    </listitem>
                    <listitem>
                        <para>A leasing model (time-based, exclusive or non-exclusive access to resources)</para>
                    </listitem>
                    <listitem>
                        <para>A distributed Transactions model</para>
                    </listitem>
                    <listitem>
                        <para>An implementation of the Space-based (<quote>Blackboard</quote>) architecture model (<literal>JavaSpaces</literal>) which allow for
                        location-transparent, shared memory spaces that enable grid engines, computing farms, and highly de-centralised and self-innovative
                        business processes.</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    </section>

</section>
