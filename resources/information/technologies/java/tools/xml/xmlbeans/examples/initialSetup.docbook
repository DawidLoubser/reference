<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
xml:id="resources.information.technologies.java.tools.xml.xmlbeans.examples.initialSetup"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    role="example">
    
    <title>Initial setup and schema compilation</title>
    
    <para>
        XMLBeans is best used in scenarios where a well-defined schema, representing
        the domain (or other) model of your system (or integration points) already
        exist. Consider a simplistic scenario of having to exchange client and
        bank accounts information. This might be indicated by the following
        schema, <literal>clients.xsd</literal>:
        <programlisting language="XML">
<xi:include href="src/src/za/co/solms/examples/xml/xmlbeans/clients.xsd" parse="text"/>
        </programlisting>
    </para>
    
    <para>
        For interests' sake, a valid instance document is presented below:
        <programlisting language="XML">
<xi:include href="src/src/za/co/solms/examples/xml/xmlbeans/clientInstance.xml" parse="text"/>            
        </programlisting>
    </para>
    
    <para>
        XMLBeans includes a <emphasis>schema compiler</emphasis>, available either directly through java, 
        as an Ant task, or as an executable called <literal>scomp</literal>. We invoke it on our schema, to produce the
        <emphasis>clients.jar</emphasis> <abbrev>JAR</abbrev>.
        <programlisting><![CDATA[
$ scomp -out clients.jar clients.xsd
Time to build schema type system: 1.623 seconds
Time to generate code: 0.273 seconds
Time to compile code: 2.032 seconds
Compiled types to: clients.jar 
        ]]></programlisting>
    </para>
    
    <para>
        The generated <abbrev>JAR</abbrev> contains interfaces and classes that correspond to all the
        types in the XML schema, and may be used naturally in Java code. This library needs to be included
        (just as you would any other third-party) with your system, in order to make the types available.
    </para>
    
    <note>
        <para>
            Remember to include the XMLBeans library, <literal>xbean.jar</literal>, with your application. This contains the
            base types which your generated JAR requires.
        </para>
    </note>
    
</section>
