<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
xml:id="resources.information.technologies.java.tools.xml.xmlbeans.disadvantages"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Disadvantages of XMLBeans</title>
  
  <indexterm>
    <primary>Apache</primary>
    <secondary>XMLBeans</secondary>
    <tertiary>disadvantages</tertiary>
  </indexterm>
    
    <para>
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>Not a standard API</title>
                    <para>
                        XMLBeans is not implemented as a <emphasis>service provider</emphasis> for one
                        of the standard Java XML processing APIs, such as <literal>JAXB</literal>. As such,
                        usage of XMLBeans means that your application is directly tied to it, and that the
                        XMLBeans libraries need to be deployed with your applications.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Limited to generated types</title>
                    <para>
                        There is no trivial way to use XMLBeans to bind <emphasis>existing</emphasis>
                        Java classes to <emphasis>existing</emphasis> XML Schema types. It relies on
                        generating Java classes based on the schema.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Unsuitable to use as core object model</title>
                    <para>
                        Because of the convenience and feature-richness, it is tempting to use XMLBeans-generated objects
                        as the core data model of your application. There are, however, significant limitations,
                        such as XMLBeans classes not being true (observable) JavaBeans - they are polluted by XML concepts. 
                        <emphasis>It is recommended to use XMlBeans as an integration layer only, with transformers to transform to/from 
                        your core object model.</emphasis>
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>
    </para>
    
</section>
