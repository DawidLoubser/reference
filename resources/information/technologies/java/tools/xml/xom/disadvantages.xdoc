<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.tools.xml.xom.disadvantages"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>The Disadvantages of XOM</title>
   
    <section>
        <title>Not a standard part of Java SE</title>
        <para>
            Usage of XOM means that the XOM library must be bundled with your application. In addition,
            this may pose a problem to applications deployed on non-standard devices, such as Cellular
            phones or microwave ovens.
        </para>
    </section>
    
    <section>
        <title>Does not take advantage of Java SE 5 features</title>
        <para>
            Though this is true of <emphasis>all</emphasis> current XML parsing APIs. However, because XOM is non-standard
            in anyway, code bulk (that makes use of XOM) could be even further reduced by making use of
            Java 5 features such as the <literal>Iterable</literal> interface (which would enable query results to
            be processed with the new <literal>for-loop</literal>), or <emphasis>generics</emphasis>, which could
            reduce casting.
        </para>
        <para>
            This may, however, be the case to still support older platforms with Java 1.4 deployed.
        </para>
    </section>
    
</section>
