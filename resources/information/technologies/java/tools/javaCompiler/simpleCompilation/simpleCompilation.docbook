<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- Author: Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Simple compilation</title>
    <para>
        As of JDK 1.6, Java supports a general <literal>java.tool.Tool</literal> interface which provides a standard way
        to <literal>run</literal> tools. The <literal>JavaCompiler</literal> interface is a specific implementation of a generic
        Java tool and hence you can execute it through this generic interface.
    </para>
    <para>
        Using this generic interface you can call the compiler simply via
        <programlisting><![CDATA[
import javax.tools.JavaCompiler;
import javax.tools.ToolProvider;

...
public void someService()
{
   ...

   JavaCompiler javaCompiler = ToolProvider.getSystemJavaCompiler();            
   
   String arguments = "<pathToJavaFiles>";
   
   javaCompiler.compile(inStream, outStream, errorStream, arguments);
   
   ...
}   
]]></programlisting>
          with the <literal>inStream</literal> often being null as the input is simply the files and the command line parameters encapsulated in
        <literal>arguments</literal>.
        </para>
</section>    