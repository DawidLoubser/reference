<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- Author: Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>What is the heap?</title>
    <para>    
        The heap represents the addressable memory which is accessible to the application and accessible across the threads
        running within an application. It
        is virtual because this memory may be swapped out onto disk and back into physical memory. This is typically a large
        amount of memory and in Java all objects are created on the heap. This simplifies memory management, allowing for
        flexible object life spans and the creation and removal of objects at any stage. 
        <note><para>
            The initial and maximum heap sizes
            can be set when running the <literal>java</literal> virtual machine via the <literal>-Xms</literal> and 
            <literal>-Xmx</literal> command line parameters.
        </para></note>    
    </para>
    <para>
        The heap is potentially concurrently access by multiple threads. In order to prevent corruption due to concurrent access,
        the heap is protected by a resource lock which serializes access to the heap. This protection mechanism slows down
        access to the heap and is part of the cause why access to the application-wide heap is slower than access to either the
        thread-local heap (TLH) or the thread stack.
    </para>
</section>
