<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>Declaring the parent POM</title>
    <para>
        A POM declares another POM the parent POM by specifying the project identifier and
        optionally a relative path. For example
        <programlisting language="XML"><![CDATA[
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    
    <parent>
        <groupId>za.co.solms</groupId>
        <artifactId>foo-project</artifactId>
        <version>1.0</version>
    </parent>
    
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>za.co.solms</groupId>
    <artifactId>foo-persistence-api</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    
    <name>Foo Persistence API</name>
</project>
            ]]>
        </programlisting>
    </para>
    <para>
        A child project will inherit all definitions defined in the parent project. This is commonly used to
        enforce consistent dependencies (such as the versions of libraries we depend on across various modules),
        or to make common configuration available (such as the Java version we are compiling for, or project
        properties such as URLs).
    </para>
</section>    