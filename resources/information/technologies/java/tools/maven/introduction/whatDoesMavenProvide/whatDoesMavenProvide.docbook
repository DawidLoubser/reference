<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>What does Maven provide?</title>
    <para>
        Maven facilitates
        <emphasis>convention over configuration</emphasis>, where most project settings
        are assumed based on the experience gathered from many projects over the years.
        At any stage, the project developer can change any of these default conventions
        to suit the particular project. This means that very little work is required to set
        up most projects, but that these projects can grow into very specialised, unique
        configurations without requiring a different build tool.
    </para>
    <para>
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>Formal project description</title>
                    <para>
                        Every Maven project contains a <acronym>POM</acronym> (Project Object Model), a single,
                        strongly-typed description of the project. Includes: Versioning, Metadata, Dependencies,
                        Plugins required to build, how the end-result should be built, etc.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Dependency management</title>
                    <para>
                        A maven project explicitly declares its direct dependencies on libraries and tools. It
                        then facilitates the retrieval of dependencies from local and remote repositories, including
                        transitive dependencies.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Standard project structure</title>
                    <para>
                        Pre-defined directory paths for human-created source code, generated source,
                        resources, compiled outputs, test results, etc.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Project templates</title>
                    <para>
                        Starting a new project does not have to be from scratch. Maven repositories
                        can contain project templates, called <emphasis>archetypes</emphasis>, that
                        make it easy to start a new project of a particular kind (for example, a Java EE 7
                        web module).
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Standard processes for building, testing, distributing, ...</title>
                    <para>
                        A standard set of build phases that build plug-ins <quote>hook into</quote>.
                        Also supports integration with version control systems to automatically
                        tag versions when building a production distribution of a project, etc.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Project visibility</title>
                    <para>
                        The ability to generate, reports on test results, general project statistics etc,
                        and even publish these as a website that project clients can use to track progress.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Repositories</title>
                    <para>
                        Project <emphasis>artifacts</emphasis> (whether the output of your own project, or
                        things that you depend on) are published to Maven repositories. This allows Maven
                        to resolve project dependencies in a powerful way. Repositories can be local, private,
                        or public, depending on your needs, and projects can assemble dependencies from any
                        combination.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Speed and maintainability</title>
                    <para>
                        Both creation of a new project, or making a new developer productive on an existing
                        project, is achieved quickly and easily.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Modularization of projects</title>
                    <para>
                        Good design processes such as URDAD, as well as runtime environments such as OSGi,
                        promote modularity. Maven makes it easy to produce highly modularised projects that
                        publish multiple independent artifacts, and is thus a natural fit for these.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Distribution of projects</title>
                    <para>
                        Maven makes it easy to distribute the artifacts produced by a project, whether it's
                        a simple Java library or program, or a custom artifact that requires complex assembly,
                        platform-specific versions, etc.
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>
    </para>
</section>    