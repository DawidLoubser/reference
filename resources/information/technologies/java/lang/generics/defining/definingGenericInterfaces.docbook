<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:id="resources.information.technologies.java.lang.generics.defining.definingGenericInterfaces">
    <title>Defining generic interfaces</title>
    <para>
        Analogous to template classes, Java also supports generic interfaces:
        <programlisting language="Java">
<xi:include parse="text" href="../examples/stackInterface/Stack.java"/>
        </programlisting>
    </para>
    <para>
        We can define both, generic and concrete classes on the generic interface.
    </para>
    <section>
        <title>A generic class implementing a generic interface</title>
        <para>
            In most cases generic interfaces are used to specify the core contract for a generic
            class:
            <programlisting language="Java"><![CDATA[
public class StackImpl<T> implements Stack<T>
{
  public void push( T x ) {...}
                
  ...                
}
            ]]></programlisting>
        </para>
    </section>
    
    <section>
        <title>A concrete class implementing a generic interface</title>
        <para>
            Though not often used, one can also define a specific concrete class which realises a generic interface. 
            <programlisting language="Java"><![CDATA[
public class VehicleStack implements Stack<Vehicle>
{
  public void push( Vehicle o ) {...}

  ...
}                
                ]]></programlisting>
        </para>
    </section>
</section>    