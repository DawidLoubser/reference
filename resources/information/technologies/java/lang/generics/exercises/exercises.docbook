<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:id="resources.information.technologies.java.lang.generics.exercises.exercises">
    <title>Exercises</title>
    <para>
        <orderedlist>
            <listitem><para>
              Write your own interface for a <emphasis>List</emphasis>, specifying random access support via <literal>insert(object,position)</literal>,
              <literal>remove(position)</literal> and <literal>get(position)</literal> methods, as well as an iterator
              factory method (<literal>iterator()</literal>). Write a simple implementation of a generic <emphasis>linked list</emphasis>. 
              Define an iterator interface, and an implementation as a inner class.
              Write a little test which demonstrates the generics and the general type-safe 
              behaviour of the linked list implementation.  
            </para></listitem>
            <listitem><para>
              Write a generic <literal>average</literal> function, whose parameter type is bounded to
              <literal>java.lang.Number</literal> and whose return value is a
              <literal>java.math.BigDecimal</literal>.
            </para></listitem>
            <listitem><para>
                List 3 examples where one could use generics. Discuss the benefits of generics and
                weigh up a design based on generics against a design based on interfaces.
            </para></listitem>
            <!-- How should typical business people know what vectors are? listitem><para>
                Implement a vector class using generics. Provide support for vector addition, dot
                products and the norm of a vector. Write a little test program which creates
            </para></listitem-->
        </orderedlist>
      </para>  
 </section>    