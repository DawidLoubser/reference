<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0b5/rng/docbookxi.rng" type="xml"?>
<section
  xmlns="http://docbook.org/ns/docbook" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Implementing invariance constraints in Java</title>
  <para>
    Invariance constraints are constraints or symmetry rules which must be always met (or at least
    on transactional boundaries). Hence, if they are met prior to a service having been requested,
    then they must still hold after the service has been provided.
  </para>
  
  <section>
    <title>Method for checking object integrity</title>
    <para>
      A common approach is to define a method which is used to check that an  object's integrity has
      not been violated, <abbrev>i.e.</abbrev> that all invariance constraints for that object hold.
      This may, for example, be a <literal>validate</literal> service which throws an error (typically an
      assertion error) if any of the invariance constraints are currently not met.
    </para>
    <para>
      The <literal>validate</literal> service would have, for each invariance constraint, an assertion
      which checks that that invariance constraint is currently met.
    </para>
  </section>

  <section>
    <title>Enforcing invariance constraints on services</title>
    <para>
      In order to build invariance constraint validation into the service logic one would call the
      <literal>validate</literal> service at the beginning of the service and at the end.
    </para>
  </section>
  
  
</section>  