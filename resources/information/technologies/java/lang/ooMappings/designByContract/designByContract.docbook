<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd">
    <title>Design By Contract with Java</title>
    <para>
        Contract-based software development facilitates testability and safe plug-ability.
        Most good design processes (such as URDAD) produce contracts as the first deliverable for each
        level of granularity of your system.
    </para>
    <para>
        If there were no contracts for your components and service providers, what would you testing?
        Would you be willing to plug in a service provider which does not guarantee that a service
        contract is fulfilled? Though Java does not directly support all design-by-contract features
        (as language keywords), the approach can still strictly be followed. This results in
        modularised, testable code that is easy to maintain with confidence.
    </para>


    <xi:include href="../../../../../concepts/design/designByContract/designByContract.docbook"/>

    <xi:include href="../../../../../concepts/developmentProcess/designByContract/benefits/benefits.docbook"/>

    <xi:include href="preConditions/preConditions.docbook"/>

    <xi:include href="postConditions/postConditions.docbook"/>

    <xi:include href="invarianceConstraints/invarianceConstraints.docbook"/>

    <!--<xi:include href="exercises/exercises.docbook"/>-->


</chapter>