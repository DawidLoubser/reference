<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.lang.classes.innerClasses.innerClasses"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">
  
    <title role="Inner Classes">Inner Classes</title>

<para>Non-static (instance) nested classes are commonly referred to as <emphasis role="em"> inner
classes</emphasis>. Unlike nested classes, inner classes have access to the instance
variables of the outer class instance. Like static
nested classes, inner classes are defined either within another class or
within a method of another class or within a block of a method of another
class.
</para>
<para>The difference between nested and inner classes can be summarized as follows:
<itemizedlist>
  <listitem><para> A <emphasis role="em"> nested class</emphasis> is a class is a member of the outer class.</para></listitem>
  <listitem><para> An instance of an inner class exists within the context of an
        instance of the outer class.</para></listitem>
</itemizedlist>
</para>
<para>One typically would define an inner class when
<itemizedlist>
  <listitem><para> it is only useful for the context (class, method or method block)
        in which it is defined.</para></listitem>
   <listitem><para>the inner class should have access to the instance members of
        the outer class in whose context it is defined.</para></listitem>
</itemizedlist>
</para>    
    
    <xi:include href="definingAndUsingInnerClasses.xdoc"/>
    <xi:include href="usingAnInnerClassesInheritedFromASuperClass.xdoc"/>
    <xi:include href="innerClassesDefinedWithinClassMethods.xdoc"/>
    <xi:include href="anonymousClasses.xdoc"/>
</section>
