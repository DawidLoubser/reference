<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.lang.classes.basic.methodArguments.primitiveArguments"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title role="Primitive Data Types as Arguments">Primitive Data Types as Arguments</title>
  <para>
    Consider the following parabola class and test program:
    <programlisting><xi:include parse="text" href="src/Parabola1Test.java"/></programlisting>
    The output of the program is the following
    <programlisting><![CDATA[
 in calcTurningPoint:
 x = -0.25
 y = -1.5
 
 back in main:
 x = 0.0
 y = 0.0
    ]]></programlisting> 
  </para>
  <para>
    This was surely not what the developer had intended. The parabola conscientiously
    calculates the <literal>x</literal>- and <literal>y</literal>-coordinates of the turning point, but they are never
    returned to the client (the main program).</para>
  <para>
    The problem is, however, that a method can return at most one object. There are
    really three ways to resolve this problem. The first is to have two methods returning the 
    <literal>x</literal> and <literal>y</literal> coordinates
    of the turning point respectively. This is not a very
    elegant way and I would stringly recommend of choosing on of the two following alternatives.
  </para>
</section>