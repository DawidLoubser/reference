<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.lang.classes.basic.methodArguments.methodArguments">
  <title>
    A Closer Look at Method Arguments and Return Values
  </title>
  <para>
    Method arguments can be very confusing, especially if you have heard about
    pass-by-value and pass-by-reference. The best is to forget everything and to realize that
    the following 4 rules hold always in Java:
    <orderedlist>
         <listitem>
            <para>
        Method arguments and return values can be only primitive data types. 
      </para>
         </listitem>
         <listitem>
            <para>
        A reference is a primitive data type.
      </para>
         </listitem>
         <listitem>
            <para>
        Method arguments are always copied from the client to the service upon invocation 
        of the service and never ever back.
      </para>
         </listitem>
         <listitem>
            <para>
        Return values are only copied from the service to the client upon completion of the service.
      </para>
         </listitem>
      </orderedlist>
    There are no exceptions to these rules. The client is the point from where the service
    is requested and the service is the method called (the implementation of the service). A few
    examples will clarify these rules.
  </para>

  <xi:include href="primitiveArguments.docbook"/>
  <xi:include href="returnObjects.docbook"/>
  <xi:include href="referencesAsArguments.docbook"/>
  <xi:include href="lifeSpanOfMethodArguments.docbook"/>
  
</section>