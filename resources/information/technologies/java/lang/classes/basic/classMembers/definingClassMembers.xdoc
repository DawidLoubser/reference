<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.lang.classes.basic.classMembers.definingClassMembers"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title role="Defining Class Attributes and Class Services">Defining Class Attributes and Class Services</title>
  <para>
    Consider for example the case where you want to keep track of the number of accounts
    that exist within a system. You would not ask a particular class for the number of
    accounts -- it would most probably say something along the lines of 
    <quote><emphasis>How the heck should I know?</emphasis></quote>
  </para>  
  <para>
    However, you could ask the class itself because it is from the class that the
    accounts are instantiated -- we did mention that constructors are class services. To this
    end we add a datafield, <literal>numInstances</literal> to the class as a
    class attribute and the class itself will supply a service for querying the number of
    accounts. A possible implementation is shown below:
    <programlisting><xi:include parse="text" href="src/Account.java"/></programlisting>
  </para>

  <para>
    We have added a class attribute, <literal>numInstances</literal>, to be
    used as instance counter -- it is a class attribute because we declared it <literal>static</literal>. 
    Note that all constructors call the first constructor
    and hence we only have to increment the instance counter in the first constructor. There
    is also a class service, <literal>getNumberOfInstances()</literal> which
    returns the number ofinstances. The counter is decremented in the <literal>finalize()</literal> 
    method which is called by Java's garbage collector
    just before it throws the object out of memory.
  </para>
</section>