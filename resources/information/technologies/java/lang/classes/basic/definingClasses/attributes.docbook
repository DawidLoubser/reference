<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.lang.classes.basic.definingClasses.attributes">

  <title>Defining attributes</title>
  
  <indexterm>
    <primary>attributes</primary>
    <secondary>defining</secondary>
  </indexterm>
  
  <para>
    The <emphasis>state</emphasis> of an object is largely defined by the values of its
    attributes. Thus, the class needs to specify all of the attributes which instances
    could have.
  </para>
  <para>
    This is specified as <emphasis>instance variables</emphasis>, i.e. Java variables
    directly in the body of the class (i.e. not within any service). These attributes
    almost always have <literal>private</literal> accessibility, i.e. they cannot be
    directly accessed by anything outside of the class. They are rather <emphasis>indirectly</emphasis>
    accessed in a controllable manner via services.
  </para>
  
  <note>
    <para>
      While many authors list the attributes of a class at the top of the class body, we prefer to list
      them at the bottom, i.e. after all the services and constructors have been listed. This further
      emphasises that object-oriented programming is all about the <emphasis>services</emphasis>
      offered by objects, and not about the <emphasis>data</emphasis> privately contained within
      them.
    </para>
  </note>
    
</section>