<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.lang.classes.basic.this.unspecifiedMessageRecipients">
   <title>Unspecified Message Recipients</title>
  <para>
    At times you will see code where a function is called directly without a message
    recipient being specified. Consider, for example, the following version of the 
    <literal>Account</literal> class:
     <programlisting language="Java">
<xi:include parse="text" href="src/Account1.java"/>
      </programlisting>
  </para>
  <para>
    In the <literal>debit()</literal> method the credit method is called. But
    the recipient of the service request message is not specified -- recall that one usually
    sends a message via
    <programlisting>
someObject.doSomething(args);
    </programlisting>
   </para>
   <para>
   So, who receives the <literal>credit()</literal> message? If no message recipient is specified, the
    Java compiler inserts <literal>this</literal>. Hence, the service request
   <programlisting>
credit(amount);
   </programlisting>
   in the <literal>debit()</literal> method is interpreted as
   <programlisting>
this.credit(amount);
   </programlisting>
   </para>  
   <para>
   Let us carefully identify once more who
   exactly will receive the message by tracing the service requests. A client will request a
   debit from some particular account via
   <programlisting>
myAccount.debit(amount);
   </programlisting>
   </para>  
   <para>
   We thus enter the <literal>debit()</literal> service for <literal>myAccount</literal>. In it we call
   <programlisting>
this.credit(amount);
   </programlisting>
   with <literal>this</literal> being <literal>myAccount</literal>.
 </para>
</section>