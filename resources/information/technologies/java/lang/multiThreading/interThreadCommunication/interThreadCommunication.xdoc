<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.tecnologies.java.lang.multiThreading.interThreadCommunication.interThreadCommunication"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
    xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title role="Inter-Thread Communication">Inter-Thread Communication</title>

<para>Inter-thread communication is arranged either via shared resources (like 
shared objects or shared files) or via piped streams. The latter is very 
simple yet in many cases it is to limited. The former is more powerful,
but careful design is required to prevent common threading problems like
race conditions and dead-locks. It also requires threads to communicate
the fact that one is waiting for a change in the state of a shared resource 
as well as the fact that the state has actually changed. </para>
    
    <xi:include href="communicationViaPipedStreams.xdoc"/>
    
    <xi:include href="communicatingViaWaitAndNotify.xdoc"/>
    
</section>
