<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.tecnologies.java.lang.multiThreading.monitorsAndMutexes.monitorsAndMutexes"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
    xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title role="Monitors and Mutexes">Monitors and Mutexes</title>

<para>The plane uses a <emphasis>monitor</emphasis> which allows only one thread to use any of 
those services which are guarded by the monitor. These would typically
include all the flight control services like wing and turbine manipulation.
One thread acquires the monitor on entry. One says that this thread <emphasis>owns</emphasis>
the monitor or that it has acquired the monitor lock --- it has locked
the monitor so that no further threads can enter the code protected by the 
monitor. As soon as the thread has the
monitor, all services protected by the mutex can only be accessed by that
thread. The autopilot cannot change the turbine throttle while the co-pilot
is adjusting the wings. Only after the thread leaves all those services 
protected by the monitor, will other threads be able to use any of the 
protected services of the plane.</para>
    
    <xi:include href="javaMonitors.xdoc"/>
    
    <xi:include href="synchronizationOverheads.xdoc"/>
    
    <xi:include href="requestingMonitor.xdoc"/>
</section>
