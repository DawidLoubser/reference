<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xml:id="resources.information.tecnologies.java.lang.multiThreading.introduction.introduction">
 
    <title role="Introduction">Introduction</title>

<para>Multi-threading (or concurrency) allows the simultaneous or quasi-simultaneous execution of
a number of tasks. Each thread is a sequential flow of control within an 
application. In multi-processor environments the different tasks can 
be processed genuinely in parallel. On a single processor machine the processor
switches between tasks in such a way that the user gets the impression that
the different tasks are performed simultaneously.</para>

<para>It is a major advantage of Java that the threading support is part of the
core language standard, and that it is very easy to write multi-threaded code
which is also platform independent. There are,
however, many potential pitfalls when writing multi-threaded code and
in this chapter we aim to cover the typical problems faced by developers
of multi-threaded code.</para>
  
  <para>
    With the introduction of Java version 5, the newly introduced Concurrency
    framework introduces a whole new class of simple-to-use, powerful multi-threading
    ability, which largely deprecates the existing threading support
    built-in to the language.
  </para>
    
</section>