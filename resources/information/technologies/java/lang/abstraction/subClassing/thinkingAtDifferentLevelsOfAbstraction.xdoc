<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.lang.abstraction.subClassing.thinkingAtDifferentLevelsOfAbstraction"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title role="Thinking at Different Levels of Abstraction">Thinking at Different Levels of Abstraction</title>
  <para>
    We think quite naturally at different levels of abstraction. 
    Consider the following statements which become more and more concrete: 
    <blockquote><para><emphasis>
      A person deposited money into the account. 
    </emphasis></para></blockquote>
    <blockquote><para><emphasis>
      A client deposited money into the account.
    </emphasis></para></blockquote>
    <blockquote><para><emphasis>
      Mr P.J. Smith deposited money into the account.
    </emphasis></para></blockquote>
  </para>  
  <para>
    It might be sufficient for you to know that somebody deposited money in the account.
    Alternatively, you might want to know whether it is a cient or a friend who deposited the
    money and for bookkeeping purposes you would want to know which client deposited the money
    into the account. Here client is a special type of person, and P.J. Smith may be a special
    kind of client.
  </para>
  <para>
    So we naturally introduce abstractions into our everyday language and it is really in
    the same spirit that object-oriented languages support abstraction too.
  </para>
</section>