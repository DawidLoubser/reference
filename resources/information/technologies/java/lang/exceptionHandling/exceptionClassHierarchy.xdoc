<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2se.exceptionHandling.exceptionsClassHierarchy"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title role="Java's Exception Class Hierarchy">Java's Exception Class Hierarchy</title>
  <para>
    In some languages like C++ you can throw an instance of any class when an exceptional situation arises.
    This is not the case in Java. In Java anything which can be thrown must be a subclass of
    <literal>Throwable</literal>. Java distinguishes between internal
    errors caused by a problem in Java's run-time system and Exceptions which are problems
    Java encounters when executing your code. 
    For example, <literal>LinkageError</literal> and <literal>InternalError</literal> are errors 
    which should actually never occur
    and, if they do, you can do little about them except to notify the supplier of your Java
    compiler/run-time system of the bug. Hence you should never throw an instance of 
    <literal>Error</literal>.
  </para>
  <para>
    On the other hand <literal>NegativeArraySizeException</literal>,
    <literal>FileNotFoundException</literal> and <literal>MalFormedURLException</literal> report 
    exceptional situations which
    might occur when using you classes. Furthermore, these exceptional cases need not indicate
    a coding error in your class. They could occur due to illegal information obtained when
    you class communicates with the outside world.
  </para>
  <para>
    To give you a flavor of Java's exception class hierarchy, we show you a relatively
    small subset of java's exception classes: 
    <itemizedlist>
      <listitem>
        <para>
          Exception 
          <itemizedlist>
            <listitem>
              <para>ClassNotFoundException </para>
            </listitem>
            <listitem>
              <para>CloneNotSupportedException </para>
            </listitem>
            <listitem>
              <para>... </para>
            </listitem>
            <listitem>
              <para>
                IOException
                <itemizedlist>
                  <listitem>
                    <para>EOFException </para>
                  </listitem>
                  <listitem>
                    <para>FileNotFoundException </para>
                  </listitem>
                  <listitem>
                    <para>InterruptedIOException </para>
                  </listitem>
                  <listitem>
                    <para>MalformedURLException </para>
                  </listitem>
                  <listitem>
                    <para>ProtocolException </para>
                  </listitem>
                  <listitem>
                    <para>...</para>
                  </listitem>
                </itemizedlist>
              </para>  
            </listitem>
            <listitem>
              <para>... </para>
            </listitem>
            <listitem>
              <para>
                RuntimeException 
                <itemizedlist>
                  <listitem>
                    <para>ArithmeticException </para>
                  </listitem>
                  <listitem>
                    <para>ArrayStoreException </para>
                  </listitem>
                  <listitem>
                    <para>IllegalCastException </para>
                  </listitem>
                  <listitem>
                    <para>EmptyStackException </para>
                  </listitem>
                  <listitem>
                    <para>IllegalArgumentsException </para>
                  </listitem>
                  <listitem>
                    <para>... </para>
                  </listitem>
                  <listitem>
                    <para>
                      IndexOutOfBoundsException
                      <itemizedlist>
                        <listitem>
                          <para>ArrayIndexOutOfBoundsException </para>
                        </listitem>
                        <listitem>
                          <para>StringIndexOutOfBoundsException</para>
                        </listitem>
                      </itemizedlist>
                    </para>  
                  </listitem>
                  <listitem>
                    <para>NegativeArraySizeException </para>
                  </listitem>
                  <listitem>
                    <para>NoSuchElementException </para>
                  </listitem>
                  <listitem>
                    <para>NullPointerException </para>
                  </listitem>
                  <listitem>
                    <para>SecurityException</para>
                  </listitem>
                </itemizedlist>
              </para>  
            </listitem>
          </itemizedlist>
        </para>  
      </listitem>
    </itemizedlist>
  </para>
  <para>
    Note that we have here specializations of exceptions. At the highest, most abstract level,
    level, there is the mother of all exceptions, <literal>Exception</literal>. <literal>IOException</literal> and
    <literal>RuntimeException</literal> are special types of <literal>Exception</literal>s and 
    <literal>EOFException</literal> (end-of-file exception) is a special type of
    <literal>IOException</literal>.
  </para>
  <para>
    The <literal>ClassNotFoundException</literal> is thrown in the
    <literal>Class.forName(String)</literal> method which tries to return
    the run-time class descriptor of a class with name <literal>name</literal>. 
    The <literal>CloneNotSupportedException</literal> is thrown when you try to clone a
    class which does not implement the <literal>Cloneable</literal>
    interface. If your code throws these exceptions, it is usually indicative of a coding error.
  </para>
  <para>
    The same is true for most occurrences of a RuntimeException. Typically,
    <literal>RunTimeException</literal>s are encountered when your code tries to
    access an array element which is out of the bounds of the array size or it attempts to
    take the square root of a negative number. These are typically thrown by Java, when Java
    encounters a problem in your code.
  </para>
  <para>
    <literal>IOException</literal>s, on the other hand, are thrown when your
    class encounters a problem when communicating with its environment. This would occur, for
    example, when the user of your system tries to open a file which does not exist or when a
    communication link is interrupted.
  </para>
</section>