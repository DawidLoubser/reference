<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2se.exceptionHandling.stackTrace.whatToLookFor.whatToLookFor"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>What to look for?</title>
    <para>
        When interrogating a stack trace look for the following:
        <itemizedlist>
            <listitem><para>Find the current thread. The first piece of information you need to look for is the current thread. The current thread will be the last 
                thread that was running when the stack trace was written.</para>
            </listitem>
            <listitem><para>Look for runnable threads.These are the threads that have a state of R, which stands for Runnable. Threads in the R state were
                running, or were ready to run the next time the threads were scheduled. Make a note of these, because they could indicate where your problem lies.               
            </para></listitem>
            <listitem><para>Look for core files. If the JVM generated the stack trace because of an internal error then some native code in your own application,
                or the JVM was probably to blame.
            </para></listitem>
        </itemizedlist>
    </para>
    </section>