<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.technologies.java.j2se.exceptionHandling.uncaughtExceptionHandlers.definingUncaughtExceptionHandler.definingUncaughtExceptionHandler"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
  xmlns:xi="http://www.w3.org/2001/XInclude">  
  <title role="Defining uncaught exception handlers">Defining uncaught exception handlers</title>
  <para>
    In order to define an exception handler which can be used as an uncaught exception handler we
    need to implement the static nested interface <literal>java.lang.Thread.UncaughtExceptionHandler</literal>. 
    This interface requires that we implement one method, the exception handler method:
    <programlisting><![CDATA[
package java.lang;
      
public class Thread
{
   ...
      
  public static interface UncaughtExceptionHandler
  {
     public void uncaughtException
                         (Thread thread, Throwable throwable);
  } 
      
  ...  
}      
      ]]></programlisting>
  </para>
  <para>
    As an example, let us assume we want an uncaught exception handler which logs all uncaught
    exceptions to some logging stream. We could define such a handler as follows:
    <programlisting>
<xi:include parse="text" href="../../src/UncaughtExceptionLogger.java"/>      
    </programlisting>
  </para>
  
</section>