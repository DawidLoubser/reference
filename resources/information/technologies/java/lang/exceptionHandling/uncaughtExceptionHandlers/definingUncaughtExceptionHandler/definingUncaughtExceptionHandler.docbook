<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns6501:section xmlns:ns6501="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2se.exceptionHandling.uncaughtExceptionHandlers.definingUncaughtExceptionHandler.definingUncaughtExceptionHandler">  
  <ns6502:title xmlns:ns6502="http://docbook.org/ns/docbook">Defining uncaught exception handlers</ns6502:title>
  <ns6503:para xmlns:ns6503="http://docbook.org/ns/docbook">
    In order to define an exception handler which can be used as an uncaught exception handler we
    need to implement the static nested interface <ns6504:literal xmlns:ns6504="http://docbook.org/ns/docbook">java.lang.Thread.UncaughtExceptionHandler</ns6504:literal>. 
    This interface requires that we implement one method, the exception handler method:
    <ns6505:programlisting xmlns:ns6505="http://docbook.org/ns/docbook">
package java.lang;
      
public class Thread
{
   ...
      
  public static interface UncaughtExceptionHandler
  {
     public void uncaughtException
                         (Thread thread, Throwable throwable);
  } 
      
  ...  
}      
      </ns6505:programlisting>
  </ns6503:para>
  <ns6506:para xmlns:ns6506="http://docbook.org/ns/docbook">
    As an example, let us assume we want an uncaught exception handler which logs all uncaught
    exceptions to some logging stream. We could define such a handler as follows:
    <ns6507:programlisting xmlns:ns6507="http://docbook.org/ns/docbook">
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" parse="text" href="../../src/UncaughtExceptionLogger.java"/>      
    </ns6507:programlisting>
  </ns6506:para>
  
</ns6501:section>