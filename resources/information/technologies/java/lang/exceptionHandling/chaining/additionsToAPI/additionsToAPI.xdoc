<?xml version="1.0" encoding="UTF-8"?>
<para id="resources.information.technologies.java.j2se.exceptionHandling.chaining.additionsToAPI.additionsToAPI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
    xmlns:xi="http://www.w3.org/2001/XInclude">  

        Exception chaining is possible because of the <emphasis>cause</emphasis> concept. A cause is essentially a 
        reference to another Throwable object where Throwable is the parent class for all errors and exceptions. This 
        implies that a cause maintains the exception information for a parent class, therefore enabling a hierarchy of 
        exceptions. The exception reporting is standard and is complete up to the lowest level. The following has been 
    added to the API:
        <orderedlist>
            <listitem> <para>Additional Throwable constructors viz. Throwable(String message,Throwable cause) and 
                Throwable(Throwable cause).</para></listitem>
            <listitem><para>The  printStackTrace() method has been upgraded such that it prints the entire "causal chain" 
                as part of the standard stack trace.</para></listitem>
            <listitem><para> There are additional methods to accommodate the cause catered for by the Throwable class, 
                viz. getCause() and initCause(). </para></listitem>
            <listitem><para> A getStackTrace() method has been added to the API, 
                thus enabling a developer to design decisions around a specific stack trace.</para></listitem>
        </orderedlist>    
    </para>