<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.lang.basicLanguage.identifiers">
    <title>Identifiers in Java </title>
    <para>Variables, constants, classes, objects, member functions and interfaces are all identified
        by their names. A valid Java identifier must start either with a lower or upper case letter,
        an underscore character (<literal>_</literal>) or a dollar sign, (<literal>$</literal>).
        Subsequent characters can also include numerals (0--9). The length of identifier names is
        not limited. Furthermore, Java is case sensitive. The only other restriction to identifier
        names is that you may not use any of Java's reserved words. The following identifiers are
        thus all valid and all distinct:
    </para>
    <para>
        <literal>x   X   _x   x1   myVariableNamedX</literal>
    </para>    
    <para>
        while the following are not valid identifier names in Java:
    </para>
    <para>
        <literal>x!   1X   long   #x1   my Variable</literal>
    </para>
    <para>The identifier <literal>long</literal> is invalid because it is a reserved word. The following
        are all reserved key words of the Java language:
    </para>
    <table>
        <title>Reserved Keywords of the Java Language</title>
        <tgroup cols="5">
            <tbody>
                <row>
                    <entry>
                        <para>abstract</para>
                    </entry>
                    <entry>
                        <para>boolean</para>
                    </entry>
                    <entry>
                        <para>break</para>
                    </entry>
                    <entry>
                        <para>byte</para>
                    </entry>
                    <entry>
                        <para>byvalue</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>case</para>
                    </entry>
                    <entry>
                        <para>catch</para>
                    </entry>
                    <entry>
                        <para>char</para>
                    </entry>
                    <entry>
                        <para>class</para>
                    </entry>
                    <entry>
                        <para>const</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>continue</para>
                    </entry>
                    <entry>
                        <para>default</para>
                    </entry>
                    <entry>
                        <para>do</para>
                    </entry>
                    <entry>
                        <para>double</para>
                    </entry>
                    <entry>
                        <para>else</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>extends</para>
                    </entry>
                    <entry>
                        <para>false</para>
                    </entry>
                    <entry>
                        <para>final</para>
                    </entry>
                    <entry>
                        <para>finally</para>
                    </entry>
                    <entry>
                        <para>float</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>for</para>
                    </entry>
                    <entry>
                        <para>goto</para>
                    </entry>
                    <entry>
                        <para>if</para>
                    </entry>
                    <entry>
                        <para>implements</para>
                    </entry>
                    <entry>
                        <para>import</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>instanceof</para>
                    </entry>
                    <entry>
                        <para>int</para>
                    </entry>
                    <entry>
                        <para>interface</para>
                    </entry>
                    <entry>
                        <para>long</para>
                    </entry>
                    <entry>
                        <para>native</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>new</para>
                    </entry>
                    <entry>
                        <para>null</para>
                    </entry>
                    <entry>
                        <para>package</para>
                    </entry>
                    <entry>
                        <para>private</para>
                    </entry>
                    <entry>
                        <para>protected</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>public</para>
                    </entry>
                    <entry>
                        <para>return</para>
                    </entry>
                    <entry>
                        <para>short</para>
                    </entry>
                    <entry>
                        <para>static</para>
                    </entry>
                    <entry>
                        <para>super</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>switch</para>
                    </entry>
                    <entry>
                        <para>synchronized</para>
                    </entry>
                    <entry>
                        <para>this</para>
                    </entry>
                    <entry>
                        <para>threadsafe</para>
                    </entry>
                    <entry>
                        <para>throw / throws</para>
                    </entry>
                </row>
                <row>
                    <entry>
                        <para>transient</para>
                    </entry>
                    <entry>
                        <para>true</para>
                    </entry>
                    <entry>
                        <para>try</para>
                    </entry>
                    <entry>
                        <para>void</para>
                    </entry>
                    <entry>
                        <para>while</para>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    
    <note>
        <para>
            Not all of these keywords are in use by the language: Some of them are reserved for future use, while
            others (such as <literal>goto</literal>) will most likely never be used.
        </para>
    </note>
</section>