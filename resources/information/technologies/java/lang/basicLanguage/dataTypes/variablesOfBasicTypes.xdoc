<?xml version="1.0" encoding="UTF-8"?>
<section
    id="resources.information.technologies.java.lang.basicLanguage.dataTypes.variablesOfBasicTypes"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title role="Variables of Basic Data Types">Variables of Basic Data Types</title>
    <para>To declare a variable of one of the basic data types, one uses the syntax</para>
    <para>
        <programlisting>
dataType variableName;
        </programlisting>
    </para>
    <para>One can define several variables of the same basic data type in a single statement by
        separating the variable names by commas. For example, in the following program listing
        we define two variables, <literal>x</literal> and <literal>y</literal>, of type <literal>int</literal>.</para>
    <para>
        <programlisting><![CDATA[
public class AddTwoIntegers
{
    public static void main( String[] args )
    {
        // Declare two integers
        int x, y;
            
        // Assign values to them
        x = 5;
        y = 19;
            
        // Declare a third, and assign value
        int sum = x + y;
            
        // Display sum on standard output
        System.out.println( sum );
    }
}
            ]]></programlisting>
        In the following (modified) example, we obtain the two values from standard input (typically a
        keyboard):
        <programlisting>
import java.io.*;

public class AddTwoIntegers
{
    public static void main( String[] args ) throws IOException
    {
     int x, y;
    
     BufferedReader keyboard
       = new BufferedReader(new InputStreamReader(System.in));
    
     System.out.print("Enter x: ");
     String line = keyboard.readLine();
     x = Integer.parseInt(line);
    
     System.out.print("Enter y: ");
     line = keyboard.readLine();
     y = Integer.parseInt(line);
    
     int sum = x + y;
     int product = x * y;
    
     System.out.println(x + " + " + y + " = " + sum);
     System.out.println(x + " * " + y + " = " + product);
    }
}
        </programlisting>
    </para>
    
    <para> If you do not understand the entire code at this stage, don't worry. We shall cover
        stream input output and classes in detail later in the book. For now, simply accept that the line</para>
    <para>
        <programlisting>
BufferedReader keyboard = new BufferedReader(new InputStreamReader(System.in));
        </programlisting>
    </para>
    <para>creates an object, <literal>keyboard</literal>, for you, which allows you to read lines of
        text via the statement <literal>keyboard.readLine()</literal>. Accept further, at this
        stage, that <literal>Integer</literal> is a class which has a function
        <literal>parseInt()</literal> which allows you to parse a string as an integer. Note that we
        can have multiple statements on a single line. A statement is terminated by a semicolon, not
        the end of the line. Normally you would not want to put too many multiple statements onto a
        single line except, perhaps, when thay are intimately related as is the case in this example.</para>
    <para>After we read in the two integers, we declare another variable, <literal>sum</literal>, of
        type<literal>int</literal> and we initialize it to the value of the sum of
        <literal>x</literal> and <literal>y</literal>. Note that you can declare variables where you
        require them. Next we define the variable, <literal>product</literal>, and we initialize it
        to the product of <literal>x</literal> and <literal>y</literal>. Finally we print the sum
        and the product onto the standard output stream, the screen. An example output of the
        program is shown below:</para>
    <para>
        <programlisting>
Enter x: 3
Enter y: 7
3 + 7 = 10
3 * 7 = 21
        </programlisting>
    </para>
</section>