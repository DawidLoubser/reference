<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns5177:section xmlns:ns5177="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.lang.basicLanguage.operators.arithmeticOperations">
    <ns5178:title xmlns:ns5178="http://docbook.org/ns/docbook">Arithmetic Operators</ns5178:title>
    <ns5179:para xmlns:ns5179="http://docbook.org/ns/docbook">Addition, subtraction, multiplication and division is supported via the standard
        <ns5180:literal xmlns:ns5180="http://docbook.org/ns/docbook">+</ns5180:literal>, <ns5181:literal xmlns:ns5181="http://docbook.org/ns/docbook">-</ns5181:literal>, <ns5182:literal xmlns:ns5182="http://docbook.org/ns/docbook">*</ns5182:literal> and <ns5183:literal xmlns:ns5183="http://docbook.org/ns/docbook">/</ns5183:literal>
        operators with the standard precedence levels. The operator, <ns5184:literal xmlns:ns5184="http://docbook.org/ns/docbook">%</ns5184:literal> is used to
        calculate the remainder (the mod) of two integral operands (<ns5185:literal xmlns:ns5185="http://docbook.org/ns/docbook">11 % 4 = 3</ns5185:literal>).</ns5179:para>
    <ns5186:para xmlns:ns5186="http://docbook.org/ns/docbook">Java also supplies the operate-and-assign operators supplied with C and C++:
        <ns5187:literal xmlns:ns5187="http://docbook.org/ns/docbook">+=</ns5187:literal>, <ns5188:literal xmlns:ns5188="http://docbook.org/ns/docbook">-=</ns5188:literal>, <ns5189:literal xmlns:ns5189="http://docbook.org/ns/docbook">*=</ns5189:literal>, <ns5190:literal xmlns:ns5190="http://docbook.org/ns/docbook">/=</ns5190:literal>
        and <ns5191:literal xmlns:ns5191="http://docbook.org/ns/docbook">%=</ns5191:literal>. For example, <ns5192:literal xmlns:ns5192="http://docbook.org/ns/docbook">x += y</ns5192:literal> is equivalent to<ns5193:literal xmlns:ns5193="http://docbook.org/ns/docbook">x
            = x + y</ns5193:literal>.</ns5186:para>
    <ns5194:para xmlns:ns5194="http://docbook.org/ns/docbook"/>
    <ns5195:section xmlns:ns5195="http://docbook.org/ns/docbook">
        <ns5196:title xmlns:ns5196="http://docbook.org/ns/docbook">Pre and Post Increment/Decrement Operators</ns5196:title>
        <ns5197:para xmlns:ns5197="http://docbook.org/ns/docbook">Java also defines pre and post increment/decrement operators, <ns5198:literal xmlns:ns5198="http://docbook.org/ns/docbook">++</ns5198:literal> and<ns5199:literal xmlns:ns5199="http://docbook.org/ns/docbook">-</ns5199:literal>.</ns5197:para>
        <ns5200:para xmlns:ns5200="http://docbook.org/ns/docbook">In the case of the pre increment operator, the operator is inserted before the
            operand. Consider, for example, the following code snippet:</ns5200:para>
        <ns5201:para xmlns:ns5201="http://docbook.org/ns/docbook">
            <ns5202:programlisting xmlns:ns5202="http://docbook.org/ns/docbook">
int k = 3;

int l = ++k;
              </ns5202:programlisting>
        </ns5201:para>
        <ns5203:para xmlns:ns5203="http://docbook.org/ns/docbook">After these two statements both, <ns5204:literal xmlns:ns5204="http://docbook.org/ns/docbook">k</ns5204:literal> and <ns5205:literal xmlns:ns5205="http://docbook.org/ns/docbook">l</ns5205:literal>, will
            have value <ns5206:literal xmlns:ns5206="http://docbook.org/ns/docbook">4</ns5206:literal>. Let us see what happens. Firstly, the pre-increment
            operator takes presedence over the assignment operator. It increments the operand,
            <ns5207:literal xmlns:ns5207="http://docbook.org/ns/docbook">k</ns5207:literal> and returns the result (4). The value of <ns5208:literal xmlns:ns5208="http://docbook.org/ns/docbook">l</ns5208:literal> is
            then set equal to the return value of the pre-increment operator.</ns5203:para>
        <ns5209:para xmlns:ns5209="http://docbook.org/ns/docbook">Now let us have a look at the post-increment operator. Consider the following code snippet:</ns5209:para>
        <ns5210:para xmlns:ns5210="http://docbook.org/ns/docbook">
            <ns5211:programlisting xmlns:ns5211="http://docbook.org/ns/docbook">
 int k = 3;
 
 int l = k++;
              </ns5211:programlisting>
        </ns5210:para>
        <ns5212:para xmlns:ns5212="http://docbook.org/ns/docbook">After these two statements <ns5213:literal xmlns:ns5213="http://docbook.org/ns/docbook">k</ns5213:literal> will have value 4, but
            <ns5214:literal xmlns:ns5214="http://docbook.org/ns/docbook">l</ns5214:literal> will have value 3. Once again, the pre-increment operator takes
            presedence over the assignment operator. It increments the operand,
            <ns5215:literal xmlns:ns5215="http://docbook.org/ns/docbook">k</ns5215:literal>, but returns the original value of <ns5216:literal xmlns:ns5216="http://docbook.org/ns/docbook">k</ns5216:literal> prior to it
            having been incremented.</ns5212:para>
        <ns5217:para xmlns:ns5217="http://docbook.org/ns/docbook"/>
    </ns5195:section>
</ns5177:section>