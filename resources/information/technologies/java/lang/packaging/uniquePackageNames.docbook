<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns7115:section xmlns:ns7115="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.lang.packaging.uniquePackageNames">
  <ns7116:title xmlns:ns7116="http://docbook.org/ns/docbook">Creating Unique Package Names</ns7116:title>
  <ns7117:para xmlns:ns7117="http://docbook.org/ns/docbook">
    One of the reasons for packaging is to avoid name conflicts between classes of the
    same name by locating them in different packages. Of course the package names themselves
    could still pollute the global name space. You could create a package called <ns7118:literal xmlns:ns7118="http://docbook.org/ns/docbook">movie.utilities</ns7118:literal>,
    and so could your neighbour.
  </ns7117:para>
  <ns7119:para xmlns:ns7119="http://docbook.org/ns/docbook">
    Anybody wanting to use both packages would have a problem. To avoid this, the <ns7120:emphasis xmlns:ns7120="http://docbook.org/ns/docbook">de-facto</ns7120:emphasis>
    standard involves using you or your company's domain name (registered with IANA). For example,
    our institution owns the domain
    <ns7121:programlisting xmlns:ns7121="http://docbook.org/ns/docbook">
solms.co.za    
    </ns7121:programlisting>
  </ns7119:para>
  <ns7122:para xmlns:ns7122="http://docbook.org/ns/docbook">
    We now use this (in reverse form, from most to least significant) as the base of our package
    names. For example, all our packages start with:
    <ns7123:programlisting xmlns:ns7123="http://docbook.org/ns/docbook">
za.co.solms
      </ns7123:programlisting>
    such as
    <ns7124:programlisting xmlns:ns7124="http://docbook.org/ns/docbook">
za.co.solms.lang.annotations
za.co.solms.util.collections
za.co.solms.xml.schema.visualisation
      </ns7124:programlisting>
  </ns7122:para>
  <ns7125:note xmlns:ns7125="http://docbook.org/ns/docbook">
    <ns7126:para xmlns:ns7126="http://docbook.org/ns/docbook">
      At first, such long package names may seem cumbersome. Modern development tools, such as <ns7127:emphasis xmlns:ns7127="http://docbook.org/ns/docbook">Eclipse</ns7127:emphasis>,
      however typically take care of all packaging tasks (such as assigning to, and importing).
    </ns7126:para>
  </ns7125:note>
</ns7115:section>