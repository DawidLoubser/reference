<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude">

    
  <title>Platform independence via the Java Virtual Machine (JVM)</title>
  <para>
    One of Java's greatest strengths is it's platform independence. Compiled Java software can
    be moved and deployed across various different operating environments (Linux, Mac OS X, Microsoft Windows,
    BSD) as well as typically across different computing devices (Desktop, Server, Mainframe, Cellular Telephone,
    Internet-enabled Fridge, and so forth.
  </para>
  <para>
    This is made possible by the <emphasis>Java Virtual Machine</emphasis>, which is responsible for loading and running 
    the compiled, platform independent code. This is typically done either by <emphasis>interpreting</emphasis> the code
    in real-time (mapping the platform-independent code onto native, machine-specific code) or, more commonly, by using a 
    Just-In-Time compiler to compile Java code to native code as it is loaded (with immense performance benefits).
  </para>
  <para>
    The Java Virtual Machine not only provides the support for processes like Garbage collection (automatic memory management)
    and security, but also contains all the standard class libraries. These class libraries form the standard operating 
    environment for any Java-based application, and provide an unprecedented degree of functionality.
  </para>
</section>
