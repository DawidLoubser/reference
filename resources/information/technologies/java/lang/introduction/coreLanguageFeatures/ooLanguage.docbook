<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude">

    
  <title>Java as an object-oriented programming language</title>
  <para>
     Java is a clean, robust object-oriented language with good support for most
     object-oriented concepts (with the notable exception of 
     <emphasis>multiple inheritance</emphasis> - omitted for reasons of complexity).
  </para>
  <para>
    The following is directly supported:
    <itemizedlist>
      <listitem>
        <para>
          <emphasis>Dependency</emphasis> and <emphasis>Association</emphasis> relationships
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Specialisation</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Interfaces</emphasis> (the cornerstone of contract-driven design)
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Polymorphism</emphasis> (substitutability)
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Exceptions</emphasis> (a consistent error-handling mechanism, and also an important part of contract-driven design)
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Generics</emphasis> (parameterised classes)
        </para>
      </listitem>
    </itemizedlist>
    
    Java has support for <emphasis>specialisation</emphasis> and <emphasis>association</emphasis> 
    relationships, as well as interfaces, polymorphism, exception handling, inner and static nested classes and generics or
    parametrized classes. 
  </para>
  <para>
    Though no known object-oriented language <emphasis>natively</emphasis> supports the behaviour
    of the other two key UML relationships, <emphasis>Aggregation</emphasis> and <emphasis>Composition</emphasis>,
    Java language is flexible enough (in no small part because of the <emphasis>metadata</emphasis> capabilities
    provided by <emphasis>Annotations</emphasis>) to make this behaviour possible, either by manual implementation, 
    or through automatic code-generation frameworks).
  </para>
</section>