<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Use Java Scripting to provie a command interface to an application</title>
    <para>
        At times it is useful to enable users to interact with an application in a more fundamental, flexible and generic way. For this
        purpose one may provide a command interface to an application. The commands typed in by the user need to be interpreted
        and mapped onto actions performed on the application itself.
    </para>
    <para>
        Command interface can be used to configure the application and to query or manipulate the state of an application.
        Common scripting languages used for this purpose include
        <itemizedlist>
            <listitem><para>
                <emphasis>Jython</emphasis> provides a command line interpreter which can be used for a Jython command shell,
            </para></listitem>
            <listitem><para>
                <emphasis>Jaskell</emphasis> a Haskell Java port supporting functional programming - Jaskell is, for example, used to configure
                the build tool Neptune,
            </para></listitem>
            <listitem><para>
                <emphasis>Scheme</emphasis> for a Lisp-like command interface, and
            </para></listitem>
            <listitem><para>
                <emphasis>TCL</emphasis>, the Tool Command Language, can be used to provide a command interface for your application.
            </para></listitem>
            <listitem><para>
                <emphasis>pnuts</emphasis> provides an interactive command interpreter which is embeddable through an API and supports dynamic and static
                translation to Java byte code.
            </para></listitem>
        </itemizedlist>
        
    </para>
</section>    
