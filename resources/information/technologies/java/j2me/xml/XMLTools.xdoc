<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/samples/docbook/xml/docbookx.dtd"-->
<section id="resources.information.technologies.java.j2me.xml.XMLTools"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Tools for XML</title>
    <section>
        <title>Editors</title>
        <para> You can, of course, use any text editor to write XML documents. If you write a lot of
            XML, this will become quite tedious. XML editors typically provide the following
            assistance.
            <!--itemizedlist>
            <listitem><itemizedlist><title>qwe</title><listitem><para>lkjh</para></listitem></itemizedlist></listitem>
            </itemizedlist-->
            <itemizedlist>
                <listitem>
                    <itemizedlist>
                        <title>Multiple views onto the XML document:</title>
                        <listitem><para> Normal text views
                            </para></listitem>
                        
                        <listitem>
                            <para>Tree and/or table and/or nested box views.
                            </para>
                        </listitem>

                        <listitem>
                            <para>Presentation views (e.g. browser views).
                            </para>
                        </listitem>
                        
                        <listitem>
                            <para>DTD and Schema views.
                            </para>
                        </listitem>
                    </itemizedlist>

                </listitem>
                <listitem>
                    <para> Easy element selection with automatic provision of end-tags.</para>
                </listitem>
                <listitem>
                    <para> Parsing and syntax verification. </para>
                </listitem>
            </itemizedlist>
        </para>
        <para> Free XML editors can be obtained from IBM, Microsoft and other sources.</para>
        <para> One of the more powerful editors (which is neither free nor dirt cheap) is<emphasis>
            XML-Spy</emphasis>. It switches between nested-box and table views and can make editing
            and viewing of XML documents a much more pleasant experience than what it typically is.
            A trial version can be obtained from www.xml-spy.com.</para>
        <para>
            <emphasis> XML Pro</emphasis> (www.vervet.com), <emphasis> XML Authority</emphasis>
                (www.extensibility.com),<emphasis> XMetaL</emphasis> (www.xmetal.com) and <emphasis>
                Clip! XML Editor</emphasis> (www.t2000-usa.com) are other XML editors you might want
            to have a look at.</para>
    </section>
    <!-- #################################################################### -->
    <section>
        <title>Browsers</title>
        <para> The XML support in browsers is varying. Internet Explorer 5 and upwards has quite a
            bit of XML support including at least partial support for XML+XSL and XML+CSS. Other
            browsers which have support for XML include Mozilla (www.mozilla.org) and Jumbo</para>
    </section>
    <!-- #################################################################### -->
    <section>
        <title>Parsers</title>
        <para> There is a myriad of free parsers available. IBM, Microsoft, Sun and many other (see
            also www.JimClark.com) have XML parsers. Many of them are written in Java. These parsers
            typically implement one of two standard APIs, DOM and SAX.</para>
    </section>
    <!-- #################################################################### -->
    <section>
        <title>DOM Parsers</title>
        <para> DOM (the Document Object Model) is the standard API published by the W3C. It
            constructs an object tree in memory which represents the XML document tree. By modifying
            the object tree one modifies the XML document. This API is very convenient when one
            wants to insert, move or remove elements and when one wants to perform complex queries
            accross the XML document tree.</para>
    </section>
    <!-- #################################################################### -->
    <section>
        <title>SAX Parsers</title>
        <para> SAX is a simple parser which reads sequentially through an XML document generating
            events as new elements, attributes comments or processing instructions are encountered.
            The information is processed by writing event handlers for these events.</para>
        <para> While DOM parsers load the entire document into memory, SAX parsers simply read
            sequentially through the document without ever loading the document into memory. They
            thus require much less resources and are generally used for performing simple queries.</para>
        <para> It is interesting to note that most implementations of DOM parsers use a SAX parser
            to construct the document tree.</para>
    </section>
</section>
