<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns2486:section xmlns:ns2486="http://docbook.org/ns/docbook" xml:id="resources.information.tecnologies.java.networking.tcpIpCommunication.aSimpleEchoServer">
    
    <ns2487:title xmlns:ns2487="http://docbook.org/ns/docbook">A simple Echo Server</ns2487:title>
<ns2488:para xmlns:ns2488="http://docbook.org/ns/docbook">
The time server discussed in the previous section uses UDP (User
Datagram Protocol) communication. This is a fast connectionless
protocol for which delivery is not guaranteed.
</ns2488:para>
    
<ns2489:para xmlns:ns2489="http://docbook.org/ns/docbook">In this section we shall develop an echo server which uses TCP
(Transmission Control Protocol). TCP/IP is a connection-oriented
protocol which which guarantees that if sequenced non-duplicated
delivery was not achieved, the user will receive an error message.</ns2489:para>

<ns2490:para xmlns:ns2490="http://docbook.org/ns/docbook">The echo server shown below creates a server socket on waits for a
TCP/IP client to connect to a dedicated port, <ns2491:emphasis xmlns:ns2491="http://docbook.org/ns/docbook" role="verb">myPort</ns2491:emphasis>. Once
the connection with a client is established, it establishes an
input and an output stream to the client socket and accepts input
lines from the client and returns them with an ``Echo: '' prepended
infront of each line. On receiving the string ``CIAOU'' from the
client the server closes the connection and terminates.</ns2490:para>

<ns2492:para xmlns:ns2492="http://docbook.org/ns/docbook">
<ns2493:programlisting xmlns:ns2493="http://docbook.org/ns/docbook">
<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" parse="text" href="EchoServer.java"/>
</ns2493:programlisting>
</ns2492:para>
    
</ns2486:section>