<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.tecnologies.java.j2se.java2D.introduction"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="file:/home/ernst/projects/solms/Docs/re_schema/solmsDoc.xsd"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title role="Introduction">Introduction</title>

<para>Java 2D is a very powerful two-dimensional graphics library for both, 
two-dimensional drawing and two-dimensional image manipulation. It includes
functionality for

<itemizedlist>
  <listitem><formalpara><title>Line Drawing</title><para> Drawing lines of any thickness, color, and style 
            including support for various line joins and caps.</para></formalpara></listitem>
  <listitem><formalpara><title>Shape Drawing</title><para> Additional to supplying a relatively rich set of 2D
            shapes, Java 2D allows one define general shapes. These
            shapes may be filled with
              <itemizedlist>
                <listitem><para>Solid colors.</para></listitem>
                <listitem><para>Color gradients.</para></listitem>
                <listitem><para>Textures and images.</para></listitem>
              </itemizedlist></para></formalpara></listitem>
  <listitem><formalpara><title>Text Drawing</title><para> Local font access</para></formalpara></listitem>
  <listitem><formalpara><title>Hit Detection</title><para> </para></formalpara></listitem>
  <listitem><formalpara><title>Transformations</title><para> Drawings and images can be 
              <itemizedlist>
                <listitem><para>Translated and rotated.</para></listitem>
                <listitem><para>Scaled.</para></listitem>
                <listitem><para>Sheared.</para></listitem>
                <listitem><para>Clipped.</para></listitem>
              </itemizedlist></para></formalpara></listitem>
  <listitem><formalpara><title>Image Convolutions</title><para> Genral convolutions are supported. Some 
          standard convolutions are provided for you. These include
          <itemizedlist>
            <listitem><para>Sharpening and Blurring.</para></listitem>
            <listitem><para>Posterization.</para></listitem>
            <listitem><para>Color Inversion (negative images).</para></listitem>
            <listitem><para>Edge Detection.</para></listitem>
            <listitem><para>Thresholding</para></listitem>
          </itemizedlist></para></formalpara>
  </listitem>
  <listitem><formalpara><title>Composites</title><para> This allows one to specify how colors are moiced when 
                  objects overlap. Java 2D uses the alpha-blending model
                  which takes color model information into account when
                  compositing colors.</para></formalpara>
  </listitem>
    <listitem><formalpara><title>Printing</title><para> Java 2D uses a uniform rendering model for printer and
                  display devices.</para></formalpara></listitem>
</itemizedlist>
</para>
    <para>
Java 2D represents a significant extension of the graphics support of previous
Java versions.
</para>
    
</section>
