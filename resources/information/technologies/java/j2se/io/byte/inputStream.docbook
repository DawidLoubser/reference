<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:id="resources.information.technologies.java.j2se.io.byte.inputStream">
    <title>InputStream</title>
    <para>
        The Keyboard, files, and internet sockets are all examples of input streams.
        Reading from a stream is achived through the three <literal>read()</literal> methods:
    </para>
    
    <para>
<programlisting language="Java">
public abstract int read() throws IOException; 
</programlisting>
        Reads a single byte from the stream, and returns its value. If there is no more data available
        from the stream (<abbrev>ie</abbrev> the end of a file has been reached) <literal>-1</literal>
        is returned. This is why the return type is declared as an <literal>int</literal>, and not a 
        <literal>byte</literal>, as <literal>byte</literal> can only represent a number in the range
        0 - 255.
    </para>
    
    <para>
<programlisting language="Java">
public int read(byte[] bytes) throws IOException;
</programlisting>
        Attempts to read <literal>bytes.length</literal> bytes into the given byte array. The returned
        integer indicates the actual number of bytes read.
    </para>    
    
    <para>
<programlisting language="Java">
public int read(byte[] bytes, int offset, int length) throws IOException;
</programlisting>
        Attempts to read <literal>length</literal> bytes from the stream, and store them in the byte array
        from position <literal>offset</literal> onwards. The returned integer indicates the actual number of bytes read.
    </para>
    
    <para>
        An input stream is closed with the <literal>close()</literal> method.
    </para>
    
</section>