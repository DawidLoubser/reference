<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:id="resources.information.technologies.java.j2se.io.data.example.productInventory">
    
    <title>Example usage of Data streams: Product Inventory</title>
    <para>
        As an example of using Data streams, let us consider a small product-management
        application with a very basic text-driven user interface. Several products are
        stored in an inventory, and separate classes function as the persistence layer
        (responsible for I/O) and as main application (responsible for mediating between
        the user and the inventory).
    </para>
  <para>
    For brevity, this application does not use contracts. If a more
    contract-driven approach was followed, we could de-couple from the
    different elements (persistence, user interface) more effectively.
  </para>
    <figure>
        <title>The static model for our Inventory application</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="productInventory.jpg"/>
        </imageobject>
      </mediaobject>
    </figure>
    
  <para>
The Product class
        <programlisting language="Java">
<xi:include href="src/products/Product.java" parse="text"/>
        </programlisting>
    </para>
    
    <para>The Inventory class
        <programlisting language="Java">
<xi:include href="src/products/Inventory.java" parse="text"/>
        </programlisting>
    </para>
    
    <para>The Inventory Persistence class
        <programlisting language="Java">
<xi:include href="src/products/InventoryPersistence.java" parse="text"/>
        </programlisting>
    </para>
    
    <para>The Main Product Application
        <programlisting language="Java">
<xi:include href="src/products/ProductApp.java" parse="text"/>
        </programlisting>
    </para>
    
    <para>Output after running Product Manager
        <programlisting language="Java">
<xi:include href="productInventoryOutput.txt" parse="text"/>
        </programlisting>
    </para>
    
    <note>
        <para>
            The data is stored in a binary format in the file. Opening it in a text editor will show that the
            data can largely not be read as text - Data input/output streams are required to convert the raw bytes
            into sensible data.
        </para>
    </note>
    
</section>