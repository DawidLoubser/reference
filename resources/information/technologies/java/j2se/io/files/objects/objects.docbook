<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:id="resources.information.technologies.java.j2se.io.files.object.objects">
    
    <title>The java.io.File class</title>
    <para>
        The <literal>java.io.File</literal> class is an object-oriented representation
        of a file or directory on the file system. A single instance
        represents a single file (whether it physically exists, or not).
    </para>
    <para>
        It contains several services for the manipulation
        and inspection of files and directories. Whereas classes like
        <literal>java.io.FileInputStream</literal> allow us to access the
      <emphasis>contents</emphasis> of the file, <literal>java.io.File</literal>
      accesses the information <emphasis>about</emphasis> the file, and
      makes some common functionality around creation, deletion, etc.
      available. Some common uses include:
        <itemizedlist>
            <listitem>
                <formalpara>
                    <title>Testing whether a file is indeed a file, or a directory (folder)</title>
                    <para>
                        With the <literal>isFile(), isDirectory()</literal> methods.
                    </para>
                </formalpara>                
            </listitem>
            <listitem>
                <formalpara>
                    <title>Testing whether a file exists</title>
                    <para>
                        With the <literal>exists()</literal> method.
                    </para>
                </formalpara>                
            </listitem>
            <listitem>
                <formalpara>
                    <title>Creating a new (empty) file or directory</title>
                    <para>
                        With the <literal>createNewFile(), mkdir(), mkdirs()</literal> methods.
                    </para>
                </formalpara>                
            </listitem>
          <listitem>
            <formalpara>
              <title>Delete a file or directory</title>
              <para>
                With the <literal>delete()</literal> method.
              </para>
            </formalpara>
          </listitem>
            <listitem>
                <formalpara>
                    <title>Checking accesibility and hidden status</title>
                    <para>
                        With the <literal>canRead(), canWrite(), isHidden()</literal> methods.
                    </para>
                </formalpara>
            </listitem>
            <listitem>
                <formalpara>
                    <title>Obtaining size and date information</title>
                    <para>
                        With the <literal>length(), lastModified()</literal> methods.
                    </para>
                </formalpara>
            </listitem>
        </itemizedlist>
        and more. See the JavaDoc documentation of <emphasis>java.io.File</emphasis> for all the available
        services.
        <note>
            <para>
                Input and Output streams cannot be obtained from a <literal>java.io.File</literal>. Rather,
                <literal>java.io.FileInputStream</literal> and <literal>java.io.FileOutputStream</literal>
                both have constructors which take a <literal>File</literal> as an argument.
            </para>
        </note>
    </para>
    <xi:include href="printingDirTree.docbook"/>
</section>