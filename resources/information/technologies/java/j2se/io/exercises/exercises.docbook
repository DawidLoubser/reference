<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xml:id="resources.information.technologies.java.j2se.io.exercises.exercises">
    
    <title>I/O Exercises</title>
    <para>
        <orderedlist>
            <listitem>
                <formalpara>
                    <title>Display files in the terminal window</title>
                    <para>
                        Write a program which takes as command-line argument a file name. The contents
                        of this file must be displayed on-screen. <emphasis>Hint: Look at the previously-discussed
                        file copy example. Remember that standard output (System.out) is just a normal low-level stream.</emphasis>
                    </para>
                </formalpara>                
            </listitem>
            <listitem>
                <formalpara>
                    <title>Count Java source files</title>
                    <para>
                        Write a program which, given the name of a directory, will recursively count the total number of
                        <literal>.java</literal> (or any type you prefer) files in it, and all its subdirectories. Display
                        this number to the user.
                    </para>
                </formalpara>                
            </listitem>
            <listitem>
                <formalpara>
                    <title>Manage a collection of vehicles</title>
                    <para>
                        Write a program to manage a collection of vehicles. The user must be able to modify the collection
                        (add / remove) and save it to a file for later retrieval. To make the exercise more interesting, you may 
                        want to manage a polymorphic collection of
                        vehicles (i.e. a hierarchy of different vehicle
                        types). <emphasis>Any I/O persistence method may be
                          used,
                        e.g. Data Streams, Serialization, Readers/Writers.</emphasis>
                    </para>
                </formalpara>                
            </listitem>
        </orderedlist>        
    </para>
</section>