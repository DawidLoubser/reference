<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.technologies.java.j2se.multiThreading.executors.executor.executor"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>The executor interface</title>
  <para>
    The executor interface simply requires that any executor can execute a
    <literal>java.lang.Runnable</literal> instance handed to it:
    <programlisting><![CDATA[
package java.util.concurrent; 
      
public interface Executor
{
  public void execute(Runnable task);
}      
      ]]></programlisting>
  </para>
  <para>
    The caller is abstracted from the <emphasis>exact manner</emphasis> in which the task is executed.
    Whether the task is executed within a new thread, within the calling
    thread or within a thread obtained from a thread pool is left to the discretion of the <literal>Executor</literal>
    implementation.
  </para> 
 
</section>  