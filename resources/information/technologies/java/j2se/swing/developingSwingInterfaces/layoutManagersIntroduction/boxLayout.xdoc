<?xml version="1.0" encoding="UTF-8"?>
<section
    id="resources.information.technologies.java.j2se.swing.developingSwingInterfaces.layoutManagersIntroduction.boxLayout"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title role="BoxLayout">BoxLayout</title>
    <para>In the <literal>BoxLayout</literal> components are layed out either on top of one another
        or next to one another. The result of the following code is shown below :</para>
    <para/>
    <para>
        <programlisting>
setTitle("Testing GridLayout");
getContentPane().setLayout(new BoxLayout(getContentPane(),
    BoxLayout.Y&amp;#x005F;AXIS));
getContentPane().setBackground(Color.white);
getContentPane().add(new JButton("Button 1"));
getContentPane().add(new JButton("The second button"));
getContentPane().add(new JButton("3"));
getContentPane().add(new JButton("Button 4"));
getContentPane().add(new JButton("Button 5"));
            </programlisting>
    </para>
    <para>
        <literal>BoxLayout</literal> is a new layout manager packaged with the swing class library.
        It is often used instead of the more complex <literal> GridbagLayout</literal>. The two
        arguments to the constructor are the container it manages and the axis along which the
        components are laid out.</para>
    <para>Unlike other layout managers, <literal>BoxLayout</literal> respects the components maximum
        size as well as the horizontal and vertial allignment.</para>
    <para/>
</section>
