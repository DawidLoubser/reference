<?xml version="1.0" encoding="UTF-8"?>
<section
    id="resources.information.technologies.java.j2se.swing.developingSwingInterfaces.layoutManagersIntroduction.gridbagLayout"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title role="GridBagLayout">GridBagLayout</title>
    <para>
        <literal>GridBagLayout</literal> is the most complex, but also the most flexible layout
        manager. It divides the container into a number of rows and columns. The rows and columns
        may, however, have different sizes and components may occupy a range of grid positions.
        Components can be positioned and sized within the allocated space.</para>
    <figure>
        <title>GridBagLayout Example</title>
        <graphic fileref="GridBagLayout.jpg"/>
    </figure>
    <para>
        <literal>GridBagLayout</literal> uses the class <literal>GridBagConstraints</literal> as a
        helper class. The way in which a component is inserted in the grid bag is
        specified<literal>GridBagConstraints</literal> for that component. </para>
    <section>
        <title role="GridBagConstraints">GridBagConstraints</title>
        <para>
            <literal>GridBagConstraints</literal> is for all intents and purposes just a record
            containing information about </para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>The no of grid positions reserved for the component. </para>
                </listitem>
                <listitem>
                    <para>How the component is placed within its reserved space. </para>
                </listitem>
                <listitem>
                    <para>How the cells reserved for this component will be resized when the
                        container is resized.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>the arguments to <literal>GridBagConstraints</literal> are gridx, gridy The cell
            occupying the upper left corner of the reserved space for that component. gridwidth,
            gridheight The number of cells reserved for that component in both, the horizontal and
            the vertical direction. fill This field specifies whether a component should be
            displayed in its preferred size or whether it should be stretched to fill the space
            provided by the allocated cells. The value is set to either <literal>NONE</literal>,
            <literal>HORIZONTAL</literal>, <literal>VERTICAL</literal> or <literal>BOTH</literal>.
            anchor The field is only of importance if the <literal>fill</literal> is not set to
            <literal>BOTH</literal>. It specifies the positioning of the component within the space
            provided by the allocated cells. the value is set to either <literal>CENTER</literal>,
            <literal>NORTH</literal>, <literal>NORTHEAST</literal>, <literal>EAST</literal>,
            <literal>SOUTHEAST</literal>, <literal>SOUTH</literal>, <literal>SOUTHWEST</literal>,
            <literal>WEST</literal> or <literal>NORTHWEST</literal>. weightx, weighty These fields
            specify how the group of cells allocated for the component are proportionally resized
            when the container is resized. If these fields are set to the same value for all
            components all the cells will be resized equally. Regions which should not resize at all
            can receive a weight of 0. Other regions will then take up their slack. ipadx, ipady
            These fields specify the component's internal padding within the layout, i.e. how much
            to add to the minimum size of the component. The width of the component will be at least
            its minimum width plus (2*ipadx) pixels. Similarly, the height of the component will be
            at least the minimum height plus (2*ipady) pixels. insets This field obtains an
            <literal>Insets</literal> which specifies the component's external padding, i.e. the
            minimum amount of space between the component and the edges of its allocated area. By
            default this is zero. Generally an <literal>Insets</literal> is an object specifying the
            borders of a container. It specifies the space that a container must leave at each of
            its edges. The space can be a border, a blank space, or a title.</para>
        <para/>
    </section>
    <section>
        <title role="Demonstrating GridBagLayout">Demonstrating GridBagLayout</title>
        <para>The following little program places various buttons using the
            <literal>GridBagLayout</literal> manager.</para>
        <para>
            <programlisting>
<xi:include href="./src/TestGridBag.java" parse="text"/>            
            </programlisting>
        </para>
        <para> The resultant user interface is shown above. The first component fills the top left
            cell. The buttons labeled "1" and "2" fill the adjacent two cells. The button "Press me
            please" is centered in the two cells below these two buttons. While "Press me again" is
            positioned in the top right corner of cells (4,1) to (6,1). The positioning of the
            remaining components can be found in the above source listing. </para>
        <figure>
            <title>GridBagLayout Example</title>
            <graphic fileref="GridBag.jpg"/>
        </figure>
    </section>
</section>
