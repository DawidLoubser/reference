<?xml version="1.0" encoding="UTF-8"?>
<section
    id="resources.information.technologies.java.j2se.swing.developingSwingInterfaces.designOverview.mvcArchitecture"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title role="The Model-View-Controller Architecture">The Model-View-Controller Architecture</title>
    <para>The Model-View-Controller (MVC) architecture is used consistently throughout all Swing
        components. <literal>JComponent</literal> houses both, the View and Controller parts of the
        architecture. For each component there is an associated model interface and a default
        implementation. For example, for buttons there is the <literal> ButtonModel</literal>
        interface and a default implementation is provided via
        the<literal>DefaultButtonModel</literal> class.</para>
    <para>You can provide your own data-model by implementing the appropriate model interface or
        subclassing the appropriate model class. For example, you could subclass <literal>
        DefaultListModel</literal> or implement the <literal>ListModel</literal> interface. To
        assign your model to the swing component you use the component's
        <literal>setModel()</literal> service.</para>
    <para/>
</section>
