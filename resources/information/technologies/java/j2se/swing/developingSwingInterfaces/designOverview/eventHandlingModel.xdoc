<?xml version="1.0" encoding="UTF-8"?>
<section
    id="resources.information.technologies.java.j2se.swing.developingSwingInterfaces.designOverview.eventHandlingModel"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title role="The Event-Handling Model">The Event-Handling Model</title>
    <para>The most major change in the Java core since Java 1.0 was released is most probably the
        introduction of the delegation based event handling model with Java 1.1. At the time it
        caused some disturbance. The rumours along the line of </para>
    <para>"If this is the change from Java 1.0 to Java 1.1, I hate to see what Java 2 looks like."</para>
    <para>For starters, it would have been fair enough to name Java 1.1 Java 2 in the first place
        (At least Java 1.2 was rapidly renamed to Java 2). Furthermore, with Java 2 there were a
        huge amount of additions to the Java standard, but no major core changes.</para>
    <para>The delegation based event handling model is very simple and very clean. You have event
        sources which produce events. Anybody who wants to listen to an event produced by an event
        source must register with that source. In order to promise that the event listener has the
        required services to process the event it receives, it must implement an appropriate event
        listener interface.</para>
    <para>There is no restriction on the number of object which can be notified of an event. They
        will all receive the event, though the order in which they will receive it is not guaranteed
        by Java.</para>
    <para>One of the consequences of this design is that event handlers should either process the
        event rapidly or, if not, then delegate the event handling task to a separate execution
        thread. Otherwise the other event listeners might have to wait a long time before they will
        be notified of the event.</para>
    <para/>
</section>
