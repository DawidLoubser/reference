<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns4085:section xmlns:ns4085="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2se.swing.developingSwingInterfaces.designOverview.mvcArchitecture">
    <ns4086:title xmlns:ns4086="http://docbook.org/ns/docbook">The Model-View-Controller Architecture</ns4086:title>
    <ns4087:para xmlns:ns4087="http://docbook.org/ns/docbook">The Model-View-Controller (MVC) architecture is used consistently throughout all Swing
        components. <ns4088:literal xmlns:ns4088="http://docbook.org/ns/docbook">JComponent</ns4088:literal> houses both, the View and Controller parts of the
        architecture. For each component there is an associated model interface and a default
        implementation. For example, for buttons there is the <ns4089:literal xmlns:ns4089="http://docbook.org/ns/docbook"> ButtonModel</ns4089:literal>
        interface and a default implementation is provided via
        the<ns4090:literal xmlns:ns4090="http://docbook.org/ns/docbook">DefaultButtonModel</ns4090:literal> class.</ns4087:para>
    <ns4091:para xmlns:ns4091="http://docbook.org/ns/docbook">You can provide your own data-model by implementing the appropriate model interface or
        subclassing the appropriate model class. For example, you could subclass <ns4092:literal xmlns:ns4092="http://docbook.org/ns/docbook">
        DefaultListModel</ns4092:literal> or implement the <ns4093:literal xmlns:ns4093="http://docbook.org/ns/docbook">ListModel</ns4093:literal> interface. To
        assign your model to the swing component you use the component's
        <ns4094:literal xmlns:ns4094="http://docbook.org/ns/docbook">setModel()</ns4094:literal> service.</ns4091:para>
    <ns4095:para xmlns:ns4095="http://docbook.org/ns/docbook"/>
</ns4085:section>