<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
         version="5.0"
         xml:id="resources.information.technologies.java.j2se.swing.developingSwingInterfaces.comboBoxes">
    <title>Combo Boxes</title>
    <para>Combo boxes are more generally referred to as drop-down list boxes. They are often a
        preferable alternative to collections of radio buttons. The selection is also mutually
        exclusive. A combo box requires less space on the GUI users see only the currently relevant
        information (the current selection).</para>
    <para>Like all swing components, combo boxes adhere to the Model-View-Controller model with the
        view and the control services supplied by the swing component (verb+JComboBox+ in our
        example) and the Model being an external data model.</para>
    <para>The data model interface for a component is specified in a corresponding Java interface.
        For example, <literal>ComboBoxModel</literal> lays down the specifications for data models
        which can be applied to combo boxes. The <literal>ComboBoxModel</literal> interface extends
        the <literal>ListModel</literal> interface.</para>
    <para>Java 2 <literal>DefaultComboxModel</literal> as a default data model for combo boxes,
        which, like <literal>DefaultListModel</literal>, resembles an old Java
        <literal>Vector</literal> interface.</para>
    <para>The resultant user interface is shown in the following figure:
    </para>
    <figure>
        <title>JComboBox</title>
        <mediaobject>
         <imageobject>
            <imagedata fileref="JComboBox.jpg"/>
         </imageobject>
      </mediaobject>
    </figure>    
    <para>One can only select one item from a combo box. The action of selecting an item from a
        combo box is analogous to that of selecting a radio button. One can, however, also interpret
        it asthat of requesting a particular action.</para>
    <para>
        <programlisting>
         <xi:include href="./src/TestComboBoxScrollPane.java" parse="text"/>              
        </programlisting>
    </para>
    <para> For example, in our application we use the combo box to select an image we would like to
        view. We thus register our application as an <literal>ActionListener</literal> which listens
        to action events from our combo box. </para>
    <xi:include href="./comboBoxes/editableComboBoxes.docbook"/>
</section>