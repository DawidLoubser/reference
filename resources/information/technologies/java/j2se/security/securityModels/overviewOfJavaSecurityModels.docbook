<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<ns3463:section xmlns:ns3463="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2se.security.securityModels.overviewOfJavaSecurityModels">

    <ns3464:title xmlns:ns3464="http://docbook.org/ns/docbook">Overview of Java's Security Models</ns3464:title>

<ns3465:para xmlns:ns3465="http://docbook.org/ns/docbook">Java is in a position to enforce a very rigid security model since developers
cannot write code which accesses any system resources directly -- all access
passes at all times through a security manager (even if you are not aware
of this).</ns3465:para>
<ns3466:para xmlns:ns3466="http://docbook.org/ns/docbook">
Java's security models evolved from a very coarse grained model where any 
remotely loaded code was sand-boxed (had no access to local resources) 
and any locally loaded code unrestricted access to system resources to a
very flexible and fine-grained model where the access for local and remote
code could be defined very exactly via security policies.
</ns3466:para>
    
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" href="theJava1_0SandBoxModel.docbook"/>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" href="theJava1_1SandBoxModel.docbook"/>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" href="java2SecurityModel.docbook"/>
</ns3463:section>