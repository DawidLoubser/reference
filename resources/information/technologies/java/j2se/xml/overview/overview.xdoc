<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2se.xml.apis.overview.overview"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Overview of the XML APIs in Java SE</title>
    
    <para>
        Since the release of <abbrev>XML</abbrev> in 1998, Java has always provided
        excellent support to process (read, write, inspect and transform) XML
        through standard extensions and third-party libraries.
    </para>
    <para>
        Since <emphasis>Java 1.4</emphasis>, however, this XML processing capability
        became a standard feature of the runtime environment, removing the need to
        package third-party libraries with your applications.
    </para>
    
    <section>
        <title>Standard XML processing via JAXP</title>
        <para>
            The <literal>JAXP</literal> API contains functionality (in the <literal>javax.xml.parsers</literal>
            and <literal>javax.xml.transform</literal> packages) for:
            <itemizedlist>
                <listitem>
                    <formalpara>
                        <title>Processing XML using an in-memory tree structure</title>
                        <para>Provided by the <emphasis>DOM</emphasis> (Document Object Model) API,
                        in the <literal>org.w3c.dom</literal> packages.</para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>Processing XML sequentially through event handling</title>
                        <para>
                            Provided by the <emphasis>SAX</emphasis> (Simple API for XML), in the
                            <literal>org.xml.sax.*</literal> packages.
                        </para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>Transformation of XML using XSLT</title>
                        <para>
                            Using the <literal>javax.xml.transform</literal> packages.
                        </para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>Document validation (using Schemas)</title>
                        <para>
                            Using the <literal>javax.xml.validation</literal> packages, validation can 
                            be performed stand-alone, or integrated with your usage of the other
                            JAXP APIs.
                        </para>
                    </formalpara>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    
    <section>
        <title>Additional APIs</title>
        <para>
            Many additional <abbrev>API</abbrev>s and utilities exist to perform most kinds of XML
            processing one could need. In addition, with each release of Java, additional support
            is built-in to the runtime environment.
            <itemizedlist>
                <listitem>
                    <formalpara>
                        <title>Improved / Simplified in-memory tree processing</title>
                        <para>The <emphasis>XOM</emphasis> (XML Object Model)
                        API contains several improvements over the (standard, cross-language)
                        <abbrev>DOM</abbrev> API.</para>
                    </formalpara>
                </listitem>
                <listitem>
                    <formalpara>
                        <title>XML Schema- to Java mapping</title>
                        <para>
                            Using the standard <emphasis>JAXB</emphasis> or <emphasis>Apache XMLBeans</emphasis> frameworks, 
                            seamless mapping between the representation of a particular object in Java, and
                            Schema-based XML, can be achieved.
                        </para>
                    </formalpara>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    
    <section>
        <title>Java EE and Java ME APIs</title>
        <para>
            Java EE (Enterprise) contains several additional XML APIs, the most notable
            being <emphasis>JAX-WS</emphasis> (the successor of <emphasis>JAX-RPC</emphasis>) for
            <literal>SOAP</literal> / Web Services.
        </para>
        <para>
            Similarly, Java ME implementations (for mobile devices) typically contain lightweight parsers
            suitable for small, memory-limited devices (as well as SAX).
        </para>
    </section>
    
    
</section>
