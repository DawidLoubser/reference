<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2se.collections.algorithms"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
    xmlns:xi="http://www.w3.org/2001/XInclude">    
      <title role="Algorithms">Algorithms</title>
      <para>The algorithms are generic operations that can be applied to a variety of collections.
        The algorithms are stable and fast.</para>
      <para>They are methods which perform useful computations, like searching and sorting, on
        objects that implement collection interfaces. These algorithms are polymorphic because the
        same method can be used on many different implementations of the appropriate collections interface.</para>
      <para>Most of the algorithms operate on lists, i.e. on collections like <literal>ArrayList</literal> 
        and <literal>LinkedList</literal> which implement the <literal>List</literal> interface. These include
        searching, sorting, copying, shuï¬„ing, filling a list with a specific object and reversing the order of 
        the elements. Other algorithms operate on all <literal>Collection</literal>s. These include finding 
        the maximum or minimum element of a collection in either natural order or according to an ordering specified by a comparator.</para>
      <para>The algorithms are packages as class services (static methods) within a utility class,
        Collections which cannot be instantiated. The algorithms are self explanatory. To
        illustrate them consider the following method which receives a <literal>List</literal> as argument, makes a copy, sorts the copy in natural order
        and returns the copy:</para>
      <para/>
      <para>
          <programlisting>
<xi:include href="./src/TestCollections.java" parse="text"/>
          </programlisting>
      </para>
    </section>