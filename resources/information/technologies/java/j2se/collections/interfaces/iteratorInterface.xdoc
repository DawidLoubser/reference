<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.j2se.collections.interfaces.iteratorInterface"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title role="The Iterator Interface">The Iterator Interface</title>
    <para>Java 2 only supplies two iterator interfaces, the mother of all iterators
        <literal>Iterator</literal> and one specialization, 
        <literal>ListIterator</literal>. An iterator allows the user to step through a
        collection and query the elements of a collection. Optionally an iterator may also supply
        the service of removing the element it currently points to:</para>
    <para/>
    <para>
        <programlisting>
 public interface Iterator
 {
   boolean hasNext ();
   Object  next    ();
   void    remove  () throws UnsupportedOperationException;
 }    
        </programlisting>
    </para>
    <para> Iterators are the crux to polymorphic manipulation of collections. As we have seen in the
            <literal>getTotalSalary(Collection)</literal> method, the combination
        of the <literal>Collection</literal> and <literal>Iterator</literal> interfaces allows us to work generically with
        collections without having to concern ourselves with the type of collection used.</para>
    <para/>
</section>
