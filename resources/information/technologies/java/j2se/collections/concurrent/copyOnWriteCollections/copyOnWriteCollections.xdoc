<?xml version="1.0" encoding="UTF-8"?>
<section
  id="resources.information.technologies.java.j2se.collections.concurrent.copyOnWriteCollections.copyOnWriteCollections"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title role="Copy-on-write collections">Copy-on-write collections</title>
  <para>
    Copy-on-write collections are meant to provide a significant performance benefit in a threaded
    environment to collections with a high read load, but which are updated very infrequently.
  </para>
  <para>
    Any number of concurrent reads is allows. The collection maintains an internal collection which,
    upon modification is copied. The copy is then updated and the user collection is switched to use
    the new internal collection.
  </para>
  <para>
    Because this collection is meant for infrequent updates, but frequent read access, all internal
    implementations use an array (not a linked list). Java provides two implementations:
    <itemizedlist>
      <listitem><para><literal>java.util.concurrent.CopyOnWriteArrayList</literal>, and</para></listitem>
      <listitem><para><literal>java.util.concurrent.CopyOnWriteArraySet</literal>.</para></listitem>
    </itemizedlist>  
  </para>
</section>