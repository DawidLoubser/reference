<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?><section xmlns="http://docbook.org/ns/docbook" xml:id="resources.information.technologies.java.j2se.collections.concurrent.maps.maps">
  <title role="Concurrent maps">Concurrent maps</title>
  <para>
    Concurrent maps aim to provides efficient thread-safe implementation of a
    <literal>java.util.Map</literal>s. Java provides one implementation,
    <literal>java.util.concurrent.ConcurrentHashMap</literal> which
    <itemizedlist>
      <listitem><para>
         does not synchronize any of its read methods,  
      </para></listitem>
      <listitem><para>
        does not provide locks for the entire map, but, instead segements the map with a thread
        locking, at any time, only a particular segment of the map. The number of segments is
        internally optimized to the number of threads potentially accessing the map. The latter is
        specified via a <literal>concurrencyLevel</literal> whose default is 16. This variable
        should be set to the maximum number of threads which will access the map.
      </para></listitem>
    </itemizedlist>
  </para>
</section>