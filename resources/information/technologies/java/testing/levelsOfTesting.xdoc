<?xml version="1.0" encoding="UTF-8"?>
<section id="resources.information.technologies.java.lang.buildingProjects.levelsOfTesting"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="file:/home/ernst/projects/solms/Docs/re_schema/solmsDoc.xsd"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    
    <title role="Levels of Testing">Levels of Testing</title>
<para>
One should test at all levels of the software specification hierarchy. This facilitates
confidence in that the system is working correctly and enables one to localize problems
quickly. One generally differentiates between
<itemizedlist>
  <listitem><formalpara><title>Unit testing</title><para> Each unit or class of the system is tested to verify that the 
                      detailed design for that unit has been correctly implemented.</para> </formalpara></listitem>
  <listitem><formalpara><title>Integration testing</title><para> Progressivle larger groups of tested software components 
                             collaborating to perform progressively larger and more 
                             responsible tasks. </para></formalpara></listitem>
  <listitem><formalpara><title>System testing</title><para> The system is tested in its deployment environment or a simulation
                        thereof for the complete system specifications. A variation of a
                        system test is the <emphasis>acceptance test</emphasis> performed by the client
                        when deciding whether or not to accept the delivered version of
                        the system.</para></formalpara></listitem>
</itemizedlist></para>

<para>Of course, to be able to write tests one has to have detailed system specifications. 
Often the detailed system specifications can be supplied in the form of the test itself.
In this course we shall focus on unit or class testing.</para>
    
    <xi:include href="../../../../technologies/java/lang/testing/unitTesting.xdoc"/>
    
</section>
