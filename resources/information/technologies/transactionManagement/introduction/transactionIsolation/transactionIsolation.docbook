<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author: Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Transaction isolation</title>
    <para>
        To realize the ACID criteria one first of all needs resource managers which support committing and
        rolling back their effects on a transaction.
        The ACID properties could then be guaranteed if one uses a strict serialization of transactions.
    </para>
    <para>
        Strictly serializing all transactions would, however, place an excessive performance bottleneck on systems.		
        One can then improve performance by serializing only transactions which have some overlap on the resources
        they access. This would, however, still non-ideal from a performance perspective. Furthermore, it would
        also be near impossible to implement directly as one would have to know which resources are required by each transaction 
        and this may differ significantly from scenario to scenario.		
    </para>
    <para>
        Transaction management systems use instead a locking mechanism which enforces an implicit transaction scheduling.
        This is most commonly done via the 2-phase commit protocol.
        In addition to this one typically needs support for resolving deadlocks and for recovering from failures in the
        transaction management system itself. 
    </para>    
</section>    