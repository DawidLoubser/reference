<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" type="xml"?>
<!-- author: Fritz Solms -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Dead-lock detection</title>
    <para>
        The two most commonly used techniques for deadlock detection are
        <itemizedlist>
            <listitem><formalpara>
                <title>Time-out based deadlock detection:</title>
                <para>
                    This very deadlock detection mechanism simply rolls back any transaction which has been in a wait 
                    state for longer then some transaction timeout period. This mechanism is widely used for distributed
                    transactions. However, timeout based deadlock detection may abort some unexpectantly long running
                    transactions, even if they are not deadlocked.
                </para>
            </formalpara></listitem>
            <listitem><formalpara>
                <title>Wait graph analysis</title>
                <para>
                    This algorithm analyses all waiting transactions for their dependencies and constructs a wait-for graph.
                    In the graph nodes are waiting transactions while edges are waiting situations. This mechanism is
                    guaranteed to detect only true deadlocks, but is difficult to implement for distributed transactions. 
                </para>
            </formalpara></listitem>
        </itemizedlist>
    </para>	
</section>    