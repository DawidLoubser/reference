<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->

<section id="resources.information.technologies.tools.versionControl._cvs.commands.import"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Importing into a CVS Project</title>
  <para>
    To put projects under CVS control, you import the files into CVS. To this
    end you will have to execute the <command>import</command> command 
    from the source directory. The syntax of the command is as follows:
    <synopsis><![CDATA[
cvs -d <repositoryDirectory> import -m "log message" <projectName> 
  <vendorTag> <releaseTag>
    ]]></synopsis>
    The vendor and release tags are not important at this stage. We shall
    discuss vendor branching and tagging later. All CVS commands which
    modify the contents of the repository receive a <emphasis>log message</emphasis>
    which enables the modifier (<abbrev>e.g.</abbrev> developer) to provide
    a description of the modification performed).
  </para>
  <para>
    For example, if we wish to import all the files from a directory
    <filename>za</filename> into a CVS project, 
    <literal>LoanCalculator</literal> we can  go to the directory
    containing <filename>za</filename> and import its
    contents into the repository via
    <synopsis><![CDATA[
cvs -d /usr/local/cvs/testRepository/ import -m "initial import into CVS" 
LoanCalculator za stcd start    
    ]]></synopsis>
  </para>
  
</section>

