<?xml version="1.0" encoding="UTF-8"?>

<section id="resources.information.platforms.linux.fileSystem.introduction"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Introduction</title>
  
  <para>
    File system support is one of the core responsibilities of an operating system. Linux has
    support for more file systems than any other operating system.
  </para>

  <section>
    <title>What is a file system</title>
    <para>
      A file system can often be seen as a <emphasis>partition</emphasis> which is
      <itemizedlist>
        <listitem><para>
           is formatted in a specific way, initialization the structure required for that file system,
        </para></listitem>
        <listitem><para>
          and which provides services through which information can be written to the file
          system and retrieved from the file system.
        </para></listitem>
      </itemizedlist>
    </para>
    <para>
      Linux uses an object-oriented approach to file systems. A file system is an object which
      has data structures which keep track of the information required to access the data
      on the file system and which provides services to retrieve and manipulate the information
      stored in the file system.
    </para>
  </section>
  
  <section>
    <title>The purpose of a file system</title>
    <para>
      The file system <emphasis>abstracts applications from physical device specifics</emphasis>. 
      Different file systems provide similar services which may, however, be realized in very 
      different ways. This has, however, little affect application developers.
    </para>
    <para>
      Besides abstracting application developers from device specifics, a file system also aims to
      fulfill a number of further goals:
      <itemizedlist>
        <listitem><formalpara>
          <title>The file system should be recoverable</title>
          <para>
            While the data which is being written during a system crash (for example 
            a power failure) may get partially lost, the file system itself and the other
            data should be be stable.
          </para>
        </formalpara></listitem>
        <listitem><formalpara>
          <title>The file system must be efficient</title>
          <para>
            It must be efficient in
            <itemizedlist>
              <listitem><para>providing efficient access to data,</para></listitem>
              <listitem><para>implementing writing operations efficiently and</para></listitem>
              <listitem><para>in using the storage space efficiently.</para></listitem>
            </itemizedlist>
            <note>
              <para>
                In Linux a delete request is only finalized, <abbrev>i.e.</abbrev> the data
                is only removed, once all applications using the file have closed the file.
              </para>
            </note>
          </para>
        </formalpara></listitem>
      </itemizedlist>  
    </para>
  </section>
  
</section>
