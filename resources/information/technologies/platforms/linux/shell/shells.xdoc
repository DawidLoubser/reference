<section id="resources.information.platforms.linux.shell.shells"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">

	<title>Shells</title>
	<para>
	     A shell is a command interface to the operating system kernel. Commands entered 
          by the user are interpreted by the shell. Generally shells provide the the following features 
	</para>
	<itemizedlist>
	<listitem>
	<formalpara>
		<title>Command line user interface</title>
		<para>
		A shell provides channels for a user to interact with the application running within the shell.   
		</para>
	</formalpara>
	</listitem>
	
	<listitem>
	<formalpara>
		<title>Environment configuration</title>
		<para>
		  Many applications rely on environment variables which allow for the system wide or user 
		  specific configuration of parameters. Your <quote>favourite</quote> editor is set in 
		  the <quote>EDITOR</quote> environment variable. These environment settings can be 
		  configured system wide in the configuration directory (/etc/) or user specific in the users 
		  home directory. Various shells use different files to set the default environment variables. 
		  The commands used to access the environment configuration also vary between the 
		  different shells, although the concepts as well as the variables are often the same.
		</para>
	</formalpara>
	</listitem>
	
	<listitem>
	<formalpara>
		<title>Programming</title>
		<para>
     		Most shells provide the functionality to group a sequence of commands together 
    		into a script. These scripts can be used to perform all sorts of tasks and can make 
    		life so much easier for ourselves. Together with a rich set of utilities, scripts are 
    		capable of performing complex tasks. Scripts can also be nested, which means 
    		that scripts can make use of other scripts. Again the basic principle of providing 
    		tools focusing on a single purpose applies. 
		</para>
	</formalpara>
	</listitem>
	
	<listitem>
	<formalpara>
		<title>I/O redirection</title>
		<para>
		The channeling of input and output is also controlled by the shell. Input to a program can 
		be obtained from a number of sources such as the keyboard, a file or the output of another 
		application. Similarly	output may be redirected to standard out (user), a file or another 
		program. This is achieved by using standard in (stdin), standard out (stdout), redirection 
		and pipes.
		</para>	
	</formalpara>
	</listitem>
	
	</itemizedlist>

	<para>
		The implementation of these features might differ slightly between 
		the various shells but the concepts are the same. 
	</para>
	
	<itemizedlist>
		<listitem>
			<formalpara>
				<title>Bourne shell</title>
				<para>
				The simplest, most basic shell. Most modern shells have built on and extended 
				this shell.	It was developed by Steven Bourne at AT&amp;T Bell Laboratories.
				</para>
			</formalpara>
		</listitem>
		<listitem>
			<formalpara>
				<title>Korn shell</title>
				<para>
				  As the korn shell is available commercially the open source community developed
				  the public domain korn shell (pdksh). 	
				  It was designed and developed by David G. Korn at AT&amp;T Bell Laboratories. 
				</para>
			</formalpara>
		</listitem>
		<listitem>
			<formalpara>
				<title>C shell</title>
				<para>
				  The C shell privides a C-like syntax and has added convenience over the bourne shell. 
				  Amongst the additions over to bourne shell was a history mechanism allowing access  
				  to previously used commands, job control to manage programs running in the 
				  background and interactive file name completion. It was developed at the 
				  University of Berkeley.
				</para>
			</formalpara>
		</listitem>
		<listitem>
			<formalpara>
				<title>tcshell</title>
				<para>
				  tcsh is an enhanced but completely compatible version of the Berkeley UNIX C shell. 
			  	 Amongst the enhancements is a command line editing and spelling correction.
				</para>
			</formalpara>
		</listitem>
		<listitem>
			<formalpara>
				<title>Bourne Again shell</title>
				<para>
				  The bourne again shell (bash) is the default shell on most linux distributes. 
				  It is fully compatible with the bourne shell but also includes many additional 
				  features. Bash included many features from the korn shell as well as the c shell.
				</para>
			</formalpara>
		</listitem>
	
		</itemizedlist>
		
		
		<section>
			<title>Common features</title>
			<para>
			Although each shell has unique features, several commonalities can be found. 
			</para>
			<section>
				<title>Environment Variables</title>
				<para>
				A set of environment variables are shared between the more popular shells.
				</para>
				<itemizedlist>
				<listitem>
				<formalpara>
					<title>PATH : </title>
					<para>
					A colon (:) separated list of directions which are searched for executables
					</para>
				</formalpara>	
				</listitem>
				<listitem>
					<formalpara>
						<title>PWD : </title>
						<para>
						Current working directory
						</para>
					</formalpara>
				</listitem>	
				<listitem>
					<formalpara>
						<title>TERM : </title>
						<para>
						Terminal type currently used
						</para>
					</formalpara>
				</listitem>	
				<listitem>
					<formalpara>
						<title>USER : </title>
						<para>
						User id of the currently logged on user
						</para>
					</formalpara>
				</listitem>	
				<listitem>
					<formalpara>
						<title>EDITOR : </title>
						<para>
						Preferred terminal editor
						</para>
					</formalpara>
				</listitem>	
				<listitem>
					<formalpara>
						<title>HOSTNAME : </title>
						<para>
						The hostname of the workstation
						</para>
					</formalpara>
				</listitem>	
				<listitem>
					<formalpara>
						<title>SHELL : </title>
						<para>
						The path to the shell executable currently in use
						</para>
					</formalpara>
				</listitem>	
				</itemizedlist>
			</section>	
		</section>	
		
		<section>
			<title>Selecting a shell</title>
			<para>
			  The users default shell is typically stored in the <quote>/etc/passwd</quote> 
			  file, which is only accessible by the root user. This file is covered in more detail 
			  later on in the security section. 
			</para>
			<programlisting>
...
alex:x:502:100:Alexander Hartner:/home/alex:/usr/bin/tcsh
solms:x:503:100:Solms Training &amp; Consulting:/home/solms:/bin/bash
ldap:x:76:70:User for OpenLDAP:/var/lib/ldap:/bin/bash
named:x:44:44:Name server daemon:/var/lib/named:/bin/false
squid:x:31:65534:WWW-proxy squid:/var/cache/squid:/bin/false
...
			</programlisting>
		  <para>	
			To change your own shell, the <emphasis role="strong">chsh</emphasis> 
			command can be used. The default shell for users on Linux is bash.
			</para>
			<programlisting>
alex@chameleon:~> chsh
Changing login shell for alex.
Password: 
Enter the new value, or press return for the default
        Login Shell [/bin/bash]: /usr/bin/tcsh
Shell changed.
alex@chameleon:~> 
			</programlisting>
		</section>	

		<section>
			<title>Which shell is right for me ?</title>
			<para>
				The default shell allocated to newly created users is the bash, and provides a 
				user-friendly and intuitive interface to the user. Before trying out features offered 
				by other shells, novice users are suggested to first find their footing using bash. 
				Once the many commands available have been managed and a certain level of 
				confidence has been established, feel free to explore other shells. 
			</para>
		</section>	

		<section>
			<title>Configuring your prompt</title>
			<para>
			The prompt is defined by three environment variables, <emphasis role="strong">PS1</emphasis>, <emphasis role="strong">PS2</emphasis>, <emphasis role="strong">PS3</emphasis> and <emphasis role="strong">PS4</emphasis>. PS1 represents the default prompt, PS2 is the secondary prompt, prompting for additional input. PS3 is used in a select loop. PS4 is shown on each line of a shell script executed with the -x option. To modify the prompt environment variable set the new value in your shells startup scripts. For bash, for example, a good place to set your prompt is ~/.bashrc. 
			</para>
			<itemizedlist>
				<listitem>
					<formalpara>
						<title>\u</title>
						<para>The username</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\h</title>
						<para>The section of the hostname up to the first full stop</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\H</title>
						<para>The full hostname</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\w</title>
						<para>The username</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\d</title>
						<para>Current date in Weekday, Month Day format</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\D{FORMAT}</title>
						<para>
						Current date formatted as specified. (see <emphasis role="strong">man strftime) for full information on format specification</emphasis>
						</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\n</title>
						<para>A newline character</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\j</title>
						<para>The number of jobs currently managed by the shell</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\e</title>
						<para>The escape character</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\r</title>
						<para>carriage return</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\t</title>
						<para>Current time in 12 hour format (hh:mm:ss)</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\T</title>
						<para>Current time in 24 hour format (hh:mm:ss)</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\w</title>
						<para>current working directory</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\!</title>
						<para>history index key of current command</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\#</title>
						<para>command number of command</para>
					</formalpara>
				</listitem>
				<listitem>
					<formalpara>
						<title>\[ \]</title>
						<para>begin and end of sequence of non-printable characters</para>
					</formalpara>
				</listitem>
			</itemizedlist>
		<programlisting>
bumblebee root # export PS1="\u@\h \T &gt;"
root@bumblebee 08:45:34 >
		</programlisting>
	</section>	
</section>	
