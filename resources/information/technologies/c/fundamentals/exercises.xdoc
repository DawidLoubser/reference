<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->
<section id="resources.information.technologies.c.fundamentals.exercises"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Exercises</title>
  <para>
    <orderedlist>
      <listitem><para>
        Write a program which reads in data values and reports the running
        average accross the data values read in so far.
      </para></listitem>  
      
      <listitem id="runningAverageMain"><para>
        Write a function, <command>even</command> which takes an integer
        as argument and returns 1 (true) if the integer is even and 0 (false)
        otherwise. Write a <command>main</command> routine which tests this
        function.
      </para></listitem>
      
      <listitem><para>
        Consider integers <command>k=3</command>, <command>l=13</command> and 
        <command>m=128</command> and calculate (by hand) the following binary 
        expressions:
        <programlisting>
          (k &lt;&lt; 2) &amp; l
          ((k &gt;&gt; 1) ^ l) | m
        </programlisting>
      </para></listitem>  
      
      <listitem><para>
        Modify exercise <xref linkend="runningAverageMain"/> such that you have a 
        a function, <command> float addToRunningAverage(int newDataPoint)</command>
        which you call repetitatively and which keeps track and reports the running
        average.
      </para></listitem>
      
      <listitem><para>
        Write a function which takes as arguments a <command>char</command>
        representing a byte and an integer representing the bit number.
        The function should return 1 if the specified bit number is set
        in the supplied byte and false otherwise.Write a <command>main</command> 
        routine which tests this function.
      </para></listitem>  
      <listitem><para>
        Write a recursive implementation of the power function discussed in
        <xref linkend="power.c"/>.
      </para></listitem>  
    </orderedlist>  
  </para>  
</section>
