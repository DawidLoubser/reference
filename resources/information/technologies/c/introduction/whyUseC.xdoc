<?xml version="1.0" encoding="UTF-8"?>
<!--
<!DOCTYPE section SYSTEM "file:/opt/share/xml/Oxygen/docbook/dtd/docbookx.dtd">
-->    
<section id="resources.information.technologies.c.introduction.whyUseC"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:noNamespaceSchemaLocation="http://www.solms.co.za/schemas/doc/solmsDoc/solmsDoc.xsd" 
         xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Why Use C?</title>

  <para>
    <emphasis>C</emphasis> is a relatively old language, yet it has survived reasonably for more
    than 3 decades. It has also been the foundation for a range of other languages including
    <emphasis>Pascal</emphasis> and its derivatives, <emphasis>C++</emphasis> and
    hence <emphasis>Java</emphasis>. Today <emphasis>C</emphasis> is largely used for
    low-level development and for developing for the Unix-based platforms (e.g. Linux). There
    are several reasons why <emphasis>C</emphasis> as a procedural language has survived so
    well:
    <blockquote>
      <itemizedlist>
          <listitem><formalpara><title>C is a powerful and flexible language:</title><para>
             <emphasis>C</emphasis> is used from writing code for very low-level and resource-constrained 
             devices to games, graphics applications, spreadsheets and even compilers and run-time environments
             for other languages (e.g. Java). A range of god optimizing <emphasis>C</emphasis> compilers exist
             and one write very efficient <emphasis>C</emphasis> code which compiles to very efficient binary
             code. In this course we shall show that one can even program <emphasis>C</emphasis> in an
             object-oriented way.
           </para></formalpara></listitem>
           <listitem><formalpara><title>C is reasonably portable:</title><para>
             The ANSI-<emphasis>C</emphasis> standard ensures that <emphasis>C</emphasis> ports relatively 
             well across hardware platforms like microchips, limited devices like mobile phones  and PDAs,  
             personal computers and servers and main frames and across operating systems like Unix and its 
             derivatives like Linux, Palm OS, Symbian OS and Windows. Unlike <emphasis>Java</emphasis> code, 
             <emphasis>C</emphasis> code is however not fully portable, partially because the range and resolution
             of the basic data types are not part of the ANSI standard.
           </para></formalpara></listitem>
           <listitem><formalpara><title>C is a compact language:</title><para>
               <emphasis>C</emphasis> has only few keywords and language constructs and learning the language is
               simple. Learning good <emphasis>C</emphasis> development practices and the ability of mapping
               complex object-oriented designs onto <emphasis>C</emphasis> requires, however, a lot of technical
               skills.
           </para></formalpara></listitem>
           <listitem><formalpara><title>C is modular:</title><para>
               C is modular in that individual functions or groups of functions can be packaged individual source 
               and compiled units and can be reused across applications.
           </para></formalpara></listitem>
      </itemizedlist>
    </blockquote>  
  </para>
</section>
